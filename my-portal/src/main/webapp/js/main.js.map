{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-prescription/create-prescription.component.css","webpack:///./src/app/create-prescription/create-prescription.component.html","webpack:///./src/app/create-prescription/create-prescription.component.ts","webpack:///./src/app/create-prescription/custom-fee-insert.html","webpack:///./src/app/create-prescription/dialog-tooth-cf.html","webpack:///./src/app/dash-routing.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/material-test/material-test.component.css","webpack:///./src/app/material-test/material-test.component.html","webpack:///./src/app/material-test/material-test.component.ts","webpack:///./src/app/models/models.ts","webpack:///./src/app/print-prescription/print-prescription.component.css","webpack:///./src/app/print-prescription/print-prescription.component.html","webpack:///./src/app/print-prescription/print-prescription.component.ts","webpack:///./src/app/services/commonservice.service.ts","webpack:///./src/app/services/dummyresponse.ts","webpack:///./src/app/services/httpcomm.service.ts","webpack:///./src/app/services/treatment-plan.service.ts","webpack:///./src/app/snackhelper/snackbar-model.ts","webpack:///./src/app/snackhelper/snackhelper.component.css","webpack:///./src/app/snackhelper/snackhelper.component.html","webpack:///./src/app/snackhelper/snackhelper.component.ts","webpack:///./src/app/treatment-plan/treatment-plan.component.css","webpack:///./src/app/treatment-plan/treatment-plan.component.html","webpack:///./src/app/treatment-plan/treatment-plan.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\n  WORK IN PROGRESS!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\"","module.exports = \"<mat-sidenav-container\\n    class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\n  <mat-sidenav #sidenav (keydown.escape)=\\\"sidenav.close()\\\" disableClose>\\n    <!-- <p><button mat-button (click)=\\\"close('toggle button')\\\">Toggle</button></p> -->\\n    <p *ngFor = \\\"let menu of navMenus\\\">\\n      <button mat-button routerLink={{menu.path}} (click) = \\\"sidenav.close()\\\">{{menu.name}}</button>   \\n    </p>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <p>\\n      <button mat-icon-button (click)=\\\"sidenav.open()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">home</mat-icon>\\n      </button>\\n    </p>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n<!-- <nav>\\n  <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n  <a routerLink=\\\"/admin\\\">Admin</a>\\n</nav> -->\\n\\n\"","import { Component,ViewChild } from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport { DashRoutingModule } from './dash-routing.module'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  @ViewChild('sidenav') sidenav: MatSidenav;\n  title :string = 'eps-dashboard';\n  reason :string = '';\n  navMenus = [\n    {\"name\": \"Dashboard\", \"path\":\"dashboard\"},\n    {\"name\": \"Admin\", \"path\":\"admin\"},\n    {\"name\": \"Test\", \"path\":\"test\"}\n  ]\n  constructor(){\n  }\n\n  close(reason: string) {\n    this.reason = reason;\n    this.sidenav.close();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport { DashRoutingModule } from './/dash-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { SnackhelperComponent } from './snackhelper/snackhelper.component';\nimport { CreatePrescriptionComponent } from './create-prescription/create-prescription.component';\nimport { MaterialTestComponent } from './material-test/material-test.component';\nimport { DialogToothClinicalfindings, CustomFeeInsertionDialog } from './create-prescription/create-prescription.component';\nimport { PrintPrescriptionComponent } from './print-prescription/print-prescription.component';\nimport { TreatmentPlanComponent } from './treatment-plan/treatment-plan.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AdminComponent,\n    SnackhelperComponent,\n    CreatePrescriptionComponent,\n    MaterialTestComponent,\n    DialogToothClinicalfindings,\n    CustomFeeInsertionDialog,\n    PrintPrescriptionComponent,\n    TreatmentPlanComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    FormsModule, \n    ReactiveFormsModule,\n    HttpClientModule,\n    DashRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [SnackhelperComponent,DialogToothClinicalfindings,CustomFeeInsertionDialog]\n})\nexport class AppModule { }\n","module.exports = \".example-stretched-tabs {\\r\\n  max-width: 1000px;\\r\\n}\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-card-parent {\\r\\n  /* max-width: 800px; */\\r\\n  min-width: 50px;\\r\\n  margin-left: 50px;\\r\\n  margin-top: 30px;\\r\\n  width : 100%;\\r\\n}\\r\\n.example-card {\\r\\n  /* max-width: 800px; */\\r\\n  min-width: 50px;\\r\\n  margin: 30px;\\r\\n  /* width : 100%; */\\r\\n}\\r\\n.expansion-margin {\\r\\n  max-width: 500px;\\r\\n  margin-left: 150px;\\r\\n  margin-top: 30px;\\r\\n}\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n.example-margin {\\r\\n  /* margin: 0 10px; */\\r\\n  margin-top: 20px;\\r\\n  margin-left : 10px;\\r\\n  margin-right: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n.mat-radio-button ~ .mat-radio-button {\\r\\n  padding: 36px;\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\ntr.example-detail-row {\\r\\n  height: 0;\\r\\n}\\r\\ntr.example-element-row:not(.example-expanded-row):hover {\\r\\n  background: #f5f5f5;\\r\\n}\\r\\ntr.example-element-row:not(.example-expanded-row):active {\\r\\n  background: #efefef;\\r\\n}\\r\\n.example-element-row td {\\r\\n  border-bottom-width: 0;\\r\\n}\\r\\n.example-element-detail {\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n}\\r\\n.example-element-diagram {\\r\\n  min-width: 80px;\\r\\n  border: 2px solid black;\\r\\n  padding: 8px;\\r\\n  font-weight: lighter;\\r\\n  margin: 8px 0;\\r\\n  height: 104px;\\r\\n}\\r\\n.example-element-symbol {\\r\\n  font-weight: bold;\\r\\n  font-size: 40px;\\r\\n  line-height: normal;\\r\\n}\\r\\n.example-element-description {\\r\\n  padding: 16px;\\r\\n}\\r\\n/* .example-element-description-attribution {\\r\\n  opacity: 0.5;\\r\\n} */\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-half-width{\\r\\n  width : 50%;\\r\\n}\\r\\n.example-grid-margin{\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 10px;\\r\\n  margin-right: 50px;\\r\\n}\\r\\n.rcorners2 {\\r\\n  border-radius: 25px;\\r\\n  border: 2px solid #73AD21;\\r\\n  padding-left: 4px; \\r\\n  /* width: 200px;\\r\\n  height: 150px;     */\\r\\n  margin-left: 4px;\\r\\n  margin-right: 4px;\\r\\n}\\r\\n/* label > input{ HIDE RADIO \\r\\n  visibility: hidden; Makes input not-clickable\\r\\n  position: absolute; Remove input from document flow\\r\\n}\\r\\nlabel > input { IMAGE STYLES\\r\\n  cursor:pointer;\\r\\n  border:2px solid transparent;\\r\\n}\\r\\nlabel > input:checked { (RADIO CHECKED) IMAGE STYLES\\r\\n  border:20px solid #f00;\\r\\n} */\\r\\n/* Fees table properties */\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n.mat-table-sticky {\\r\\n  border-top: 1px solid #e0e0e0;\\r\\n}\\r\\n.icon-search {\\r\\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z%22%2F%3E%3Cpath d%3D%22M0 0h24v24H0z%22 fill%3D%22none%22%2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\\r\\n.icon-refresh {\\r\\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z%22%2F%3E%3Cpath d%3D%22M0 0h24v24H0z%22 fill%3D%22none%22%2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\\r\\n.icon-print {\\r\\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z%22%2F%3E%3Cpath d%3D%22M0 0h24v24H0z%22 fill%3D%22none%22%2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\\r\\n.icon-add-fee {\\r\\n  background: url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22utf-8%22%3F%3E%3C!-- Generator%3A Adobe Illustrator 16.0.0%2C SVG Export Plug-In . SVG Version%3A 6.00 Build 0)  --%3E%3C!DOCTYPE svg PUBLIC %22-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN%22 %22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.1%22 id%3D%22Layer_1%22 x%3D%220px%22 y%3D%220px%22 width%3D%22480px%22 height%3D%22480px%22 viewBox%3D%220 0 512 512%22 enable-background%3D%22new 0 0 512 512%22 xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%09%3Cg%3E%09%09%3Cg%3E%09%09%09%3Cpath fill%3D%22%23D6E5E5%22 d%3D%22M389.2%2C204.5l-0.1-7.2c-29-0.9-57.8%2C0.8-86.7%2C2.5c-0.1-0.8-0.2-1.5-0.4-2.3h-0.4c0-0.9%2C0-1.7%2C0-2.6     c-0.1-0.4-0.1-0.8-0.2-1.2c0-1.3-0.1-2.6-0.2-3.9c0.1%2C0%2C0.3%2C0%2C0.4%2C0c0-23.1%2C0.2-46.2%2C0.2-69.3c-20.9-0.1-41.8-1-62.8-1h-39.6     c-0.1%2C0.7-0.2%2C1.5-0.2%2C2.2c-0.2%2C3.7-0.2%2C7.3-0.1%2C11c0.1%2C7%2C0.4%2C14%2C0.6%2C21c0.4%2C13.2%2C0.9%2C26.4%2C1.4%2C39.6h0l0%2C0c0%2C1.4%2C0.1%2C2.8%2C0.1%2C4.1     h-0.7l-0.8%2C5.8c-27.6%2C0.3-55.2%2C0.2-82.8%2C0.4c0%2C20.9-0.6%2C41.8-0.5%2C62.8L117%2C306c0.7%2C0.1%2C1.5%2C0.1%2C2.2%2C0.2c3.7%2C0.1%2C7.3%2C0.1%2C11%2C0     c7-0.1%2C14-0.5%2C21-0.7c16.3-0.6%2C33.8-1.4%2C50.1-2l-0.3%2C2h0.1c0%2C2.1%2C0%2C4.3-0.1%2C6.4c-0.2%2C26-0.7%2C52.1%2C1.5%2C78     c17.6%2C1.7%2C35.9%2C1.4%2C53.4%2C0.4c13.9-0.8%2C29.7-3.4%2C43%2C2.2h7.2c1.1-29.1-0.4-58-1.8-87h0.6v-2.4c1.5%2C0%2C2.9%2C0%2C4.4%2C0     c26%2C0%2C52.1%2C0.3%2C78-2.1c1.5-17.6%2C1.1-35.9%2C0-53.4C386.5%2C233.6%2C383.7%2C217.8%2C389.2%2C204.5z%22%2F%3E%09%09%3C%2Fg%3E%09%3C%2Fg%3E%09%3Cg%3E%09%09%3Cg%3E%09%09%09%3Cpath fill%3D%22%2371C598%22 d%3D%22M474.2%2C161.7c-16.1-46.6-46.7-87.1-91.3-109.6C332%2C26.5%2C272%2C24.1%2C216.5%2C32.9C166.8%2C40.8%2C114.3%2C58.8%2C77%2C94     c-19.6%2C18.5-34.7%2C40.9-42.7%2C66.8c-8%2C26-10.4%2C53.1-12.1%2C80.1c-0.1%2C1.1-0.4%2C2-1%2C2.7c0%2C0.2%2C0.1%2C0.5%2C0.1%2C0.8     c0%2C52.9-1.1%2C108.3%2C30.1%2C153.9c25.3%2C37.1%2C64.5%2C61.5%2C107.2%2C73.7c88%2C25.2%2C194.2%2C9.6%2C264.9-50.8C497.6%2C357.9%2C504.4%2C248.9%2C474.2%2C161.7     z M397.6%2C251.9c0.3%2C18.2%2C1.2%2C36.4-0.6%2C54.6c-0.2%2C2.2-2.4%2C3.8-4.5%2C4.1c-25.7%2C2.7-51.7%2C2.6-77.6%2C2.6c1.4%2C28%2C2.5%2C56%2C1.2%2C84     c-0.1%2C2.5-1.6%2C5.4-4.6%2C5.4h-15c-1.7%2C0-3.1-0.7-4-1.8c-12.7-4.1-28-0.3-40.8-0.2c-18.2%2C0.1-36.4%2C0.9-54.6-1.1     c-2.2-0.2-3.8-2.4-4-4.5c-2.6-27-2.2-54.2-1.9-81.3c-14.8%2C0.6-29.6%2C1.5-44.4%2C2.1c-7.9%2C0.3-15.9%2C0.7-23.9%2C0.6     c-4.1-0.1-12.4%2C0.7-14.9-3.7c-0.2-0.4-0.4-0.7-0.5-1.1c-0.2-0.6-0.4-1.2-0.4-1.9l-0.3-42.2c-0.2-22.4%2C0.6-44.8%2C0.5-67.2     c0-0.5%2C0.1-0.9%2C0.2-1.3c-0.2-2.5%2C1.2-5%2C4.4-5.1c26.1-0.2%2C53.4-0.1%2C79.8-0.3c-0.5-14.8-1.2-29.6-1.7-44.3     c-0.3-7.9-0.6-15.9-0.4-23.9c0.1-4.1-0.6-12.4%2C3.8-14.8c0.4-0.2%2C0.7-0.4%2C1.1-0.5c0.6-0.2%2C1.2-0.4%2C1.9-0.4h42.2     c22.4%2C0%2C44.8%2C1%2C67.2%2C1c0.5%2C0%2C0.9%2C0.1%2C1.3%2C0.2c2.5-0.2%2C5%2C1.2%2C5%2C4.4c0%2C24.7-0.2%2C49.4-0.3%2C74.1c27.3-1.5%2C54.6-2.8%2C82-1.7     c2.5%2C0.1%2C5.4%2C1.6%2C5.4%2C4.6l0.1%2C13.5c0%2C0%2C0%2C0%2C0%2C0.1l0%2C1.5c0%2C1.7-0.7%2C3.1-1.8%2C4C393.4%2C223.8%2C397.4%2C239%2C397.6%2C251.9z%22%2F%3E%09%09%3C%2Fg%3E%09%3C%2Fg%3E%09%3Cg%3E%09%09%3Cg%3E%09%09%09%3Cpath d%3D%22M487.9%2C168.7c-14.2-46.9-40.9-88.3-82-115.7c-46.4-31-105.3-38.4-159.8-34.4c-51.7%2C3.8-104.6%2C17.9-148.6%2C46     c-21.6%2C13.8-40.9%2C31.9-55%2C53.4C27.7%2C140.5%2C20%2C166.6%2C16%2C193.2c-2.3%2C15.1-3.4%2C30.3-4.4%2C45.6c-0.1%2C0.9%2C0.1%2C1.8%2C0.4%2C2.6     c-0.9%2C0.9-1.5%2C2.2-1.5%2C3.8c0%2C30.1-0.6%2C60.4%2C4.6%2C90.2c4.8%2C27.1%2C15.2%2C52.9%2C31.6%2C75.1c29.2%2C39.5%2C73.5%2C63.3%2C120.4%2C75     c88.9%2C22.2%2C194.2%2C3.7%2C264.5-57.1C505.6%2C364.4%2C514.8%2C257.6%2C487.9%2C168.7z M423.5%2C421.2c-70.8%2C60.4-176.9%2C76-264.9%2C50.8     c-42.7-12.2-81.9-36.6-107.2-73.7c-31.1-45.6-30.1-101-30.1-153.9c0-0.3%2C0-0.5-0.1-0.8c0.5-0.7%2C0.9-1.6%2C1-2.7     c1.7-27%2C4.1-54.1%2C12.1-80.1C42.2%2C134.9%2C57.4%2C112.4%2C77%2C94c37.3-35.2%2C89.8-53.2%2C139.6-61.1C272%2C24.1%2C332%2C26.5%2C383%2C52.1     c44.6%2C22.5%2C75.1%2C63.1%2C91.3%2C109.6C504.4%2C248.9%2C497.6%2C357.9%2C423.5%2C421.2z%22%2F%3E%09%09%3C%2Fg%3E%09%3C%2Fg%3E%09%3Cg%3E%09%09%3Cg%3E%09%09%09%3Cpath d%3D%22M397.4%2C211.1c1.1-0.9%2C1.8-2.2%2C1.8-4l0-1.5c0%2C0%2C0%2C0%2C0-0.1l-0.1-13.5c0-3-2.9-4.5-5.4-4.6c-27.4-1.1-54.7%2C0.1-82%2C1.7     c0-24.7%2C0.3-49.4%2C0.3-74.1c0-3.2-2.5-4.6-5-4.4c-0.4-0.1-0.9-0.2-1.3-0.2c-22.4%2C0-44.8-1-67.2-1h-42.2c-0.7%2C0-1.4%2C0.1-1.9%2C0.4     c-0.4%2C0.1-0.7%2C0.3-1.1%2C0.5c-4.4%2C2.5-3.7%2C10.7-3.8%2C14.8c-0.2%2C8%2C0.1%2C15.9%2C0.4%2C23.9c0.5%2C14.8%2C1.3%2C29.5%2C1.7%2C44.3     c-26.4%2C0.2-53.6%2C0.1-79.8%2C0.3c-3.2%2C0-4.6%2C2.6-4.4%2C5.1c-0.1%2C0.4-0.2%2C0.9-0.2%2C1.3c0.1%2C22.4-0.7%2C44.8-0.5%2C67.2l0.3%2C42.2     c0%2C0.7%2C0.1%2C1.4%2C0.4%2C1.9c0.1%2C0.4%2C0.3%2C0.7%2C0.5%2C1.1c2.5%2C4.4%2C10.8%2C3.6%2C14.9%2C3.7c8%2C0.2%2C15.9-0.2%2C23.9-0.6c14.8-0.6%2C29.6-1.5%2C44.4-2.1     c-0.3%2C27.1-0.7%2C54.4%2C1.9%2C81.3c0.2%2C2.1%2C1.8%2C4.3%2C4%2C4.5c18.1%2C2%2C36.4%2C1.2%2C54.6%2C1.1c12.9-0.1%2C28.2-3.9%2C40.8%2C0.2c0.9%2C1.1%2C2.2%2C1.8%2C4%2C1.8     h15c3%2C0%2C4.5-2.8%2C4.6-5.4c1.4-28.1%2C0.2-56-1.2-84c25.9%2C0.1%2C51.9%2C0.1%2C77.6-2.6c2.1-0.2%2C4.3-1.8%2C4.5-4.1c1.9-18.1%2C0.9-36.4%2C0.6-54.6     C397.4%2C239%2C393.4%2C223.8%2C397.4%2C211.1z M387.4%2C247.5c1.1%2C17.6%2C1.6%2C35.8%2C0%2C53.4c-25.9%2C2.4-52%2C2.1-78%2C2.1c-1.5%2C0-2.9%2C0-4.4%2C0v2.4     h-0.6c1.5%2C29%2C2.9%2C58%2C1.8%2C87H299c-13.3-5.6-29.1-3-43-2.2c-17.6%2C1-35.8%2C1.3-53.4-0.4c-2.2-25.9-1.7-52-1.5-78c0-2.1%2C0-4.3%2C0.1-6.4     H201l0.3-2c-16.3%2C0.6-33.8%2C1.4-50.1%2C2c-7%2C0.2-14%2C0.6-21%2C0.7c-3.7%2C0.1-7.3%2C0.1-11%2C0c-0.7%2C0-1.5-0.1-2.2-0.2l-0.3-39.6     c-0.2-20.9%2C0.5-41.9%2C0.5-62.8c27.6-0.2%2C55.2-0.1%2C82.8-0.4l0.8-5.8h0.7c0-1.4-0.1-2.8-0.1-4.1l0%2C0h0c-0.4-13.2-1-26.4-1.4-39.6     c-0.2-7-0.5-14-0.6-21c0-3.7%2C0-7.3%2C0.1-11c0-0.7%2C0.1-1.5%2C0.2-2.2h39.6c20.9%2C0%2C41.8%2C0.8%2C62.8%2C1c0%2C23.1-0.2%2C46.2-0.2%2C69.3     c-0.1%2C0-0.3%2C0-0.4%2C0c0.1%2C1.3%2C0.2%2C2.6%2C0.2%2C3.9c0%2C0.4%2C0.1%2C0.8%2C0.2%2C1.2c0%2C0.9%2C0%2C1.7%2C0%2C2.6h0.4c0.1%2C0.8%2C0.2%2C1.5%2C0.4%2C2.3     c28.9-1.7%2C57.7-3.3%2C86.7-2.5l0.1%2C7.2C383.7%2C217.8%2C386.5%2C233.6%2C387.4%2C247.5z%22%2F%3E%09%09%3C%2Fg%3E%09%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 27px;\\r\\n  display: block;\\r\\n}\\r\\n.svg-icon{\\r\\n  margin: 5px auto auto;\\r\\n  padding: 0;\\r\\n  display: inline-block;\\r\\n  background-repeat: no-repeat no-repeat;\\r\\n  pointer-events: none;\\r\\n}\\r\\n.md-button.logo {\\r\\n  height: 7rem;\\r\\n  width: 7rem;\\r\\n}\\r\\n.logo-image {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n/* Putting table headers in center */\\r\\n/* mat-cell{\\r\\n  display:flex !important;\\r\\n  justify-content:center!important;\\r\\n  \\r\\n}\\r\\n\\r\\nmat-header-cell {\\r\\n  display:flex;\\r\\n  justify-content:center;\\r\\n  text-align: center;\\r\\n} */\"","module.exports = \"<!-- Section to create presciption -->\\n<mat-card class=\\\"example-card-parent\\\">\\n\\n  <mat-tab-group [selectedIndex]=\\\"prescriptionFromControl.value\\\" (selectedIndexChange)=\\\"prescriptionFromControl.setValue($event)\\\"\\n    mat-stretch-tabs class=\\\"example-stretched-tabs mat-elevation-z4\\\">\\n    <mat-tab label=\\\"Basic Info\\\">\\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-content>\\n          <table>\\n            <tr>\\n              <td>\\n                <!-- First Name -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field hintLabel=\\\"Min {{minCharToSearch}} char to search\\\">\\n                    <input matInput cdkFocusInitial maxlength=20 placeholder=\\\"First name\\\" [(ngModel)]=\\\"selectedPatient.firstName\\\"\\n                      (keyup)='fetchPatient($event)'>\\n                    <mat-hint align=\\\"end\\\">{{selectedPatient.firstName?.length || 0}}/20</mat-hint>\\n                  </mat-form-field>\\n                </div>\\n              </td>\\n              <td>\\n                <!-- Last Name -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field hintLabel=\\\"Min {{minCharToSearch}} char to search\\\">\\n                    <input matInput maxlength=20 placeholder=\\\"Last name\\\" [(ngModel)]=\\\"selectedPatient.lastName\\\" (keyup)='fetchPatient($event)'>\\n                    <mat-hint align=\\\"end\\\">{{selectedPatient.lastName?.length || 0}}/20</mat-hint>\\n                  </mat-form-field>\\n                </div>\\n              </td>\\n              <td>\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select from calender\\\" (dateChange)=\\\"dateValidate($event)\\\"\\n                      disabled>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </td>\\n              <td>\\n                <div class=\\\"example-margin\\\">\\n                  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"fetchPatient($event)\\\" matTooltip=\\\"Search\\\">\\n                    <mat-icon aria-label=\\\"Search\\\">search</mat-icon>\\n                  </button>\\n                </div>\\n              </td>\\n              <td>\\n                <div class=\\\"example-margin\\\">\\n                  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"refreshSearch()\\\" matTooltip=\\\"Refresh\\\">\\n                    <mat-icon aria-label=\\\"Refresh\\\">refresh</mat-icon>\\n                  </button>\\n                </div>\\n              </td>\\n            </tr>\\n          </table>\\n          <!-- Loading progressbar -->\\n          <mat-progress-bar *ngIf=\\\"isPatientLoading\\\" color=\\\"color\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n          <!-- Patient list -->\\n          <div *ngIf=\\\"isPatientLoaded\\\">\\n            <table mat-table [dataSource]=\\\"patientDataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\n                <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\n              </ng-container>\\n\\n              <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\n              <ng-container matColumnDef=\\\"expandedDetail\\\">\\n                <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n                  <div class=\\\"example-element-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n                    <div class=\\\"example-element-diagram\\\">\\n                      <div class=\\\"example-element-position\\\"> {{element.firstName}} </div>\\n                      <div class=\\\"example-element-symbol\\\"> {{element.lastName}} </div>\\n                      <div class=\\\"example-element-name\\\"> {{element.age}} </div>\\n                      <div class=\\\"example-element-weight\\\"> {{element.contactNo1}} </div>\\n                      <!-- <span>Image placeholder</span> -->\\n                    </div>\\n                    <div class=\\\"example-element-description\\\">\\n                      <p>\\n                        {{element.address1}}\\n                      </p>\\n                      <p>\\n                        {{element.address2}}\\n                      </p>\\n                      <p>\\n                        <!-- <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span> -->\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"selectedElement(expandedElement)\\\">\\n                          Select <mat-icon aria-label=\\\"Select\\\">check_circle_outline</mat-icon>\\n                        </button>\\n                      </p>\\n                    </div>\\n                  </div>\\n                </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\" class=\\\"example-element-row\\\"\\n                [class.example-expanded-row]=\\\"expandedElement === element\\\" (mouseenter)=\\\"mouseOverFn(element)\\\">\\n                <!-- (mouseout)=\\\"mouseOutFn(expandedElement)\\\" -->\\n              </tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n            </table>\\n          </div>\\n        </mat-card-content>\\n        <!-- <mat-card-actions>\\n          <button mat-button>LIKE</button>\\n          <button mat-button>SHARE</button>\\n        </mat-card-actions> -->\\n      </mat-card>\\n\\n    </mat-tab>\\n\\n    <!-- \\n      *******************************************************************************************\\n      *******************************************************************************************\\n      ********************************* History Section *****************************************\\n      *******************************************************************************************\\n      *******************************************************************************************\\n     -->\\n\\n    <mat-tab label=\\\"History\\\" [disabled]=\\\"disableTabs\\\">\\n\\n      <!-- Dashboard view -->\\n      <div *ngIf=\\\"dashboardDataSource.data && dashboardDataSource.data.length > 0\\\">\\n        <table mat-table [dataSource]=\\\"dashboardDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n          <!-- ['Date','C/F', 'Treatment Plan', 'Treatment Done', 'Due', 'Next Appo'] -->\\n          <ng-container matColumnDef=\\\"Date\\\">\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Date </th>\\n            <td mat-cell *matCellDef=\\\"let dv\\\"> {{ dv.pHistory.tsCreated | date:'dd/MM/yy hh:mm a' }}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"C/F\\\">\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\n            <td mat-cell *matCellDef=\\\"let dv\\\">\\n              <!--  {{ dv.pHistory.clinicalFindings }} getOrderedClinicalFindings -->\\n              <ul>\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let cf of getOrderedClinicalFindings(dv.pHistory.clinicalFindings)\\\">{{\\n                  cf }}</li>\\n              </ul>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"Treatment Plan\\\">\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Plan </th>\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\n              <ul>\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let tpv of dv.tphv\\\">{{ tpv.tname }} - {{ tpv.toothIndex }}</li>\\n              </ul>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"Treatment Done\\\">\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Done </th>\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\n              <ul>\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let tph of getTreatmentDoneHistoryView(dv.tphv)\\\">{{ tph.tname }}</li>\\n              </ul>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"Due\\\">\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Due </th>\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\n              {{ getDueFee(dv.fbl) }}\\n              <!-- <ul >\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let fb of dv.fbl\\\">{{ fb.amount }}</li>\\n              </ul>    -->\\n            </td>\\n          </ng-container>\\n\\n          <!-- Next Appo -->\\n          <ng-container matColumnDef=\\\"Next Appo\\\">\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Next Appo </th>\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\n              {{ dv.pHistory.nextAppointment | date:'dd/MM/yy hh:mm a' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"dashboardHistoryListColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: dashboardHistoryListColumns;\\\" (click)=\\\"selectPrescription(row)\\\"></tr>\\n        </table>\\n      </div>\\n    </mat-tab>\\n\\n    <!-- \\n      *******************************************************************************************\\n      *******************************************************************************************\\n      ********************************* Prescription Section ************************************\\n      *******************************************************************************************\\n      *******************************************************************************************\\n     -->\\n    <mat-tab label=\\\"Prescription\\\" [disabled]=\\\"disableTabs\\\">\\n      <mat-card id=\\\"printableContent1\\\" class=\\\"example-card\\\">\\n        <mat-card-content>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput [disabled]=\\\"checkIfDisabledToModify()\\\" placeholder=\\\"Chief complaint\\\" [(ngModel)]=\\\"prescriptionHistoryView.chiefComplaint\\\"\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.chiefComplaint\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n              (click)=\\\"prescriptionHistoryView.chiefComplaint=''\\\" matToolTip=\\\"Clear\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <!-- <button mat-button matPrefix mat-icon-button aria-label=\\\"Add\\\" (click)=\\\"openDialog()\\\" matToolTip=\\\"Add\\\" \\n              [disabled]=\\\"checkIfDisabledToModify()\\\">\\n              <mat-icon>add_circle_outline</mat-icon>\\n            </button> -->\\n            <!-- <textarea matInput placeholder=\\\"Chief findings\\\" disabled [(ngModel)]=\\\"clinicalFindingsView\\\" cdkTextareaAutosize\\n              cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea> -->\\n            <mat-chip-list #chipList1>\\n              <mat-chip *ngFor=\\\"let s of clinicalFindingsViewForUi\\\" selectable=\\\"false\\\" removable=\\\"false\\\">\\n                {{s}}\\n              </mat-chip>\\n              <input (click)=\\\"openDialog()\\\" (keydown)=\\\"openDialog()\\\" placeholder=\\\"Add C/F\\\" [matChipInputFor]=\\\"chipList1\\\"\\n                matChipInputAddOnBlur=\\\"true\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n            </mat-chip-list>\\n          </mat-form-field>\\n\\n          <table>\\n            <tr>\\n              <td>\\n                <!-- Medical History -->\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <mat-select placeholder=\\\"Medical History\\\" [formControl]=\\\"medicalHistoryForm\\\" [(ngModel)]=\\\"medicalHistoryViewModel\\\"\\n                    multiple class=\\\"example-full-width\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n                    <mat-option *ngFor=\\\"let mh of mhList\\\" [value]=\\\"mh\\\">{{mh}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n                <!-- Loading progressbar -->\\n                <mat-progress-bar *ngIf=\\\"mhList == null || mhList?.length <= 0\\\" color=\\\"color\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n              </td>\\n              <td>\\n                <!-- Investigation -->\\n                <mat-form-field hintLabel=\\\"Max 30 characters\\\" class=\\\"example-full-width\\\">\\n                  <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Investigation\\\" [(ngModel)]=\\\"prescriptionHistoryView.investigation\\\"\\n                    [disabled]=\\\"checkIfDisabledToModify()\\\">\\n                  <mat-hint align=\\\"end\\\">{{prescriptionHistoryView.investigation?.length || 0}}/30</mat-hint>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n\\n          <!-- provisionalDiagnosis -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Provisional diagnosis\\\" [(ngModel)]=\\\"prescriptionHistoryView.provisionalDiagnosis\\\"\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.provisionalDiagnosis\\\" matSuffix mat-icon-button\\n              aria-label=\\\"Clear\\\" (click)=\\\"prescriptionHistoryView.provisionalDiagnosis=''\\\" matToolTip=\\\"Clear\\\"\\n              [disabled]=\\\"checkIfDisabledToModify()\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n\\n          <!-- Treatment Plan -->\\n          <!-- <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-chip-list #chipListtrtmnt>\\n              <mat-chip *ngFor=\\\"let s of treatmentPlanListView\\\" selectable=\\\"true\\\" removable=\\\"true\\\" (removed)=\\\"removeChip(s,1)\\\">\\n                {{s}}\\n                <mat-icon matChipRemove>cancel</mat-icon>\\n              </mat-chip>\\n              <input placeholder=\\\"Treatment Plan\\\" [matChipInputFor]=\\\"chipListtrtmnt\\\" matChipInputAddOnBlur=\\\"true\\\"\\n                (matChipInputTokenEnd)=\\\"addTreatmentPlan($event)\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\">\\n            </mat-chip-list>\\n          </mat-form-field> -->\\n\\n          <!-- Treatment plan -->\\n          <span class=\\\"example-margin\\\">Advised Treatment plan</span>\\n          <div *ngIf=\\\"cftMapArray && cftMapArray.length > 0\\\">\\n            <table mat-table [dataSource]=\\\"trtmntPlanListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n              <ng-container matColumnDef=\\\"cf\\\">\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\n                <td mat-cell *matCellDef=\\\"let cftMap\\\"> {{cftMap.clinicalFinding.fname}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"teeth\\\">\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Tooth </th>\\n                <td mat-cell *matCellDef=\\\"let cftMap\\\"> {{cftMap.teeth.toothIndex}}\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"plan\\\">\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Plan </th>\\n                <td mat-cell *matCellDef=\\\"let cftMap; let i = index;\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <div *ngIf=\\\"!checkIfDisabledToModify()\\\">\\n                      <mat-select placeholder=\\\"Select Treatment Plan\\\" [formControl]=\\\"treatmentPlanFormControl\\\" class=\\\"example-full-width\\\"\\n                        (selectionChange)=\\\"updateTrtmntPlanSelect($event.value, i)\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n                        <!-- [(value)] = cftMap.treatmentPlanName -->\\n                        <mat-option *ngFor=\\\"let tpl of treatmentPlanList\\\" [value]=\\\"tpl.trtName\\\">{{tpl.trtName}}</mat-option>\\n                      </mat-select>\\n                    </div>\\n                    <div *ngIf=\\\"checkIfDisabledToModify()\\\">\\n                      <textarea matInput placeholder=\\\"Treatment Plans\\\" cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\"\\n                        cdkAutosizeMaxRows=\\\"5\\\" disabled>{{cftMap.treatmentPlanViewModel}}</textarea>\\n                    </div>\\n                  </mat-form-field>\\n                </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"newPlan\\\">\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> New Plan </th>\\n                <td mat-cell *matCellDef=\\\"let cftMap; let i = index;\\\">\\n                  <input class=\\\"example-full-width\\\"  style=\\\"text-align:center\\\" *ngIf=\\\"cftMap.customTrtmntPlan\\\" matInput placeholder=\\\"Custom plan\\\"\\n                    (input)=\\\"updateTrtmntPlanI($event.target.value, i)\\\" required [disabled]=\\\"checkIfDisabledToModify()\\\">\\n                </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"trtmntPlanListViewColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: trtmntPlanListViewColumns;\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <!-- advice -->\\n          <mat-form-field class=\\\"example-full-width example-grid-margin\\\">\\n            <textarea matInput placeholder=\\\"Advice\\\" [(ngModel)]=\\\"prescriptionHistoryView.advice\\\" cdkTextareaAutosize\\n              cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.advice\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n              (click)=\\\"prescriptionHistoryView.advice=''\\\" matToolTip=\\\"Clear\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n\\n          <!-- Previous Medicines -->\\n          <div *ngIf=\\\"checkIfDisabledToModify()\\\">\\n            <mat-form-field class=\\\"example-full-width example-grid-margin\\\">\\n              <textarea matInput placeholder=\\\"Previous Medicines\\\" [(ngModel)]=\\\"medicineHistoryViewModel\\\"\\n                cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n              </textarea>\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- Medicine -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select placeholder=\\\"Select Medicine\\\" [formControl]=\\\"medicineForm\\\" multiple class=\\\"example-full-width\\\">\\n              <mat-option *ngFor=\\\"let mh of medicineMasterViewList\\\" [value]=\\\"mh\\\">{{mh.medicineName}} {{mh.dosage}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <!-- Next appointment -->\\n          <table>\\n            <tr>\\n              <td>\\n                <span>Next appointment</span>\\n              </td>\\n              <td class=\\\"example-full-width\\\">\\n                <mat-form-field>\\n                  <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"nextAppoPicker\\\" placeholder=\\\"Date\\\"\\n                    (dateChange)=\\\"createNextAppo($event)\\\">\\n                  <!-- <mat-datepicker-toggle matSuffix [for]=\\\"nextAppoPicker\\\"></mat-datepicker-toggle> -->\\n                  <mat-datepicker #nextAppoPicker></mat-datepicker>\\n                </mat-form-field>\\n                <button mat-raised-button (click)=\\\"nextAppoPicker.open()\\\">Choose Date</button>\\n              </td>\\n              <td class=\\\"example-full-width\\\">\\n                <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                  <input matInput maxlength=\\\"2\\\" type=\\\"number\\\" min=0 max=24 placeholder=\\\"Hour\\\" [(ngModel)]=\\\"nextAppoHour\\\"\\n                    (change)=\\\"createNextAppoTime()\\\">\\n                </mat-form-field>\\n              </td>\\n              <td class=\\\"example-full-width\\\">\\n                <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                  <input matInput maxlength=\\\"2\\\" type=\\\"number\\\" min=0 max=59 placeholder=\\\"Minute\\\" [(ngModel)]=\\\"nextAppoMinute\\\"\\n                    (change)=\\\"createNextAppoTime()\\\">\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n\\n          <div>\\n            <div class=\\\"example-margin\\\" align=\\\"right\\\">\\n              <span>Add Fee</span>\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addCustomFee()\\\">\\n                <mat-icon aria-label=\\\"\\\">add_circle</mat-icon>\\n              </button>\\n            </div>\\n            <div *ngIf=\\\"feesConfigListView && feesConfigListView.length > 0\\\">\\n              <table mat-table [dataSource]=\\\"feesConfigListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n                <!-- column list -->\\n                <!-- Id Column -->\\n                <ng-container matColumnDef=\\\"treatmentPlanId\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> # </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.treatmentPlanId}} </td>\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\n                </ng-container>\\n\\n                <!-- baseFee Column -->\\n                <ng-container matColumnDef=\\\"baseFee\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Base </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.baseFee}} </td>\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\n                </ng-container>\\n\\n                <!-- ageGroupId Column -->\\n                <ng-container matColumnDef=\\\"ageGroupId\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> AgeGrp </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.ageGroupId}} </td>\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\n                </ng-container>\\n\\n                <!-- ageGroupPercent Column -->\\n                <ng-container matColumnDef=\\\"ageGroupPercent\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> % </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.ageGroupPercent}} </td>\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\n                </ng-container>\\n\\n                <!-- toothGroupId Column -->\\n                <ng-container matColumnDef=\\\"toothGroupId\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> ToothGrp </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\" style=\\\"text-align:center\\\"> {{fee.toothGroupId}} </td>\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\n                </ng-container>\\n\\n                <!-- toothGroupPercent Column -->\\n                <ng-container matColumnDef=\\\"toothGroupPercent\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> % </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.toothGroupPercent}} </td>\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\n                </ng-container>\\n\\n                <!-- totalFee Column -->\\n                <ng-container matColumnDef=\\\"totalFee\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Fee </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\">\\n                    <mat-form-field>\\n                      <input matInput type=\\\"number\\\" min=1 [(ngModel)]=\\\"fee.totalFee\\\" (change)=\\\"getTotalFee()\\\"\\n                        style=\\\"text-align:center\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n                    </mat-form-field>\\n                  </td>\\n                  <td mat-footer-cell *matFooterCellDef> Total {{totalFees | currency:'&#8377;' }}</td>\\n                </ng-container>\\n\\n                <!-- amountPaid Column -->\\n                <ng-container matColumnDef=\\\"amountPaid\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Paid </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\">\\n                    <mat-form-field>\\n                      <input matInput type=\\\"number\\\" min=1 [(ngModel)]=\\\"fee.amountPaid\\\" (change)=\\\"getTotalFee()\\\"\\n                        style=\\\"text-align:center\\\">\\n                    </mat-form-field>\\n                  </td>\\n                  <td mat-footer-cell *matFooterCellDef> Paid {{totalPaidFees | currency:'&#8377;' }}</td>\\n                </ng-container>\\n\\n                <!-- notes Column -->\\n                <ng-container matColumnDef=\\\"notes\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Note </th>\\n                  <td mat-cell *matCellDef=\\\"let fee\\\">\\n                    <mat-form-field>\\n                      <input matInput [(ngModel)]=\\\"fee.notes\\\" style=\\\"text-align:center\\\">\\n                    </mat-form-field>\\n                    <button mat-button matSuffix mat-icon-button aria-label=\\\"Remove\\\" (click)=\\\"removeFees($index)\\\"\\n                      matToolTip=\\\"Remove\\\">\\n                      <mat-icon>close</mat-icon>\\n                    </button>\\n                  </td>\\n                  <td mat-footer-cell *matFooterCellDef> Due {{totalDueFees | currency:'&#8377;' }} </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"feesConfigListViewColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: feesConfigListViewColumns;\\\"></tr>\\n                <tr mat-footer-row *matFooterRowDef=\\\"feesConfigListViewColumns; sticky: true\\\"></tr>\\n              </table>\\n            </div>\\n          </div>\\n\\n          <!-- Note -->\\n          <div class=\\\"example-margin\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <textarea matInput placeholder=\\\"Notes\\\" [(ngModel)]=\\\"prescriptionHistoryView.note\\\" cdkTextareaAutosize\\n                cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\"></textarea>\\n              <button mat-button *ngIf=\\\"prescriptionHistoryView.note\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n                (click)=\\\"prescriptionHistoryView.note=''\\\" matToolTip=\\\"Clear\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n                <mat-icon>close</mat-icon>\\n              </button>\\n            </mat-form-field>\\n          </div>\\n\\n          <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"createAndSubmitPrescription()\\\" matTooltip=\\\"Print\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\n            <mat-icon aria-label=\\\"Print\\\">print</mat-icon>\\n          </button>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"Treatment Done\\\" [disabled]=\\\"disableTreatmentDoneTab\\\">\\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-content>\\n          <!-- Treatment Done -->\\n          <!-- Need new table and apis to store -->\\n          <app-treatment-plan>Loading..</app-treatment-plan>\\n          <!-- <mat-form-field class=\\\"example-full-width\\\">            \\n            <textarea matInput placeholder=\\\"Treatment done\\\" [(ngModel)]=\\\"prescriptionHistoryView.treatmentDone\\\"\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.treatmentDone\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n              (click)=\\\"prescriptionHistoryView.treatmentDone=''\\\" matToolTip=\\\"Clear\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field> -->\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-tab>\\n\\n  </mat-tab-group>\\n\\n</mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n  ClinicalFindingView, MedicalMaster, Patient, PrescriptionHistoryView,\n  ToothQuadrentView, TreatmentPlan, FeesBreakupView, FeeConfigView,\n  MedicalHistoryView, MedicineHistoryView, DashboardView, MedicineView, TreatmentPlanHistoryView,\n  CompositDialogBoxData, ClinicalFindingToothMapping, DashboardResponse, TreatmentPlanStatus\n} from '../models/models';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarModel } from '../snackhelper/snackbar-model';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { FormControl, Validators } from '@angular/forms';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { HttpcommService } from '../services/httpcomm.service';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material';\nimport { Observable, pipe, of } from 'rxjs';\nimport { startWith, map, tap } from 'rxjs/operators';\nimport { CommonService } from '../services/commonservice.service';\nimport { TreatmentPlanService } from '../services/treatment-plan.service'\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-create-prescription',\n  templateUrl: './create-prescription.component.html',\n  styleUrls: ['./create-prescription.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class CreatePrescriptionComponent implements OnInit {\n\n  selectedPatient: Patient;\n  isPatientLoading: boolean; // Toggle progress bar  \n  isPatientLoaded: boolean; // Toggle patient list\n  isPatientSelected: boolean; // Toggle patient details view\n  isDisabledToModify: boolean //Toggle for exisiting prescription\n  patientDataSource: Patient[];\n  columnsToDisplay = ['firstName', 'lastName', 'age', 'weight'];\n  expandedElement: Patient;\n  prescriptionHistoryView: PrescriptionHistoryView;\n  feesConfigListView: FeeConfigView[];\n\n  medicalHistoryView: MedicalHistoryView;\n\n  medicineMasterViewList: MedicineView[];\n  medicineForm = new FormControl()\n  medicineHistoryViewModel: string\n\n  dashboardView: DashboardView;\n  clinicalFindings: ClinicalFindingView[];\n  toothQuadrents: ToothQuadrentView[];\n  dialogData = new CompositDialogBoxData();\n  mhList: MedicalMaster[] = [];\n\n  medicalHistoryForm = new FormControl();\n  medicalHistoryViewModel: string[];\n\n  cftMapArray: ClinicalFindingToothMapping[];\n  clinicalFindingsViewForUi: string[]; //To show selected clinical findings to tooth mapping\n  treatmentPlanListView: string[]; //To show selected treatment plans\n  treatmentPlanList: TreatmentPlan[] = [];\n  treatmentPlanFormControl = new FormControl()\n\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  feesConfigListViewColumns: string[] = ['treatmentPlanId', 'baseFee', 'ageGroupId', 'ageGroupPercent', 'toothGroupId', 'toothGroupPercent', 'totalFee', 'amountPaid', 'notes'];\n  feesConfigListDataSource: MatTableDataSource<FeeConfigView>;\n  commonService: CommonService;\n\n  disableTabs: boolean = true;\n  //Enable treatment done tab on prescription repeat or after submitting prescription\n  disableTreatmentDoneTab = true;\n  snackModel = new SnackbarModel()\n  ageGroup = \"\"\n  \n  constructor(public snackBar: MatSnackBar,\n    public dialog: MatDialog, public httpCom: HttpcommService, \n    public treatmentPlanService : TreatmentPlanService) { }\n\n  ngOnInit() {\n    this.initializeValiables();\n    this.commonService = new CommonService();\n  }\n\n  prescriptionFromControl = new FormControl(0);\n  minCharToSearch = 3;\n\n  refreshSearch() {\n\n    this.isPatientLoading = false;\n    this.isPatientLoaded = false;\n    this.isPatientSelected = false;\n    this.tabSelection(0);\n    this.disableTabs = true\n    this.initializeValiables()\n    this.patientDataSource = []\n  }\n\n  initializeValiables() {\n    this.selectedPatient = new Patient();\n    this.prescriptionHistoryView = new PrescriptionHistoryView();\n    this.isPatientLoading = false;\n    this.isPatientLoaded = false;\n    this.isPatientSelected = false;\n    this.isDisabledToModify = false;\n    this.dashboardDataSource = new MatTableDataSource<DashboardView>()\n    this.medicalHistoryViewModel = [];\n    this.clinicalFindingsViewForUi = [];\n    this.cftMapArray = [];\n    this.httpCom.getMedicalMaster().subscribe(\n      resp => {\n        if (resp.status == 'SUCCESS') {\n          for (let i = 0; i < resp.resp.length; i++) {\n            this.mhList.push(resp.resp[i].medicalHistoryName);\n          }\n        }\n      }\n    );\n    this.httpCom.getTreatmentPlan().subscribe(\n      resp => {\n        if (resp.status == 'SUCCESS') {\n          this.treatmentPlanList = resp.resp;\n        }\n      }\n    );\n    this.httpCom.getAllMedicine().subscribe(\n      resp => {\n        if (resp.status == 'SUCCESS') {\n          this.medicineMasterViewList = resp.resp;\n        }\n      }\n    )\n    this.treatmentPlanListView = [];\n    this.feesConfigListView = [];\n    this.feesConfigListDataSource = new MatTableDataSource<FeeConfigView>();\n\n  }\n\n  fetchPatient(event: any) {\n    // console.log(event.key);\n    if (\n      (this.selectedPatient.firstName !== undefined && \n        this.selectedPatient.firstName.length >= this.minCharToSearch) ||\n      (this.selectedPatient.lastName !== undefined && \n        this.selectedPatient.lastName.length >= this.minCharToSearch)) {\n      this.searchPatient();\n    } else {\n      if (this.selectedPatient && this.selectedPatient.firstName && this.selectedPatient.firstName.length > 0\n        && this.selectedPatient.lastName && this.selectedPatient.lastName.length > 0\n      ) {\n        this.isPatientLoading = true;\n      } else {\n        this.isPatientLoading = false;\n      }\n      this.isPatientLoaded = false;\n    }\n  }\n\n  dateValidate(event: MatDatepickerInputEvent<Date>) {\n    console.log('Prescptn ' + event.value);\n    let parsedDate = this.commonService.getParsedDate(event.value);\n    if (parsedDate && parsedDate.length == 3) {\n      this.selectedPatient.dobDd = parsedDate[0];\n      this.selectedPatient.dobMm = parsedDate[1];\n      this.selectedPatient.dobYy = parsedDate[2];\n      this.searchPatient();\n    }\n  }\n  searchPatient() {\n    //search patient\n    this.isPatientLoading = true;\n    this.isPatientLoaded = false;\n    this.httpCom.getPatient(this.selectedPatient).subscribe(resp => {\n      if (resp && resp.status === 'SUCCESS') {\n        if (resp.status && resp.status.length > 0)\n          this.patientDataSource = resp.resp;\n      } else {\n        //TODO: navigate to add patient tab\n      }\n      this.isPatientLoaded = true;\n      this.isPatientLoading = false;\n    });\n  }\n\n  mouseOverFn(element: Patient) {\n    this.expandedElement = element;\n  }\n\n  mouseOutFn(element: Patient) {\n    // this.expandedElement = new Patient();\n  }\n\n  selectedElement(element: Patient) {\n    this.selectedPatient = element;\n    this.disableTabs = false;\n    this.tabSelection(1);\n    this.fetchDashboard(element.pid)\n  }\n\n  tabSelection(tabIndex: number) {\n    this.prescriptionFromControl.setValue(tabIndex);\n  }\n\n  /************************************************************************************************************\n   ************************************************************************************************************\n   ***************************************** History Section **************************************************\n   ************************************************************************************************************\n   ************************************************************************************************************\n   */\n\n  dashboardHistoryListColumns = ['Date', 'C/F', 'Treatment Plan', 'Treatment Done', 'Due', 'Next Appo']\n  dashboardDataSource: MatTableDataSource<DashboardView>\n  fetchDashboard(patientId: number) {\n\n    this.httpCom.getDashboardView(patientId).subscribe(\n      resp => {\n        if (resp.status === 'SUCCESS' && resp.resp && resp.resp.length > 0) {\n          this.dashboardDataSource = new MatTableDataSource<DashboardView>()\n          this.dashboardDataSource.data = resp.resp\n        } else {\n          this.tabSelection(2)\n        }\n      }\n    )\n  }\n\n  getDueFee(feesList: FeesBreakupView[]): number {\n    let due = 0\n    feesList.map(fee => {\n      due += fee.amount - fee.amountPaid\n      // error\n    })\n    return due\n  }\n\n  getTreatmentDoneHistoryView(treatmentPlanHistoryViews : TreatmentPlanHistoryView[]) : TreatmentPlanHistoryView[]{\n    return (treatmentPlanHistoryViews && treatmentPlanHistoryViews.length > 0) ? treatmentPlanHistoryViews.filter(tph => tph.status == TreatmentPlanStatus.COMPLETED) : []\n  }\n\n  //populate prescription details\n  selectPrescription(dashboard: DashboardView) {\n\n    this.tabSelection(2)\n    this.isDisabledToModify = true\n    if (dashboard.pHistory) {\n      this.prescriptionHistoryView = dashboard.pHistory\n      if (dashboard.pHistory.clinicalFindings.length > 0) {\n        this.clinicalFindingsViewForUi = dashboard.pHistory.clinicalFindings.split(',')\n      }\n      this.medicalHistoryViewModel = []\n      dashboard.mhv.forEach(e => {\n        this.medicalHistoryViewModel.push(e.medicalHistoryName)\n      })\n      this.medicineHistoryViewModel = ''\n      dashboard.medhv.forEach(e => {\n        this.medicineHistoryViewModel += (e.medicineName + ' ' + e.dosage + '\\n')\n      })\n      //Create cftMapArray\n      console.log('Start of cftMapArray')\n      this.cftMapArray = []\n      if (dashboard.pHistory &&\n        dashboard.pHistory.clinicalFindings &&\n        dashboard.pHistory.clinicalFindings.length > 0) {\n\n        let clinicalFinidingToothComposite = dashboard.pHistory.clinicalFindings.split(',');\n        clinicalFinidingToothComposite.forEach(e => {\n          let clinicalFindingComposite = e.split(' -  ')\n          if (clinicalFindingComposite.length == 2) {\n            let clinicalFindingDerived = clinicalFindingComposite[0];\n            let toothComposite = clinicalFindingComposite[1].split(' ')\n            toothComposite.forEach(tooth => {\n              let cft = new ClinicalFindingToothMapping()\n              cft.teeth = new ToothQuadrentView()\n              cft.clinicalFinding = new ClinicalFindingView()\n              if (!isNaN(parseInt(tooth, 10))) {\n                cft.teeth.toothIndex = parseInt(tooth, 10)\n                cft.clinicalFinding.fname = clinicalFindingDerived\n                let treatmentPlanList = dashboard.tphv.filter(tph => tph.clinicalFinding == clinicalFindingDerived && tph.toothIndex == cft.teeth.toothIndex)\n                if (treatmentPlanList && treatmentPlanList.length > 0) {\n                  cft.treatmentPlanViewModel = treatmentPlanList[0].tname\n                }\n              }\n              this.cftMapArray.push(cft)\n            })\n          }\n        })\n        this.trtmntPlanListDataSource.data = this.cftMapArray\n        \n        //Creating Treatment Plan History Data\n        this.treatmentPlanService.setTreatmentData(dashboard.pHistory.patientId, dashboard.pHistory.prescriptionId, dashboard.tphv)\n        this.disableTreatmentDoneTab = false\n      \n        this.httpCom.getAgeGroup(this.selectedPatient.age.toString()).subscribe(resp =>{\n          if(resp && resp.status === 'SUCCESS'){\n            this.ageGroup = resp.resp.groupId\n          }\n        })\n        dashboard.fbl.forEach(fee => {\n          let feeConf = new FeeConfigView()\n          feeConf.treatmentPlanId = fee.trtmntPlanRef\n          feeConf.totalFee = fee.amount\n          feeConf.amountPaid = fee.amountPaid\n          feeConf.notes = fee.notes\n          feeConf.ageGroupId = this.ageGroup\n          this.feesConfigListView.push(feeConf)\n        })\n        this.getTotalFee()\n        this.feesConfigListDataSource.data = this.feesConfigListView\n      }\n    }\n  }\n\n  checkIfDisabledToModify(): boolean {\n    return this.isDisabledToModify\n  }\n\n  /************************************************************************************************************\n   ************************************************************************************************************\n   ***************************************** Prescription Section *********************************************\n   ************************************************************************************************************\n   ************************************************************************************************************\n   */\n  getOrderedClinicalFindings(cf: string): string[] {\n    if (cf && cf.length > 0) return cf.split(',')\n  }\n\n  //Prescription Section\n  openDialog(): void {\n    this.httpCom.getClinicalFindings().subscribe(\n      response => {\n        if (response.status == 'SUCCESS') {\n          this.clinicalFindings = response.resp;\n          this.httpCom.getToothQuadrents().subscribe(\n            response => {\n              if (response.status == 'SUCCESS') {\n                this.toothQuadrents = response.resp;\n                this.dialogData.clinicalFindingsComposite = this.clinicalFindings;\n                this.dialogData.toothQuadrentsComposite = this.toothQuadrents;\n\n                const dialogRef = this.dialog.open(DialogToothClinicalfindings, {\n                  width: '700px',\n                  data: this.dialogData\n                });\n\n                dialogRef.afterClosed().subscribe(result => {\n                  if (result && result.length > 0) {\n                    if (this.cftMapArray.length == 0) {\n                      this.cftMapArray = result;\n                    } else {\n                      result.map(r => this.cftMapArray.push(r))\n                    }\n                    for (let i = 0; i < this.cftMapArray.length; i++) {\n                      this.clinicalFindingsViewForUi.push(\n                        this.commonService.combineValForStringArray(\n                          this.clinicalFindingsViewForUi, this.cftMapArray[i].clinicalFinding.fname, this.cftMapArray[i].teeth.toothIndex.toString()\n                        )\n                      )\n                    }\n                    this.createTreatmentPlanTable()\n                  }\n                });\n              }\n            }\n          );\n        }\n      }\n    );\n  }\n\n  totalFees: number = 0;\n  totalPaidFees : number = 0\n  totalDueFees : number = 0\n  getTotalFee() {\n    this.totalFees = this.feesConfigListView && this.feesConfigListView.length > 0 ?\n      this.feesConfigListView.map(fee => fee.totalFee).reduce((prevTotal, curr) => prevTotal + curr, 0) :\n      0;\n    this.getTotalPaidFee()\n    // return this.totalFees;\n  }\n\n  getTotalPaidFee() {\n    this.totalPaidFees = this.feesConfigListView && this.feesConfigListView.length > 0 ?\n      this.feesConfigListView.map(fee => fee.amountPaid).reduce((prevTotal, curr) => prevTotal + curr, 0) :\n      0;\n      this.getTotalDueFee()\n    // return this.totalPaidFees\n  }\n\n  getTotalDueFee() {\n    this.totalDueFees = this.totalFees - this.totalPaidFees\n    return this.totalDueFees\n  }\n\n  addCustomFee(){\n    \n    const dialogFeeRef = this.dialog.open(CustomFeeInsertionDialog, {\n      width: '700px',\n      data: this.treatmentPlanList\n    });\n\n    dialogFeeRef.afterClosed().subscribe(result => {\n      console.log(result)\n      if(result){\n        let customFeeConfigView: FeeConfigView = result;\n        customFeeConfigView.ageGroupId = this.ageGroup\n        if(this.feesConfigListView == undefined || this.feesConfigListView.length == 0){\n          this.feesConfigListView = []\n        }\n        this.feesConfigListView.push(customFeeConfigView)\n        this.feesConfigListDataSource.data = this.feesConfigListView\n        this.getTotalFee()\n      }\n    });\n  }\n\n  addTreatmentPlan(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    if ((value || '').trim()) {\n      this.treatmentPlanListView.push(value.trim());\n    }\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeChip(s: string | MedicineView, n: number) {\n    //Remove Treatment plan\n    if (n == 1 && typeof s === 'string') {\n      let idx = this.treatmentPlanListView.indexOf(s);\n      if (idx >= 0) {\n        this.treatmentPlanListView.splice(idx, 1);\n\n        //TODO: Also remove medicines and fee configurations\n      }\n    }\n    //Remove medicines\n    else if (n == 2 && s instanceof MedicineView) {\n      let idx = this.medicineMasterViewList.indexOf(s);\n      if (idx >= 0) {\n        this.medicineMasterViewList.splice(idx, 1);\n      }\n    }\n  };\n\n  removeFees(index: number) {\n    this.feesConfigListView.splice(index, 1);\n    this.feesConfigListDataSource.data = this.feesConfigListView;\n    this.getTotalFee()\n  }\n\n  //Function for adding custom medicines\n  addMedicine(event: MatChipInputEvent) {\n    let customMedicineMaster = new MedicineView();\n    const input = event.input;\n    let data = event.value;\n    if ((data || '').trim()) {\n      let dataParts: string[] = data.split(' -- ');\n      if (dataParts.length == 2) {\n        customMedicineMaster.medicineName = dataParts[0];\n        customMedicineMaster.dosage = dataParts[1];\n        this.medicineMasterViewList.push(customMedicineMaster);\n      } else {\n        console.log('Error medicine format');\n      }\n    }\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  createNextAppo(event: MatDatepickerInputEvent<Date>) {\n    try {\n      // console.log('next appo ' + event.value.getTime());\n      this.prescriptionHistoryView.nextAppointment = event.value.getTime()\n      if (0 <= this.nextAppoHour && this.nextAppoHour <= 24 && 0 <= this.nextAppoMinute && this.nextAppoMinute <= 59) {\n        let modifiedTime = ((this.nextAppoHour * 60) + this.nextAppoMinute) * 60 * 1000 + event.value.getTime()\n        console.log('next appo ' + modifiedTime);\n      }\n    } catch (error) {\n      console.log(error)\n      this.snackModel.msg = \"Invalid Date\"\n      this.snackModel.action = \"OK\"\n      this.snackModel.callback = () => {\n        console.log(\"Retry allowed\")\n      }\n      this.commonService.showSnackBar(this.snackBar, this.snackModel)\n    }\n  }\n\n  nextAppoHour = 0;\n  nextAppoMinute = 0;\n  createNextAppoTime() {\n    // console.log(`NextAppo Hour ${this.nextAppoHour} Minute ${this.nextAppoMinute}`)\n  }\n\n  minDate: Date = new Date();\n  todayMillis = this.minDate.getTime();\n  maxMillis = this.todayMillis + (5 * 86400 * 1000);\n  maxDate = new Date(this.maxMillis);\n\n\n  trtmntPlanListDataSource = new MatTableDataSource<ClinicalFindingToothMapping>()\n  trtmntPlanListViewColumns = ['cf', 'teeth', 'plan', 'newPlan']\n  \n  //Get all dialog box data from this.cftMapArray\n  createTreatmentPlanTable() {\n    this.trtmntPlanListDataSource.data = this.cftMapArray\n  }\n\n  updateTrtmntPlanSelect(value: string, index: number) {\n\n    this.treatmentPlanList.filter(data => {\n      if (data.trtName == value) {\n        if (this.cftMapArray.length > index) {\n          this.cftMapArray[index].treatmentPlanName = value\n          if (value === 'Other') {\n            this.cftMapArray[index].customTrtmntPlan = true\n          }\n          let toothGrpIndex = this.cftMapArray[index].teeth.toothGroup\n          let treatmentId = data.trtId\n\n          this.httpCom.getFeeConfig(this.selectedPatient.age, toothGrpIndex, treatmentId).subscribe(resp => {\n            if (resp && resp.status === 'SUCCESS') {\n              let feeConfigData: FeeConfigView = resp.resp;\n              if(feeConfigData && feeConfigData.totalFee > 0){\n                this.feesConfigListView.push(feeConfigData);\n                this.feesConfigListDataSource.data = this.feesConfigListView;\n                this.getTotalFee();              \n              }\n            }else{\n              //Show error and open custom feeaddition section\n              this.snackModel.msg = \"Please add custom fee\"\n              this.snackModel.action = \"OK\"\n              this.snackModel.callback = () => {\n                this.addCustomFee()\n              }\n              this.commonService.showSnackBar(this.snackBar, this.snackModel)\n            }\n          });\n        }\n      }\n      // console.log('Updated cft', this.cftMapArray)\n\n      //Getting filtered medicines\n      //TOBE DONE LATER\n      // this.httpCom.getMedicineView(this.httpCom.getMedicineUrl\n      //   + this.httpCom.getMedicineUrlPart1\n      //   + data.trtId\n      //   + this.httpCom.getMedicineUrlPart2\n      //   + this.selectedPatient.age\n      // ).subscribe(\n      //   resp => {\n      //     if (resp.status === 'SUCCESS') {\n      //       resp.resp.map(medicineMasterView => {\n      //         this.medicineMasterViewList.push(medicineMasterView);\n      //       });\n      //     } else {\n      //       console.log('resp error: ' + resp);\n      //     }\n      //   }\n      // );\n    })\n  }\n\n  updateTrtmntPlanI(value: string, index: number) {\n    this.cftMapArray[index].treatmentPlanName = value\n  }\n\n  createAndSubmitPrescription() {\n\n    this.dashboardView = new DashboardView();\n    this.dashboardView.fbl = []\n    if (this.feesConfigListView && this.feesConfigListView.length > 0) {\n      this.feesConfigListView.map(f => {\n        let fb = new FeesBreakupView()\n        fb.amount = f.totalFee\n        fb.notes = f.notes\n        fb.trtmntPlanRef = f.treatmentPlanId\n        fb.patientId = this.selectedPatient.pid\n        fb.amountPaid = f.amountPaid\n        this.dashboardView.fbl.push(fb)\n      })\n    }\n    this.dashboardView.medhv = []\n    if (this.medicineForm.value && this.medicineForm.value.length > 0) {\n      this.medicineForm.value.map(m => {\n        let medh = new MedicineHistoryView()\n        medh.medicineName = m.medicineName\n        medh.diseaseCode = m.diseaseCode\n        medh.diseaseName = m.diseaseName\n        medh.dosage = m.dosage\n        medh.patientId = this.selectedPatient.pid\n        this.dashboardView.medhv.push(medh)\n      })\n    }\n    this.dashboardView.mhv = [];\n    // if (this.medicalHistoryForm.value && this.medicalHistoryForm.value.length > 0) {\n    if (this.medicalHistoryViewModel && this.medicalHistoryViewModel.length > 0) {\n      // medicalHistoryViewModel\n      this.medicalHistoryForm.value.map(v => {\n        let view = new MedicalHistoryView();\n        view.medicalHistoryName = v;\n        view.patientId = this.selectedPatient.pid;\n        this.dashboardView.mhv.push(view);\n      });\n    }\n    this.dashboardView.pHistory = this.prescriptionHistoryView\n    this.dashboardView.pHistory.patientId = this.selectedPatient.pid\n    // Need refactoring\n    this.dashboardView.pHistory.clinicalFindings = this.clinicalFindingsViewForUi.toString()\n    this.dashboardView.tphv = []\n    this.cftMapArray.map(cft => {\n      let tph = new TreatmentPlanHistoryView()\n      tph.patientId = this.selectedPatient.pid\n      tph.tname = cft.treatmentPlanName\n      tph.toothIndex = cft.teeth.toothIndex\n      tph.clinicalFinding = cft.clinicalFinding.fname\n      this.dashboardView.tphv.push(tph)\n    })\n\n    console.log(JSON.stringify(this.dashboardView))\n    this.httpCom.addDashBoard(this.dashboardView).subscribe(\n      resp => {\n        if (resp.status === 'SUCCESS') {\n          //Do something and print prescription\n          console.log(JSON.stringify(resp.resp));\n          // this.printPrescription();\n          let dashboardResponse : DashboardResponse = resp.resp\n          this.treatmentPlanService.setTreatmentData(dashboardResponse.patientId, dashboardResponse.prescriptionId,this.dashboardView.tphv)\n          this.snackModel.isError = false\n          this.snackModel.msg = \"Prescription added\"\n          this.snackModel.action = \"OK\"\n          this.snackModel.callback = () => {\n            //navigate to treatment plan tab\n            this.tabSelection(3)\n          }\n          this.commonService.showSnackBar(this.snackBar, this.snackModel)\n        }\n      }\n    );\n  }\n\n  printPrescription() {\n    //printableContent1\n    //Need to create a separate page and populate the prescription data only    \n    var prescriptionContent = document.getElementById(\"printableContent1\").outerHTML;\n    var openWindow = window.open(\"\",\"target\",\"width=800, height=800\")\n    // let printablePage = `<!doctype html>\n    // <html lang=\"en\">\n    // <head>\n    //   <meta charset=\"utf-8\">\n    //   <title>EpsDashboard</title>\n    //   <base href=\"/\">\n    //   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    //   <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n    //   <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    //   <link rel=\"stylesheet\" href=\"create-prescription.component.css\">\n    //   <link rel=\"stylesheet\" href=\"../dashboard/dashboard.component.css\">\n    // </head>\n    // <body> ${prescriptionContent} </body></html>`;\n    let printablePage = '<html>'+\n      '<head>'+\n        '<title>Prescription</title>'+\n        '<script type=\"text/javascript\" src=\"runtime.js\"></script>'+\n        '<script type=\"text/javascript\" src=\"polyfills.js\"></script>'+\n        '<script type=\"text/javascript\" src=\"styles.js\"></script>'+\n        // '<script type=\"text/javascript\" src=\"vendor.js\"></script>'+\n        '<script type=\"text/javascript\" src=\"main.js\"></script>'+\n        '<link rel=\"stylesheet\" href=\"../dashboard/dashboard.component.css\"/>'+\n        '<link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\"/>'+\n        '</head>'+\n        '<body '+\n        // 'onload=\"window.print()\"'+\n        '>'\n    + prescriptionContent\n    + '</body></html>';\n    console.log(\"printPrescription\", JSON.stringify(printablePage))\n    openWindow.document.open()\n    openWindow.document.write(printablePage)\n    openWindow.document.close\n    openWindow.focus();\n    // openWindow.print();\n    // openWindow.close();\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Dialog box to select clinical findings mapped with tooth index\n@Component({\n  selector: 'dialog-tooth-cf',\n  templateUrl: 'dialog-tooth-cf.html',\n  styleUrls: ['./create-prescription.component.css'],\n})\nexport class DialogToothClinicalfindings {\n\n  cfTextToBeShownOnUi = [];\n  originalCfList: string[] = [];\n  filteredCfList: Observable<string[]>;\n  toothForm = new FormControl();\n  clinicalFindingForm = new FormControl();\n  // readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  cftMapArray: ClinicalFindingToothMapping[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogToothClinicalfindings>,\n    @Inject(MAT_DIALOG_DATA) public data: CompositDialogBoxData,\n    public httpCom: HttpcommService) { }\n\n  ngOnInit() {\n    for (let i = 0; i < this.data.clinicalFindingsComposite.length; i++) {\n      this.originalCfList.push(this.data.clinicalFindingsComposite[i].fname);\n    };\n    this.startFilter1();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  };\n\n  getOrderedList(grp: number, isAsc: boolean = false): ToothQuadrentView[] {\n\n    return this.data.toothQuadrentsComposite\n      .filter(tooth => tooth.toothQdr == grp)\n      .sort((a: ToothQuadrentView, b: ToothQuadrentView) => {\n        if (isAsc && a.toothIndex > b.toothIndex) return 1;\n        else if (!isAsc && a.toothIndex < b.toothIndex) return 1;\n        else return -1;\n      });\n  }\n\n  checkTooth(t: ToothQuadrentView) {\n    t.selected = !t.selected;\n  }\n\n  //Scope for new clinical findingds\n\n  customCFName: string = ''\n  customCFDesc: string = ''\n\n  //In case of other add the other data in db and process as usual if async add is on\n  add() {\n    if (this.originalCfList.includes(this.clinicalFindingForm.value)) {\n\n      // let selectedToothList: number[] = this.toothForm.value;\n\n      let selectedToothIndexes: string = '';\n      this.data.toothQuadrentsComposite.map(tooth => {\n        if (tooth.selected) {\n          let cft = new ClinicalFindingToothMapping();\n          cft.teeth = tooth;\n          selectedToothIndexes = tooth.toothIndex.toString();\n\n          let formValue: string = this.clinicalFindingForm.value\n          if (formValue === 'Others') {\n            formValue = this.customCFName\n          }\n\n          //Combining tooth index for cf\n          this.cfTextToBeShownOnUi.push(new CommonService().combineValForStringArray(\n            this.cfTextToBeShownOnUi, formValue, selectedToothIndexes\n          ))\n\n          if (this.clinicalFindingForm.value === 'Others') {\n            let cf = new ClinicalFindingView();\n            cf.fname = this.customCFName;\n            cf.fdesc = this.customCFDesc;\n            cft.clinicalFinding = cf;\n\n            this.httpCom.addClinicalFinding(cf).subscribe(resp => {\n              if (resp.status === 'SUCCESS') {\n                //TODO: Show message\n                console.log('CF added')\n              }\n            })\n\n          } else {\n            this.data.clinicalFindingsComposite.map(cf => {\n              if (cf.fname === this.clinicalFindingForm.value) {\n                // console.log(`Match for ${this.clinicalFindingForm.value}`)\n                cft.clinicalFinding = cf\n              }\n            })\n\n          }\n          tooth.selected = false;\n          this.cftMapArray.push(cft);\n        }\n      });\n    } else {\n      // Show error\n    }\n    this.clinicalFindingForm.setValue('');\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.cftMapArray);\n  }\n\n  remove(s: string): void {\n    const index = this.cfTextToBeShownOnUi.indexOf(s);\n    if (index >= 0) {\n      this.cfTextToBeShownOnUi.splice(index, 1);\n    }\n    let cfName = s.substring(0, s.indexOf(\"-\"));\n    for (let l = 0; l < this.cftMapArray.length; l++) {\n      if (this.cftMapArray[l].clinicalFinding.fname === cfName) {\n        this.cftMapArray.splice(l, 1);\n      }\n    }\n  }\n\n  setSelect(t: ToothQuadrentView) {\n    alert('Selected:' + t.toothIndex);\n  }\n\n  startFilter1() {\n    this.filteredCfList = this.clinicalFindingForm.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    return this.originalCfList.filter(option => option.toLowerCase().includes(value.toLowerCase()));\n  }\n}\n\n\n@Component({\n  selector: 'custom-fee-insert',\n  templateUrl: 'custom-fee-insert.html',\n  styleUrls: ['./create-prescription.component.css'],\n})\nexport class CustomFeeInsertionDialog {\n\n  treatmentPlanDescsObservable: Observable<string[]>;\n  treatmentPlanDescs: string[];\n  treatmentPlanForm = new FormControl();\n  feeConfigView = new FeeConfigView()\n  \n  constructor(\n    public dialogRef: MatDialogRef<CustomFeeInsertionDialog>,\n    @Inject(MAT_DIALOG_DATA) public treatmentPlans: TreatmentPlan[]) {\n      if(treatmentPlans && treatmentPlans.length > 0){\n        this.treatmentPlanDescs = [];        \n        treatmentPlans.forEach(tpls => {\n          this.treatmentPlanDescs.push(tpls.trtDesc);\n        })\n      }\n    }\n\n  ngOnInit() {\n    this.startTreatmentPlanFilter();\n  }\n\n  onNoClick() : void{\n    this.dialogRef.close();\n  };\n\n  closeDialog() {\n    if(!isNaN(this.feeConfigView.totalFee) && !isNaN(this.feeConfigView.amountPaid)){\n      this.getCustomFee()\n      this.dialogRef.close(this.feeConfigView);\n    }\n  }\n\n  startTreatmentPlanFilter() {\n    this.treatmentPlanDescsObservable = this.treatmentPlanForm.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    return this.treatmentPlanDescs.filter(desc => desc.toLowerCase().includes(value.toLowerCase()));\n  }\n\n  getCustomFee(){\n    if(this.treatmentPlanForm.value && this.treatmentPlanForm.value.length > 0){\n      let filterdList = this.treatmentPlans.filter(tDesc => this.treatmentPlanForm.value == tDesc.trtDesc)\n      if(filterdList && filterdList.length > 0){\n        this.feeConfigView.treatmentPlanId = filterdList[0].trtId        \n      }\n    }\n  }\n}","module.exports = \"<h1 mat-dialog-title>Add Fee</h1>\\r\\n<div mat-dialog-content>\\r\\n    <form class=\\\"example-form\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Select treatment plan\\\" aria-label=\\\"Number\\\" [formControl]=\\\"treatmentPlanForm\\\"\\r\\n                [matAutocomplete]=\\\"auto3\\\">\\r\\n            <mat-autocomplete autoActiveFirstOption #auto3=\\\"matAutocomplete\\\">\\r\\n                <mat-option *ngFor=\\\"let treatmentPlanDesc of treatmentPlanDescsObservable | async\\\" [value]=\\\"treatmentPlanDesc\\\">\\r\\n                    {{treatmentPlanDesc}}\\r\\n                </mat-option>\\r\\n            </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Total Fee\\\" min=1 [(ngModel)]=\\\"feeConfigView.totalFee\\\" style=\\\"text-align:center\\\" required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Amount Paid\\\" min=1 [(ngModel)]=\\\"feeConfigView.amountPaid\\\" style=\\\"text-align:center\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput placeholder=\\\"Note\\\" [(ngModel)]=\\\"feeConfigView.notes\\\" style=\\\"text-align:center\\\">\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    <button mat-button (click)=\\\"closeDialog()\\\">Done</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Create Clinical Findings</h1>\\r\\n<div mat-dialog-content>\\r\\n    <!-- <mat-list>\\r\\n        <h3 mat-subheader>Clinical Findings</h3>\\r\\n        <mat-list-item *ngFor=\\\"let cf of data.clinicalFindingsComposite\\\">\\r\\n            <mat-icon mat-list-icon>notes</mat-icon>\\r\\n            <h4 mat-line>Name : {{cf.fname}}</h4>\\r\\n            <p mat-line>Desc : {{cf.fdesc}} </p>\\r\\n        </mat-list-item>\\r\\n    </mat-list> -->\\r\\n    <form class=\\\"example-form\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Select C/F\\\" aria-label=\\\"Number\\\" [formControl]=\\\"clinicalFindingForm\\\"\\r\\n                [matAutocomplete]=\\\"auto2\\\">\\r\\n            <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\">\\r\\n                <mat-option *ngFor=\\\"let cfdd of filteredCfList | async\\\" [value]=\\\"cfdd\\\">\\r\\n                    {{cfdd}}\\r\\n                </mat-option>\\r\\n            </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <!-- Section for adding custom clinical findings -->\\r\\n    <table *ngIf=\\\"clinicalFindingForm?.value === 'Others'\\\">\\r\\n        <tr>\\r\\n            <td>\\r\\n                <!-- Custom clinical finding name -->\\r\\n                <mat-form-field hintLabel=\\\"Max 30 characters\\\" class=\\\"example-full-width\\\">\\r\\n                    <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"C/F Name\\\" [(ngModel)]=\\\"customCFName\\\" required>\\r\\n                    <mat-hint align=\\\"end\\\">{{customCFName?.length || 0}}/30</mat-hint>\\r\\n                </mat-form-field>\\r\\n            </td>\\r\\n            <td>\\r\\n                <!-- Custom clinical finding desc -->\\r\\n                <mat-form-field hintLabel=\\\"Max 30 characters\\\" class=\\\"example-full-width\\\">\\r\\n                    <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"C/F Desc\\\" [(ngModel)]=\\\"customCFDesc\\\">\\r\\n                    <mat-hint align=\\\"end\\\">{{customCFDesc?.length || 0}}/30</mat-hint>\\r\\n                </mat-form-field>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n\\r\\n    <!-- <mat-form-field>\\r\\n        <mat-select placeholder=\\\"Tooth\\\" [formControl]=\\\"toothForm\\\" multiple>\\r\\n            <mat-option *ngFor=\\\"let tooth of data.toothQuadrentsComposite\\\" [value]=\\\"tooth.toothIndex\\\">{{tooth.toothIndex}}</mat-option>\\r\\n        </mat-select>\\r\\n    </mat-form-field> -->\\r\\n\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(1)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <!-- (click)=\\\"setSelect(t)\\\" -->\\r\\n                <label>\\r\\n                    <input class=\\\"custom_mat-radio-button\\\" type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\"\\r\\n                        [checked]=\\\"t.selected\\\" disabled />\\r\\n                    {{t.toothIndex}}\\r\\n                </label>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(2, true)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                    <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                    {{t.toothIndex}}\\r\\n                </label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(3)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                {{t.toothIndex}}\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(4, true)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                {{t.toothIndex}}\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n\\r\\n    <p>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\r\\n            Select <mat-icon aria-label=\\\"Select\\\">check_circle_outline</mat-icon>\\r\\n        </button>\\r\\n    </p>\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <mat-chip-list #chipList>\\r\\n                <mat-chip *ngFor=\\\"let cf of cfTextToBeShownOnUi\\\" selectable=\\\"true\\\" removable=\\\"true\\\" (removed)=\\\"remove(cf)\\\">\\r\\n                    {{cf}}\\r\\n                    <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                </mat-chip>\\r\\n                <input placeholder=\\\"Result\\\" disabled [matChipInputFor]=\\\"chipList\\\" matChipInputAddOnBlur=\\\"true\\\">\\r\\n                <!-- \\r\\n                    (matChipInputTokenEnd)=\\\"addChip($event)\\\" \\r\\n                    [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                -->\\r\\n            </mat-chip-list>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    <button mat-button (click)=\\\"closeDialog()\\\">Done</button>\\r\\n</div>\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {AdminComponent} from './admin/admin.component';\nimport { MaterialTestComponent } from './material-test/material-test.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'test', component: MaterialTestComponent },\n  // { path: 'heroes', component: HeroesComponent },\n  // { path: 'app-material-nav', component: MaterialNavComponent},\n  // { path: 'app-material-dashboard', component: MaterialDashboardComponent},\n  // { path: 'app-material-table', component: MaterialTableComponent},\n  // { path: 'angular-material-component', component: AngularComponentsComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  declarations: [],\n  exports: [\n    RouterModule\n  ]\n})\nexport class DashRoutingModule {\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 800px;\\r\\n    min-width: 50px;\\r\\n    margin-left: 50px;\\r\\n    margin-top: 30px;\\r\\n    width : 100%;\\r\\n  }\\r\\n  \\r\\n  .expansion-margin {\\r\\n    max-width: 1000px;\\r\\n    margin-left: 150px;\\r\\n    margin-top: 30px;\\r\\n  }\\r\\n  \\r\\n  .example-section {\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    height: 60px;\\r\\n  }\\r\\n  \\r\\n  .example-margin {\\r\\n    /* margin: 0 10px; */\\r\\n    margin-top: 20px;\\r\\n    margin : 5px 10px;\\r\\n  }\\r\\n  \\r\\n  /* .mat-radio-button ~ .mat-radio-button {\\r\\n    padding: 36px;\\r\\n  } */\\r\\n  \\r\\n  .example-radio-group-column {\\r\\n    /* display: inline-flex; */\\r\\n    /* flex-direction: column; */\\r\\n  }\\r\\n  \\r\\n  .example-icon-radio-button {\\r\\n    margin: 0px;\\r\\n    padding-left: 27px;\\r\\n  }\\r\\n  \\r\\n  .example-half-width{\\r\\n    width: 50%;\\r\\n  }\\r\\n  \\r\\n  .icon-male {\\r\\n    background: url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22%3F%3E%3C!DOCTYPE svg PUBLIC %22-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN%22 %22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.1%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M9%2C9C10.29%2C9 11.5%2C9.41 12.47%2C10.11L17.58%2C5H13V3H21V11H19V6.41L13.89%2C11.5C14.59%2C12.5 15%2C13.7 15%2C15A6%2C6 0 0%2C1 9%2C21A6%2C6 0 0%2C1 3%2C15A6%2C6 0 0%2C1 9%2C9M9%2C11A4%2C4 0 0%2C0 5%2C15A4%2C4 0 0%2C0 9%2C19A4%2C4 0 0%2C0 13%2C15A4%2C4 0 0%2C0 9%2C11Z%22 %2F%3E%3C%2Fsvg%3E\\\");\\r\\n    height: 27px;\\r\\n    width: 22px;\\r\\n    display: block;\\r\\n    /* Other styles here */\\r\\n}\\r\\n  \\r\\n  .icon-female {\\r\\n  background: url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22%3F%3E%3C!DOCTYPE svg PUBLIC %22-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN%22 %22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.1%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M12%2C4A6%2C6 0 0%2C1 18%2C10C18%2C12.97 15.84%2C15.44 13%2C15.92V18H15V20H13V22H11V20H9V18H11V15.92C8.16%2C15.44 6%2C12.97 6%2C10A6%2C6 0 0%2C1 12%2C4M12%2C6A4%2C4 0 0%2C0 8%2C10A4%2C4 0 0%2C0 12%2C14A4%2C4 0 0%2C0 16%2C10A4%2C4 0 0%2C0 12%2C6Z%22 %2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\"","module.exports = \"<div class=\\\"dash\\\">\\n  <mat-tab-group>\\n\\n    <mat-tab label=\\\"Create Prescription\\\">\\n      <div class=\\\"expansion-margin\\\">\\n        <app-create-prescription>Loading...</app-create-prescription>\\n      </div>\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"Add Patient\\\">\\n\\n      <div class=\\\"expansion-margin\\\">\\n\\n        <!-- Accordian expansion panel -->\\n        <mat-accordion>\\n          <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Basic data\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Section for name, date of birth, weight, blood group\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n\\n            <mat-card class=\\\"example-card\\\">\\n              <mat-card-content>\\n                <table>\\n                  <tr>\\n                    <td>\\n                      <!-- First Name -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Max {{config.first_name_len}} characters\\\">\\n                          <input matInput [maxlength]=\\\"config.first_name_len\\\" placeholder=\\\"First name\\\" [(ngModel)]=\\\"patient.firstName\\\" (keyup)='onKeyUp($event)'\\n                            required>\\n                          <mat-hint align=\\\"end\\\">{{patient.firstName?.length || 0}}/{{config.first_name_len}}</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Last Name -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Max {{config.last_name_len}} characters\\\">\\n                          <input matInput maxlength=15 placeholder=\\\"Last name\\\" [(ngModel)]=\\\"patient.lastName\\\" required>\\n                          <mat-hint align=\\\"end\\\">{{patient.lastName?.length || 0}}/{{config.last_name_len}}</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Sex -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <div style=\\\"display: inline;\\\">\\n                          <span>Sex</span>\\n                          <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"patient.sex\\\">\\n                            <span class=\\\"icon-male\\\">\\n                              <mat-radio-button class=\\\"example-icon-radio-button\\\" value=\\\"male\\\"></mat-radio-button>\\n                            </span>\\n                            <span class='icon-female'>\\n                              <mat-radio-button class=\\\"example-icon-radio-button\\\" value=\\\"female\\\"></mat-radio-button>\\n                            </span>\\n                          </mat-radio-group>\\n                        </div>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n\\n                      <!-- </td>\\n                    <td> -->\\n                      <!-- DOB -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Date of birth :\\n                        </span>\\n                        <mat-form-field>\\n                          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select from calender\\\" (dateChange)=\\\"dateAddEvent('change', $event)\\\"\\n                            disabled>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <!-- </tr>\\n                  <tr> -->\\n                    <td>\\n\\n                      <!-- </td>\\n                    <td> -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Blood Group :\\n                        </span>\\n                        <!-- Blood group -->\\n                        <mat-select class=\\\"example-half-width\\\" placeholder=\\\"Blood group\\\" [(ngModel)]=\\\"patient.bloodGroup\\\" name=\\\"bloodGroup\\\">\\n                          <mat-option *ngFor=\\\"let bg of bloodGroups\\\" [value]=\\\"bg.value\\\">\\n                            {{bg.viewValue}}\\n                          </mat-option>\\n                        </mat-select>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <!-- Height -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Height(cm) :\\n                        </span>\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                          <input matInput maxlength=3 placeholder=\\\"Height\\\" [(ngModel)]=\\\"patient.height\\\" required>\\n                          <mat-hint align=\\\"end\\\">{{patient.height?.length || 0}}/3</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Weight -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Weight(kg) :\\n                        </span>\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                          <input matInput maxlength=3 placeholder=\\\"Weight\\\" [(ngModel)]=\\\"patient.weight\\\" required>\\n                          <mat-hint align=\\\"end\\\">{{patient.weight?.length || 0}}/3</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </mat-card-content>\\n            </mat-card>\\n            <mat-action-row>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n\\n          <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Contact data\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Section for phone number, email and address\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <mat-card class=\\\"example-card\\\">\\n              <mat-card-content>\\n                <table>\\n                  <tr>\\n                    <td>\\n                      <!-- Contact Number -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\" class=\\\"example-full-width\\\">\\n                          <span matPrefix>+91 &nbsp;</span>\\n                          <input type=\\\"tel\\\" matInput placeholder=\\\"Contact number\\\" [(ngModel)]=\\\"patient.contactNo1\\\">\\n                          <mat-icon matSuffix>contact_phone</mat-icon>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Email address -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Optional email\\\">\\n                          <input matInput maxlength=30 placeholder=\\\"Enter email\\\" type=\\\"email\\\" [(ngModel)]=\\\"patient.email\\\">\\n                          <mat-icon matSuffix>contact_mail</mat-icon>\\n                          <mat-hint align=\\\"end\\\">{{patient.email?.length || 0}}/30</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n\\n                <!-- Address 1 -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Address1\\\" [(ngModel)]=\\\"patient.address1\\\" required></textarea>\\n                    <button mat-button *ngIf=\\\"patient.address1\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"patient.address1=''\\\">\\n                      <mat-icon>close</mat-icon>\\n                    </button>\\n                  </mat-form-field>\\n                </div>\\n\\n                <!-- Address 2 -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Address2\\\" [(ngModel)]=\\\"patient.address2\\\"></textarea>\\n                    <button mat-button *ngIf=\\\"patient.address2\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"patient.address2=''\\\">\\n                      <mat-icon>close</mat-icon>\\n                    </button>\\n                  </mat-form-field>\\n                </div>\\n              </mat-card-content>\\n            </mat-card>\\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n\\n          <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Configuration data\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Optional data\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <span>Discount</span>\\n            <table>\\n              <tr>\\n                <td>\\n                  <mat-radio-group class=\\\"example-margin\\\" [(ngModel)]=\\\"patient.discountType\\\">\\n                    <mat-radio-button value=\\\"percentage\\\">Percent</mat-radio-button>\\n                    <mat-radio-button value=\\\"flat\\\">Flat</mat-radio-button>\\n                  </mat-radio-group>\\n                </td>\\n                <td>\\n                  <div class=\\\"example-margin\\\">\\n                    <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                      <input matInput maxlength=\\\"5\\\" placeholder=\\\"Discount\\\" [(ngModel)]=\\\"patient.discount\\\">\\n                      <mat-hint align=\\\"end\\\">{{patient.discount?.length || 0}}/5</mat-hint>\\n                    </mat-form-field>\\n                  </div>\\n                </td>\\n              </tr>\\n            </table>\\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"submitPatient()\\\">Add Patient</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n\\n\\n        </mat-accordion>\\n\\n      </div>\\n    </mat-tab>\\n\\n  </mat-tab-group>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PatientService } from '../services/patient.service';\nimport { Patient, BloodGroup } from '../models/models';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackhelperComponent } from '../snackhelper/snackhelper.component';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport {FormControl, Validators} from '@angular/forms';\nimport { HttpcommService } from '../services/httpcomm.service'\nimport { CommonService } from '../services/commonservice.service';\n\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { SnackbarModel } from '../snackhelper/snackbar-model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  patient : Patient;\n  commonService = new CommonService();\n  \n  //Place holder for dynamic field validation\n  config = {\n    \"first_name_len\" : 20,\n    \"last_name_len\" : 15\n  };\n  firstName : string;\n  lastName : string;\n  bloodGroups : BloodGroup[] = [\n    {value : 'A_POSITIVE', viewValue : 'A+'},\n    {value : 'A_NEGETIVE', viewValue : 'A-'},\n    {value : 'B_POSITIVE', viewValue : 'B+'},\n    {value : 'B_NEGETIVE', viewValue : 'B-'},\n    {value : 'AB_POSITIVE', viewValue : 'AB+'},\n    {value : 'AB_NEGETIVE', viewValue : 'AB-'},\n    {value : 'O_POSITIVE', viewValue : 'O+'},\n    {value : 'O_NEGETIVE', viewValue : 'O-'},\n  ];\n\n  httpService : HttpcommService;\n\n  patientEmailControl = new FormControl('',[\n    Validators.email,\n    Validators.required\n  ]);\n\n  //Accordian expansion bar control\n  step: number = 0;\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  \n  constructor(public snackBar: MatSnackBar, public httpClient: HttpClient) { \n    this.patient = new Patient();\n    this.httpService = new HttpcommService(httpClient);\n  }\n\n  ngOnInit() {          \n    this.getRealPatient();\n  }\n\n  getRealPatient(){\n\n    this.httpService.getPatient(this.patient).subscribe(\n      resp => {\n        if(resp && resp.status === 'SUCCESS'){\n          if(resp.resp && resp.resp.length > 0){\n            this.patient = resp.resp[0];\n            this.firstName = this.patient.firstName;\n            this.lastName = this.patient.lastName;\n          }else{\n\n          }\n        }else{\n          \n        }\n      }\n    )\n  }\n  submitPatient(){\n    this.nextStep();\n    console.log('Sending from dash');\n    console.log(this.patient);\n    this.httpService.addPatient(this.patient).subscribe(\n      s => {\n        console.log('Receieved response');\n        console.log('s');\n      }\n    )\n  }\n  onKeyUp(event : any){\n    let snackbarConfig = new SnackbarModel();\n    snackbarConfig.isError = true\n    snackbarConfig.msg = 'test msg' \n    snackbarConfig.duration = 2000\n    snackbarConfig.callback = () => {\n      console.log('Callback ok')\n    }\n    this.commonService.showSnackBar(this.snackBar, snackbarConfig)\n  }\n\n  dateAddEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    \n    let parsedDate : number[] = this.commonService.getParsedDate(event.value);\n    if(parsedDate && parsedDate.length == 3){\n      this.patient.dobDd = parsedDate[0];\n      this.patient.dobMm = parsedDate[1];\n      this.patient.dobYy = parsedDate[2];\n    }\n  }\n\n\n\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n  }\\r\\n  \\r\\n  tr.example-element-row:not(.example-expanded-row):hover {\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  tr.example-element-row:not(.example-expanded-row):active {\\r\\n    background: #efefef;\\r\\n  }\\r\\n  \\r\\n  .example-element-row td {\\r\\n    border-bottom-width: 0;\\r\\n  }\\r\\n  \\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  .example-element-diagram {\\r\\n    min-width: 80px;\\r\\n    border: 2px solid black;\\r\\n    padding: 8px;\\r\\n    font-weight: lighter;\\r\\n    margin: 8px 0;\\r\\n    height: 104px;\\r\\n  }\\r\\n  \\r\\n  .example-element-symbol {\\r\\n    font-weight: bold;\\r\\n    font-size: 40px;\\r\\n    line-height: normal;\\r\\n  }\\r\\n  \\r\\n  .example-element-description {\\r\\n    padding: 16px;\\r\\n  }\\r\\n  \\r\\n  /* .example-element-description-attribution {\\r\\n    opacity: 0.5;\\r\\n  } */\\r\\n  \"","module.exports = \"\\n\\n\\n<table mat-table\\n       [dataSource]=\\\"dataSource\\\" multiTemplateDataRows\\n       class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\n  </ng-container>\\n\\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n      <div class=\\\"example-element-detail\\\"\\n           [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n        <div class=\\\"example-element-diagram\\\">\\n          <div class=\\\"example-element-position\\\"> {{element.position}} </div>\\n          <div class=\\\"example-element-symbol\\\"> {{element.symbol}} </div>\\n          <div class=\\\"example-element-name\\\"> {{element.name}} </div>\\n          <div class=\\\"example-element-weight\\\"> {{element.weight}} </div>\\n        </div>\\n        <div class=\\\"example-element-description\\\">\\n          {{element.description}}\\n          <p>\\n            <!-- <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span> -->\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"selectedElement(expandedElement)\\\">\\n                Select <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">check_circle_outline</mat-icon>\\n            </button>\\n          </p>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\"\\n      class=\\\"example-element-row\\\"\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n      (mouseenter)=\\\"mouseOverFn(element)\\\"\\n      (mouseout)=\\\"mouseOutFn(expandedElement)\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table>\\n\\n\\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\\n    Use of this source code is governed by an MIT-style license that\\n    can be found in the LICENSE file at http://angular.io/license -->\"","import { Component, OnInit } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-material-test',\n  templateUrl: './material-test.component.html',\n  styleUrls: ['./material-test.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class MaterialTestComponent implements OnInit {\n\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: PeriodicElement;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  mouseOverFn(element : PeriodicElement){\n    console.log(\"mouse enter called\");\n    this.expandedElement = element;\n  }\n\n  mouseOutFn(element : PeriodicElement){\n    console.log(\"mouse out called\");\n    // this.expandedElement = null;\n  }\n\n  selectedElement(element : PeriodicElement){\n    console.log(`Selected position ${element.position}`);\n  }\n\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  description: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];","export class Response {\r\n\r\n    status: string;\r\n    desc: string;\r\n    resp: any;\r\n};\r\nexport class ClinicalFindingView {\r\n    fid: number;\r\n    fdesc: string;\r\n    fname: string;\r\n};\r\nexport class MedicalMaster {\r\n    medicalHistoryName: string;\r\n};\r\nexport class Patient {\r\n    bloodGroup: string;\r\n    contactNo1: number;\r\n    contactNo2: number;\r\n    discountType: string;\r\n    discount: number;\r\n    dobDd: number;\r\n    dobMm: number;\r\n    dobYy: number;\r\n    dobTimestamp: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    tsCreated: number;\r\n    weight: number;\r\n    height: number;\r\n    // image: string;\r\n    email: string;\r\n    address1: string;\r\n    address2: string;\r\n    age: number;\r\n    pid: number;\r\n    sex: string;\r\n};\r\nexport interface BloodGroup {\r\n    value: string;\r\n    viewValue: string;\r\n};\r\nexport class PrescriptionHistoryView {\r\n    prescriptionId: number;\r\n    advice: string;\r\n    chiefComplaint: string;\r\n    clinicalFindings: string;\r\n    investigation: string;\r\n    medicines: string;\r\n    nextAppointment: number;\r\n    note: string;\r\n    patientId: number;\r\n    provisionalDiagnosis: string;\r\n    treatmentDone: string;\r\n    treatmentPlan: string;\r\n    tsCreated: number;\r\n    tsModified: number;\r\n};\r\nexport class ToothQuadrentView {\r\n    toothIndex: number;\r\n    toothGroup: number;\r\n    toothNumber: number;\r\n    toothQdr: number;\r\n    selected: boolean = false;\r\n};\r\nexport class TreatmentPlan {\r\n    trtId: number;\r\n    trtDesc: string;\r\n    trtName: string;\r\n    clinicalFinding: number;\r\n};\r\nexport class MedicineView {\r\n    medicineName: string;\r\n    ageGroup: string;\r\n    treatmentId: number;\r\n    dosage: string;\r\n    clinicalAvailability: number;\r\n    diseaseCode: string;\r\n    diseaseName: string;\r\n    medicineId: number;\r\n};\r\n\r\nexport class FeesBreakupView {\r\n    fId: number;\r\n    amount: number;\r\n    amountPaid: number = 0;\r\n    trtmntPlanRef: number;\r\n    notes: string;\r\n    patientId: number;\r\n    prescriptionId: number;\r\n    tsCreated: number;\r\n    paymentTs: number;\r\n};\r\n\r\nexport class FeeConfigView {\r\n    feeConfigId: number;\r\n    ageGroupId: string;\r\n    ageGroupPercent: number;\r\n    baseFee: number;\r\n    toothGroupid: number;\r\n    toothGroupPercent: number;\r\n    treatmentPlanId: number;\r\n    totalFee: number;\r\n    amountPaid: number = 0;\r\n    notes?: string;\r\n}\r\n\r\nexport class FeeConfigRequestListView {\r\n    tooth_grp_idx: number;\r\n    trtmnt_id: number;\r\n}\r\n\r\nexport class MedicalHistoryView {\r\n    medicalHistoryId: number;\r\n    medicalHistoryName : string\r\n    note: string;\r\n    patientId : number;\r\n    prescriptionId : number;\r\n    severity: string;\r\n    startedFrom: number;\r\n}\r\nexport class MedicineHistoryView {\r\n    medId: number;\r\n    diseaseCode: string;\r\n    diseaseName: string;\r\n    dosage: string;\r\n    medicineName: string\r\n    patientId: number;\r\n    prescriptionId: number;\r\n}\r\n\r\nexport class TreatmentPlanHistoryView{\r\n    tid : number;\r\n    tname : string;\r\n    clinicalFinding : string;\r\n    note : string;\r\n    patientId : number;\r\n    prescriptionId : number;\r\n    toothIndex : number;\r\n    tsCreated : number;\r\n    tsModified : number;\r\n    status : TreatmentPlanStatus = TreatmentPlanStatus.PENDING;\r\n}\r\n\r\nexport enum TreatmentPlanStatus {\r\n    COMPLETED = \"Completed\", \r\n    PENDING = \"Pending\"\r\n}\r\n\r\nexport class DashboardView {\r\n    pHistory: PrescriptionHistoryView;\r\n    fbl: FeesBreakupView[];\r\n    mhv: MedicalHistoryView[];\r\n    medhv: MedicineHistoryView[];\r\n    tphv: TreatmentPlanHistoryView[];\r\n}\r\n\r\nexport class DashboardResponse{\r\n    prescriptionId : number\r\n    patientId : number\r\n\tstatus : boolean\r\n\trespMsg : string\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class CompositDialogBoxData {\r\n    toothQuadrentsComposite: ToothQuadrentView[];\r\n    clinicalFindingsComposite: ClinicalFindingView[];\r\n  }\r\n  \r\n  export class ClinicalFindingToothMapping {\r\n    clinicalFinding: ClinicalFindingView;\r\n    teeth: ToothQuadrentView;\r\n    treatmentPlanName: string;\r\n    customTrtmntPlan: Boolean = false;\r\n    treatmentPlanViewModel: string = ''\r\n  }","module.exports = \"\"","module.exports = \"<p>\\n  print-prescription works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-print-prescription',\n  templateUrl: './print-prescription.component.html',\n  styleUrls: ['./print-prescription.component.css']\n})\nexport class PrintPrescriptionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarModel } from '../snackhelper/snackbar-model';\nimport { SnackhelperComponent } from '../snackhelper/snackhelper.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  message: string[];\n  constructor() {\n    this.message = [];\n  }\n\n  hasValue(s: string): boolean {\n    if (s) {\n      if (s.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addMessage(msg: string) {\n    this.message.push(msg);\n  }\n\n  getMessages(): string[] {\n    return this.message;\n  }\n\n  validateDate(date: Date): boolean {\n    if (date &&\n      date.getDate() && date.getDate() > 0 &&\n      date.getMonth() && date.getMonth() >= 0 &&\n      date.getFullYear() && date.getFullYear() > 0) return true;\n    return false;\n  }\n\n  getParsedDate(date: Date): number[] {\n    let pd: number[] = null;\n    // console.log('Date validation: ' + this.validateDate(date));\n    if (this.validateDate(date)) {\n      pd = [];\n      pd.push(date.getDate());\n      pd.push(date.getMonth() + 1);\n      pd.push(date.getFullYear());\n    }\n    return pd;\n  }\n\n  combineValForStringArray(stringArr: string[], key: string, addVal: string,\n    keyValueSeperator: string = ' - ', valueSeperator: string = ','): string {\n\n    let combinedVal: string = ''\n    for (let index = 0; index <= stringArr.length - 1; index++) {\n      if (stringArr[index].includes(key)) {\n        let insertedVal = stringArr.splice(index, 1)[0]\n        if(insertedVal.includes(addVal)){\n          return insertedVal\n        }else{\n          combinedVal = this.getSortedValues(insertedVal + valueSeperator + addVal , keyValueSeperator, valueSeperator)\n          // console.log('Return', combinedVal)\n          return combinedVal\n        }\n      }\n    }\n    // console.log('Return', key + keyValueSeperator + addVal)\n    return key + keyValueSeperator + addVal\n  }\n\n  getSortedValues(values: string, keyValueSeperator: string, valueSeperator: string, isAsync: Boolean = true): string{\n\n    let keyValueArray : string[] = values.split(keyValueSeperator)\n    if(keyValueArray && keyValueArray.length == 2){\n      let key = keyValueArray[0]\n      let valueStringArray: string[] = keyValueArray[1].split(valueSeperator)\n      let valueNumberArray : number[] = []\n      valueStringArray.map(vs => {\n        valueNumberArray.push(Number(vs))\n      })\n      let sortedNumberArray : number[] = valueNumberArray.sort((n1, n2) => {\n        if(isAsync && n1 > n2) return 1\n        else return -1\n      })\n      return key + keyValueSeperator + sortedNumberArray\n    }else return values\n  }\n\n  showSnackBar(snackBar: MatSnackBar, snackBarModel: SnackbarModel){\n    snackBar.openFromComponent(SnackhelperComponent, {\n      data: snackBarModel, duration : snackBarModel.duration\n    })\n  }\n}\n","export class DummyResponse {\r\n  public getPatient = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"bloodGroup\": \"B_POSITIVE\",\r\n        \"contactNo1\": 9046787913,\r\n        \"contactNo2\": 7980231838,\r\n        \"discountType\": \"flat\",\r\n        \"discount\": 20,\r\n        \"dobDd\": 27,\r\n        \"dobMm\": 3,\r\n        \"dobYy\": 1992,\r\n        \"firstName\": \"sourabh\",\r\n        \"lastName\": \"sadhu\",\r\n        \"tsCreated\": 1534695098485,\r\n        \"age\": 24,\r\n        \"height\": 169,\r\n        \"sex\": \"male\",\r\n        \"weight\": 80,\r\n        \"image\": null,\r\n        \"email\": \"sadhuait@gmail.com\",\r\n        \"address1\": \"Habra Jaigachi Rathtala North 24 Parganas\",\r\n        \"address2\": \"Trying to write a pretty looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong looooooooooooooooooooong text\",\r\n        \"pid\": 1\r\n      },\r\n      {\r\n        \"bloodGroup\": \"AB_POSITIVE\",\r\n        \"contactNo2\": 9046787913,\r\n        \"contactNo1\": 7980231838,\r\n        \"discountType\": \"flat\",\r\n        \"discount\": 20,\r\n        \"dobDd\": 27,\r\n        \"dobMm\": 3,\r\n        \"dobYy\": 1992,\r\n        \"firstName\": \"gourab\",\r\n        \"lastName\": \"sadhu\",\r\n        \"age\": 20,\r\n        \"tsCreated\": 1534695098485,\r\n        \"weight\": 80,\r\n        \"image\": null,\r\n        \"email\": \"sadhuait@gmail.com\",\r\n        \"address1\": \"Habra\",\r\n        \"address2\": \"looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong looooooooooooooooooooong text\",\r\n        \"pid\": 1\r\n      }\r\n    ]\r\n  };\r\n\r\n  public getTreatmentPlan = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"trtId\": 1,\r\n        \"trtDesc\": \"Root canal treatment\",\r\n        \"trtName\": \"RCT\",\r\n        \"clinicalFinding\": 1\r\n      },\r\n      {\r\n        \"trtId\": 3,\r\n        \"trtDesc\": \"Extraction\",\r\n        \"trtName\": \"Extraction\",\r\n        \"clinicalFinding\": 2\r\n      },\r\n      {\r\n        \"trtId\": 4,\r\n        \"trtDesc\": \"Oral prophylaxis\",\r\n        \"trtName\": \"Oral prophylaxis\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 5,\r\n        \"trtDesc\": \"Restoration statined teeth\",\r\n        \"trtName\": \"Restoration Stain\",\r\n        \"clinicalFinding\": 9\r\n      },\r\n      {\r\n        \"trtId\": 6,\r\n        \"trtDesc\": \"Prosthesis removable\",\r\n        \"trtName\": \"Prosthesis Remove\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 7,\r\n        \"trtDesc\": \"Prosthesis fixed\",\r\n        \"trtName\": \"Prosthesis Fixed\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 8,\r\n        \"trtDesc\": \"Prosthesis implant\",\r\n        \"trtName\": \"Prosthesis Implant\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 10,\r\n        \"trtDesc\": \"Other treatment\",\r\n        \"trtName\": \"Other\",\r\n        \"clinicalFinding\": 10\r\n      }\r\n    ]\r\n  };\r\n\r\n  public getMedicine = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"medicineName\": \"med1\",\r\n        \"ageGroup\": \"10to30\",\r\n        \"treatmentId\": 1,\r\n        \"dosage\": \"sokale bikale 1 ta khabar por\",\r\n        \"clinicalAvailability\": 7,\r\n        \"diseaseCode\": \"dCode1\",\r\n        \"diseaseName\": \"dName1\",\r\n        \"ageGroupBean\": null,\r\n        \"treatmentPlan\": null,\r\n        \"medicineId\": 1\r\n      },\r\n      {\r\n        \"medicineName\": \"med2\",\r\n        \"ageGroup\": \"10to30\",\r\n        \"treatmentId\": 1,\r\n        \"dosage\": \"sokale bikale 1 ta khabar por\",\r\n        \"clinicalAvailability\": 7,\r\n        \"diseaseCode\": \"dCode2\",\r\n        \"ageGroupBean\": null,\r\n        \"treatmentPlan\": null,\r\n        \"medicineId\": 2\r\n      },\r\n      {\r\n        \"medicineName\": \"med3\",\r\n        \"ageGroup\": \"10to30\",\r\n        \"treatmentId\": 1,\r\n        \"dosage\": \"sokale bikale 1 ta khabar por\",\r\n        \"clinicalAvailability\": 7,\r\n        \"diseaseCode\": \"dCode3\",                \r\n        \"medicineId\": 3\r\n      }\r\n    ]\r\n  };\r\n\r\n  public medicalMaster = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"medicalHistoryName\": \"Hyperglycaemia\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hypertension\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hypotension\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Asthma\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Cerebro vascular accident\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Cardiac diseases\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hypothyroidism\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hyperthyroidism\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Drug hypersensitivity\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Other\",\r\n        \"medicalHistories\": null\r\n      }\r\n    ]\r\n  };\r\n\r\n  getFeeConfig = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": {\r\n      \"feeConfigId\": 18,\r\n      \"ageGroupId\": \"10to30\",\r\n      \"ageGroupPercent\": 10,\r\n      \"baseFee\": 60,\r\n      \"toothGroupId\": 2,\r\n      \"toothGroupPercent\": 10,\r\n      \"treatmentPlanId\": 1,\r\n      \"totalFee\": 72,\r\n      \"amountPaid\": 0\r\n    }\r\n  }\r\n\r\n  getFeeConfigList = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"feeConfigId\": 18,\r\n        \"ageGroupId\": \"10to30\",\r\n        \"ageGroupPercent\": 10,\r\n        \"baseFee\": 60,\r\n        \"toothGroupId\": 2,\r\n        \"toothGroupPercent\": 10,\r\n        \"treatmentPlanId\": 1,\r\n        \"totalFee\": 72,\r\n      },\r\n      {\r\n        \"feeConfigId\": -24,\r\n        \"ageGroupId\": \"3to10\",\r\n        \"ageGroupPercent\": 30,\r\n        \"baseFee\": 89,\r\n        \"toothGroupId\": 1,\r\n        \"toothGroupPercent\": 5,\r\n        \"treatmentPlanId\": 2,\r\n        \"totalFee\": 119\r\n      }\r\n    ]\r\n  };\r\n\r\n  getAgeGroup = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": {\r\n      \"groupId\": \"3to13\",\r\n      \"fromAge\": 3,\r\n      \"toAge\": 13\r\n    }\r\n  };\r\n\r\n  clinicalFindingList = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"fdesc\": \"desc Caries\",\r\n        \"fid\": 1,\r\n        \"fname\": \"Caries\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Periodontities\",\r\n        \"fid\": 2,\r\n        \"fname\": \"Periodontities\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Grossly decayed\",\r\n        \"fid\": 3,\r\n        \"fname\": \"Grossly decayed\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Root stump\",\r\n        \"fid\": 4,\r\n        \"fname\": \"Root stump\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Attrition\",\r\n        \"fid\": 5,\r\n        \"fname\": \"Attrition\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Cervical abrasion\",\r\n        \"fid\": 6,\r\n        \"fname\": \"Cervical abrasion\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Missing tooth\",\r\n        \"fid\": 7,\r\n        \"fname\": \"Missing tooth\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Calculus\",\r\n        \"fid\": 8,\r\n        \"fname\": \"Calculus\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Stain\",\r\n        \"fid\": 9,\r\n        \"fname\": \"Stain\"\r\n      },\r\n      {\r\n        \"fdesc\": \"other desc\",\r\n        \"fid\": 10,\r\n        \"fname\": \"Others\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  addonClinicalFinding = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\":\r\n    {\r\n      \"fdesc\": \"desc Caries\",\r\n      \"fid\": 1,\r\n      \"fname\": \"Caries\"\r\n    }\r\n  }\r\n\r\n  public toothQuadrentList = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"toothIndex\": 41,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 42,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 43,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 44,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 35,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 36,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 37,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 38,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 45,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 46,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 12,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 11,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 14,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 13,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 16,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 15,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 18,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 17,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 22,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 21,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 24,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 23,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 26,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 25,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 28,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 27,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 32,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 31,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 34,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 33,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 48,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 47,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 4\r\n      }\r\n    ]\r\n  };\r\n\r\n  public getDashboardView = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"pHistory\": {\r\n          \"prescriptionId\": 34,\r\n          \"advice\": \"general test  advice\",\r\n          \"chiefComplaint\": \"general test cc\",\r\n          \"clinicalFindings\": \"Periodontities -  33 34 35,Stain -  11 32\",\r\n          \"investigation\": \"general test iv\",\r\n          \"nextAppointment\": 1542393000000,\r\n          \"note\": \"general test notes\",\r\n          \"patientId\": 1,\r\n          \"provisionalDiagnosis\": \"general test pd\",\r\n          \"tsCreated\": 1542426489661,\r\n          \"tsModified\": null\r\n        },\r\n        \"fbl\": [\r\n          {\r\n            \"fId\": 34,\r\n            \"amount\": 500,\r\n            \"amountPaid\": 390,\r\n            \"trtmntPlanRef\": 2,\r\n            \"notes\": \"general test fee\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": null,\r\n            \"tsCreated\": 1542426489787,\r\n            \"paymentTs\": null\r\n          },\r\n          {\r\n            \"fId\": 35,\r\n            \"amount\": 356,\r\n            \"amountPaid\": 70,\r\n            \"trtmntPlanRef\": 2,\r\n            \"notes\": \"general test fee\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": null,\r\n            \"tsCreated\": 1542426489787,\r\n            \"paymentTs\": null\r\n          }\r\n        ],\r\n        \"mhv\": [\r\n          {\r\n            \"medicalHistoryId\": 37,\r\n            \"medicalHistoryName\": \"Hypotension\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34,\r\n            \"severity\": null,\r\n            \"startedFrom\": 1542426489878\r\n          },\r\n          {\r\n            \"medicalHistoryId\": 38,\r\n            \"medicalHistoryName\": \"Asthma\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34,\r\n            \"severity\": null,\r\n            \"startedFrom\": 1542426489878\r\n          }\r\n        ],\r\n        \"medhv\": [\r\n          {\r\n            \"medId\": 20,\r\n            \"diseaseCode\": \"dCode2\",\r\n            \"diseaseName\": null,\r\n            \"dosage\": \"dose\",\r\n            \"medicineName\": \"med2\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34\r\n          },\r\n          {\r\n            \"medId\": 21,\r\n            \"diseaseCode\": \"dCode3\",\r\n            \"diseaseName\": null,\r\n            \"dosage\": \"dose\",\r\n            \"medicineName\": \"med3\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34\r\n          }\r\n        ],\r\n        \"tphv\": [\r\n          {\r\n            \"clinicalFinding\": \"Periodontities\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 40,\r\n            \"toothIndex\": \"35\",\r\n            \"tsCreated\": 1546330807107,\r\n            \"tsModified\": null,\r\n            \"status\": \"Pending\",\r\n            \"tname\": \"Prosthesis removable\",\r\n            \"tid\": 8\r\n          },\r\n          {\r\n            \"clinicalFinding\": \"Periodontities\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 40,\r\n            \"toothIndex\": \"34\",\r\n            \"tsCreated\": 1546330836694,\r\n            \"tsModified\": null,\r\n            \"status\": \"Completed\",\r\n            \"tname\": \"RCT\",\r\n            \"tid\": 9\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map,tap, catchError } from 'rxjs/operators';\nimport { Response,Patient, FeeConfigRequestListView, DashboardView, ClinicalFindingView, DashboardResponse } from '../models/models';\nimport { DummyResponse } from './dummyresponse';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpcommService {\n\n  dummyResp : DummyResponse;\n  dummy = true;\n  resp : Response;\n  baseUrl = 'http://localhost:12000/my-portal/';\n  ageGrpUrl = this.baseUrl + 'age-group/get-age-group?age=';\n  getPatientUrl = this.baseUrl + 'patient/get-patient';\n  addPatientUrl = this.baseUrl + 'patient/add-patient';\n  getAllToothQuadrent = this.baseUrl + 'tooth-qdr/get-all';\n  getAllTreatmentPlan = this.baseUrl + 'trtmnt/get-plan';\n  getAllClinicalFindings = this.baseUrl + 'clinical-finding/get-all';\n  getAllMedicalHistory = this.baseUrl + 'medical-history/get-all'\n  getAllMedicalHistoryMaster = this.baseUrl + 'medical-history/get-medical-master';\n  getMedicineUrl = this.baseUrl + 'medicine/get-medicine';\n  getMedicineUrlPart1 = '?trtmntId=';\n  getMedicineUrlPart2 = '&age=';\n  getFeeConfigUrl = this.baseUrl + 'fee/get-config';\n  getFeeConfigAgeGrpPart1Url = '?age=';\n  getFeeConfigToothGrpPart2Url = '&tooth_grp_idx=';\n  getFeeConfigTrtIdPart3Url = '&trtmnt_id=';\n  getFeeConfigListUrl = this.baseUrl + 'fee/get-config-list';\n  addDashboardUrl = this.baseUrl + 'dashboard/add-dashboard';\n  getDashboard = this.baseUrl + 'dashboard/get-dashboard?patientId=';\n  postAddClinicalFindingUrl = this.baseUrl + 'clinical-finding/add-clinical-finding'\n  getAddTreatmentPlanUrl = this.baseUrl + 'trtmnt/add-treatment-plan'\n  \n  constructor(public http : HttpClient) {\n    this.dummyResp = new DummyResponse();\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({ \n      'Accept' : 'application/json',\n      // 'Content-Type' : 'text/plain',\n      'Content-Type' : 'application/json',\n    })\n  };\n\n  parseData(s : object) : any{\n    return JSON.parse(JSON.stringify(s));\n  }\n\n  getDashboardView(patientId: number): Observable<Response>{\n    if(this.dummy){      \n      return of(this.parseData(this.dummyResp.getDashboardView));\n    }else{\n      return this.http.get<Response>(this.baseUrl+'dashboard/get-dashboard?patientId='+patientId, this.httpOptions);\n    }\n  }\n\n  getAgeGroup(age : string) : Observable<Response>{\n    if(this.dummy){      \n      return of(this.parseData(this.dummyResp.getAgeGroup));\n    }else{\n      return this.http.get<Response>(this.ageGrpUrl+age, this.httpOptions);\n    }\n  }\n\n  getPatient(patient : Patient) : Observable<Response>{\n    //console.log('http service called');\n    if(this.dummy){\n      //console.log(this.parseData(this.dummyResp.getPatient));\n      return of(this.parseData(this.dummyResp.getPatient));\n    }else{\n      //console.log(1.2);\n      return this.http.post<Response>(this.getPatientUrl,patient,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('test', new Response()))\n        )\n      ;\n    }\n  }\n\n  addPatient(p : Patient) : Observable<Response>{\n    //console.log('Posting patient');\n    //console.log(p);\n    if(this.dummy){\n      //console.log('Dummy post');\n      return of(this.parseData(this.dummyResp.getPatient));\n    }else{\n      //console.log('Real post');\n      return this.http.post<Response>(this.addPatientUrl,p,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('post patient', new Response()))\n        );\n    }\n  }\n\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n   \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n   \n      // TODO: better job of transforming error for user consumption\n      //console.log(`${operation} failed: ${error.message}`);\n   \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  getClinicalFindings() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.clinicalFindingList));\n    }else{\n      return this.http.get<Response>(this.getAllClinicalFindings,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('Get Clinicalfindings',new Response()))\n        )\n    }\n  };\n\n  getToothQuadrents() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.toothQuadrentList));\n    }else{\n      return this.http.get<Response>(this.getAllToothQuadrent,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('Get ToothQuadrent',new Response()))\n        )\n    }\n  };\n\n  getMedicalMaster() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.medicalMaster));\n    }else{\n      return this.genericGetRequest(this.getAllMedicalHistoryMaster);\n    }\n  };\n\n  getTreatmentPlan() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getTreatmentPlan));\n    }else {\n      return this.genericGetRequest(this.getAllTreatmentPlan);\n    }\n  };\n\n  getAllMedicine(): Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getMedicine));\n    }else{\n      return this.genericGetRequest(this.baseUrl+'medicine/');\n    }\n  }\n\n  getMedicineView(url : string) : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getMedicine));\n    }else{\n      return this.genericGetRequest(url);\n    }\n  }\n\n  getFeeConfig(age: number, tooth_grp_idx: number, treatmentId: number){\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getFeeConfig))\n    }else{\n      let url = this.getFeeConfigUrl + this.getFeeConfigAgeGrpPart1Url + age + this.getFeeConfigToothGrpPart2Url + tooth_grp_idx + this.getFeeConfigTrtIdPart3Url + treatmentId\n      return this.genericGetRequest(url)\n    }\n  }\n\n  getFeeConfigList(age : number, feeReqListView : FeeConfigRequestListView[]) : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getFeeConfigList))\n    }else{\n      let url = this.getFeeConfigListUrl + this.getFeeConfigAgeGrpPart1Url + age;\n      return this.genericPostRequest(url, feeReqListView);\n    }\n  }\n\n  addDashBoard(req : DashboardView) : Observable<Response>{\n    if(!this.dummy){\n      return this.genericPostRequest(this.addDashboardUrl,req,'Add dashboard')\n    }else{\n      let resp = new Response()\n      resp.status = 'SUCCESS'\n      let response = new DashboardResponse()\n      response.patientId = req.pHistory.patientId\n      response.prescriptionId = 99\n      response.status = true\n      resp.resp = response\n      return of(resp)\n    }\n  }\n\n  addClinicalFinding(req: ClinicalFindingView) : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.addonClinicalFinding))\n    }else{\n      return this.genericPostRequest(this.postAddClinicalFindingUrl, req, 'Add cf');\n    }\n  }\n\n  genericGetRequest(url : string, notation : string = 'http get') : Observable<Response>{\n    return this.http.get<Response>(url, this.httpOptions).pipe(catchError(this.handleError(notation, new Response())))\n  }\n\n  genericPostRequest(url : string, reqObject : any, notation : string = 'http post') : Observable<Response>{\n    console.log('Post', url);\n    console.log('Data', reqObject);\n    return this.http.post<Response>(url, reqObject, this.httpOptions).pipe(catchError(this.handleError(notation, new Response())))\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TreatmentPlanHistoryView, TreatmentPlanStatus } from '../models/models'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreatmentPlanService {\n\n  private treatmentPlanHistoryViewList: TreatmentPlanHistoryView[]\n  private patientId: number\n  private prescriptionId: number\n\n  constructor() { }\n\n  setTreatmentData(patientId: number,\n    prescriptionId: number,\n    treatmentPlanHistoryViewList: TreatmentPlanHistoryView[]\n  ) {\n    this.patientId = patientId\n    this.prescriptionId = prescriptionId\n    this.treatmentPlanHistoryViewList = treatmentPlanHistoryViewList;\n  }\n\n  // setPrescriptionDetails(patientId: number, prescriptionId: number) {\n  //   this.patientId = patientId\n  //   this.prescriptionId = prescriptionId\n  // }\n\n  getTreatmentPlanSuggestionViewList(): TreatmentPlanHistoryView[] {\n    return (this.treatmentPlanHistoryViewList.length > 0) ? this.treatmentPlanHistoryViewList.filter(tph => tph.status == TreatmentPlanStatus.PENDING) : []\n  }\n\n  getTreatmentDoneHistoryViewList(): TreatmentPlanHistoryView[] {\n    return (this.treatmentPlanHistoryViewList.length > 0) ? this.treatmentPlanHistoryViewList.filter(tph => tph.status == TreatmentPlanStatus.COMPLETED) : []\n  }\n\n  getPatientId(): number {\n    return this.patientId\n  }\n  \n  getPrescriptionId(): number {\n    return this.prescriptionId\n  }\n}\n","export class SnackbarModel{\r\n    msg: string = ''\r\n    duration: number = 3000\r\n    isError: Boolean = false\r\n    action: string = 'OK'\r\n    callback: () => void\r\n}","module.exports = \".error-snack {\\r\\n    color: rgb(209, 77, 0);\\r\\n}\\r\\n.info-snack {\\r\\n    color: yellowgreen;\\r\\n}\\r\\n.snackbtn {\\r\\n    float: right;\\r\\n    padding-right: 5px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"isError\\\">\\n    <span *ngIf=\\\"msg?.length > 0\\\" class=\\\"error-snack\\\">{{msg}}\\n        <button class=\\\"snackbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"actionCallback()\\\">{{action}}</button>\\n    </span>\\n    <span *ngIf=\\\"msg?.length == 0\\\" class=\\\"error-snack\\\">Oops! Something went wrong\\n        <button class=\\\"snackbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"actionCallback()\\\">{{action}}</button>\\n    </span>\\n</div>\\n<span *ngIf=\\\"!isError\\\" class=\\\"info-snack\\\">{{msg}}\\n    <button class=\\\"snackbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"actionCallback()\\\">{{action}}</button>\\n</span>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar, MAT_SNACK_BAR_DATA } from '@angular/material';\nimport { SnackbarModel } from './snackbar-model'\n\n@Component({\n  selector: 'app-snackhelper',\n  templateUrl: './snackhelper.component.html',\n  styleUrls: ['./snackhelper.component.css']\n})\nexport class SnackhelperComponent implements OnInit {\n\n  // snackBarRef: MatSnackBarRef<SimpleSnackBar>\n  // snackBarOnDismissal: () => void\n  // snackBarOnAction: () => void\n\n  //public snackBar: MatSnackBar,\n\n  isError: Boolean = false\n  msg: string = ''\n  action: string\n  \n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: SnackbarModel) {\n    this.isError = data.isError;\n    this.action = data.action;\n    if (data.msg && data.msg.length > 0) {\n      this.msg = data.msg;\n    }\n  }\n  ngOnInit() { }\n\n  actionCallback(){\n    this.data.callback();\n  }\n  // open(msg: string, action?: string) {\n\n  //   this.snackBarRef = this.snackBar.open(msg, action, {\n  //     duration: 4000,\n  //     direction: \"ltr\",\n  //     data: 'Sample data'\n  //   });\n\n  //   this.snackBarRef.afterDismissed().subscribe(() => {\n  //     this.snackBarOnDismissal();\n  //   });\n\n  //   this.snackBarRef.onAction().subscribe(() => {\n  //     this.snackBarOnAction();\n  //   });\n  // }\n}","module.exports = \".example-stretched-tabs {\\r\\n    max-width: 1000px;\\r\\n  }\\r\\n  .example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-card-parent {\\r\\n    /* max-width: 800px; */\\r\\n    min-width: 50px;\\r\\n    margin-left: 50px;\\r\\n    margin-top: 30px;\\r\\n    width : 100%;\\r\\n  }\\r\\n  .example-card {\\r\\n    /* max-width: 800px; */\\r\\n    min-width: 50px;\\r\\n    margin: 30px;\\r\\n    /* width : 100%; */\\r\\n  }\\r\\n  .expansion-margin {\\r\\n    max-width: 500px;\\r\\n    margin-left: 150px;\\r\\n    margin-top: 30px;\\r\\n  }\\r\\n  .example-section {\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    height: 60px;\\r\\n  }\\r\\n  .example-margin {\\r\\n    /* margin: 0 10px; */\\r\\n    margin-top: 20px;\\r\\n    margin-left : 10px;\\r\\n    margin-right: 10px;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  .example-short-margin {    \\r\\n    margin-right: 10px;\\r\\n  }\\r\\n  .mat-radio-button ~ .mat-radio-button {\\r\\n    padding: 36px;\\r\\n  }\\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n  }\\r\\n  tr.example-element-row:not(.example-expanded-row):hover {\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  tr.example-element-row:not(.example-expanded-row):active {\\r\\n    background: #efefef;\\r\\n  }\\r\\n  .example-element-row td {\\r\\n    border-bottom-width: 0;\\r\\n  }\\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  .example-element-diagram {\\r\\n    min-width: 80px;\\r\\n    border: 2px solid black;\\r\\n    padding: 8px;\\r\\n    font-weight: lighter;\\r\\n    margin: 8px 0;\\r\\n    height: 104px;\\r\\n  }\\r\\n  .example-element-symbol {\\r\\n    font-weight: bold;\\r\\n    font-size: 40px;\\r\\n    line-height: normal;\\r\\n  }\\r\\n  .example-element-description {\\r\\n    padding: 16px;\\r\\n  }\\r\\n  /* .example-element-description-attribution {\\r\\n    opacity: 0.5;\\r\\n  } */\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-half-width{\\r\\n    width : 50%;\\r\\n  }\\r\\n  .example-grid-margin{\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 10px;\\r\\n    margin-right: 50px;\\r\\n  }\\r\\n  .rcorners2 {\\r\\n    border-radius: 25px;\\r\\n    border: 2px solid #73AD21;\\r\\n    /* padding-left: 4px;  \\r\\n    width: 200px;\\r\\n    height: 150px;     */\\r\\n    margin-left: 4px;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  tr.mat-footer-row {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  tr{\\r\\n    text-align:center !important\\r\\n  }\\r\\n  th th.mat-header-cell{\\r\\n    text-align:center !important\\r\\n  }\\r\\n  td{\\r\\n    text-align:center !important\\r\\n  }\\r\\n  .mat-table-sticky {\\r\\n    border-top: 1px solid #e0e0e0;\\r\\n  }\\r\\n  .example-section {\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    height: 60px;\\r\\n  }\"","module.exports = \"<!-- Treatment plan history section -->\\n<p>\\n  <span class=\\\"example-margin\\\">Treatment plan history</span>\\n</p>\\n<button \\n    class=\\\"example-margin rcorners2\\\" \\n    mat-stroked-button color=\\\"primary\\\" \\n    (click)=\\\"fetchTphvList()\\\">Check History\\n  </button>\\n<div *ngIf=\\\"requestLoading\\\">\\n  <section class=\\\"example-section\\\">\\n    <mat-progress-bar\\n        class=\\\"example-margin\\\"\\n        color=\\\"primary\\\"\\n        mode=\\\"indeterminate\\\">\\n    </mat-progress-bar>\\n  </section>\\n</div>\\n<div class=\\\"example-full-width\\\">\\n  <div *ngIf=\\\"treatmentPlanHistories && treatmentPlanHistories.length > 0\\\">\\n    <table mat-table [dataSource]=\\\"trtmntPlanHistListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <ng-container matColumnDef=\\\"tname\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Name </th>\\n        <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.tname}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"clinicalFinding\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\n        <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.clinicalFinding}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"toothIndex\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Tooth </th>\\n        <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.toothIndex}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"note\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Note </th>\\n        <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.note}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"tsCreated\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Time </th>\\n        <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.tsCreated | date:'dd/MM/yy hh:mm a'}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"trtmntPlanHistListViewColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: trtmntPlanHistListViewColumns;\\\"></tr>\\n    </table>\\n  </div>\\n</div>\\n\\n<div>\\n  <button \\n    class=\\\"example-margin rcorners2\\\" \\n    mat-stroked-button color=\\\"primary\\\" \\n    (click)=\\\"getSuggestionList()\\\">Select from suggestion\\n  </button>\\n  OR\\n  <button \\n    class=\\\"example-margin rcorners2\\\" \\n    mat-stroked-button color=\\\"primary\\\" \\n    (click)=\\\"addTphv()\\\">Add manually\\n  </button>\\n</div>\\n\\n<!-- Suggestion to add from Treatment Plan List -->\\n<div class=\\\"example-full-width\\\" *ngIf=\\\"showTrtmentPlanSuggestionList\\\">\\n  <table mat-table [dataSource]=\\\"trtmntPlanListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"tname\\\">\\n      <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Plan </th>\\n      <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.tname}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"clinicalFinding\\\">\\n      <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\n      <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.clinicalFinding}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"toothIndex\\\">\\n      <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Tooth </th>\\n      <td mat-cell *matCellDef=\\\"let tphv; let i = index;\\\">\\n        {{tphv.toothIndex}}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Action </th>\\n      <td mat-cell *matCellDef=\\\"let tphv; let i = index;\\\">\\n        <button class=\\\"rcorners2\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"addTphv(tphv, i)\\\">Select</button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"trtmntPlanListViewColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: trtmntPlanListViewColumns;\\\"></tr>\\n  </table>\\n</div>\\n<!-- selectedTreatmentPlanHistView -->\\n<div *ngIf=\\\"showTrtmentPlanAdditionSection\\\">\\n  <mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <mat-card-title>Treatment Plan</mat-card-title>\\n      <mat-card-subtitle> {{selectedTreatmentPlanHistView.treatmentPlanViewModel}} </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <mat-form-field class=\\\"example-short-margin\\\" hintLabel=\\\"Max 30 characters\\\">\\n        <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Treatment name\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.tname\\\"\\n          required>\\n        <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.tname?.length || 0}}/30</mat-hint>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-short-margin\\\" hintLabel=\\\"Max 30 characters\\\">\\n        <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"C/F\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.clinicalFinding\\\"\\n          required>\\n        <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.clinicalFinding?.length || 0}}/30</mat-hint>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-short-margin\\\" hintLabel=\\\"Max 30 characters\\\">\\n        <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Tooth\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.toothIndex\\\"\\n          required>\\n        <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.toothIndex?.length || 0}}/30</mat-hint>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"example-short-margin\\\">\\n        <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"treatmentStatusForm\\\" [(ngModel)]=\\\"selectedTreatmentPlanStatus\\\" required>\\n          <mat-option *ngFor=\\\"let statusList of treatmentStatusList\\\" [value]=\\\"statusList\\\">{{statusList}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field hintLabel=\\\"Max 30 characters\\\">\\n        <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Note\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.note\\\">\\n        <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.note?.length || 0}}/30</mat-hint>\\n      </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-stroked-button class=\\\"example-margin rcorners2\\\" color=\\\"primary\\\" (click)=\\\"addTreatmentPlan()\\\" >ADD</button>\\n      <button mat-stroked-button class=\\\"example-margin rcorners2\\\" color=\\\"warn\\\" (click)=\\\"deleteSelectedTphv()\\\" >DELETE</button>\\n    </mat-card-actions>\\n  </mat-card>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\n\nimport { TreatmentPlanHistoryView, TreatmentPlanStatus, TreatmentPlan } from '../models/models';\nimport { TreatmentPlanService } from '../services/treatment-plan.service'\nimport { HttpcommService } from '../services/httpcomm.service';\n\n\n@Component({\n  selector: 'app-treatment-plan',\n  templateUrl: './treatment-plan.component.html',\n  styleUrls: ['./treatment-plan.component.css']\n})\nexport class TreatmentPlanComponent implements OnInit {\n\n  trtmntPlanHistListDataSource = new MatTableDataSource<TreatmentPlanHistoryView>()\n  trtmntPlanHistListViewColumns = ['tname', 'clinicalFinding', 'toothIndex', 'note', 'tsCreated']\n\n  trtmntPlanListDataSource = new MatTableDataSource<TreatmentPlanHistoryView>()\n  trtmntPlanListViewColumns = ['tname', 'clinicalFinding', 'toothIndex', 'action']\n  showTrtmentPlanSuggestionList = false\n  showTrtmentPlanAdditionSection = false\n  selectedTreatmentPlanHistView = new TreatmentPlanHistoryView()\n  requestLoading = false //Progress bar at the time request loading\n  treatmentPlanHistories: TreatmentPlanHistoryView[] = [];\n  treatmentStatusForm = new FormControl()\n  treatmentStatusList : string[] = []\n  selectedTreatmentPlanStatus : string //selector value\n\n  constructor(public treatmentPlanService: TreatmentPlanService, public httpComService : HttpcommService) { }\n\n  ngOnInit() { \n    this.treatmentStatusList.push(TreatmentPlanStatus.COMPLETED.valueOf())\n    this.treatmentStatusList.push(TreatmentPlanStatus.PENDING.valueOf())\n  }\n\n  // Show treatment plan list from prescription history\n  getSuggestionList() {\n    let suggestions = this.treatmentPlanService.getTreatmentPlanSuggestionViewList();\n    if (suggestions && suggestions.length > 0) {\n      this.showTrtmentPlanSuggestionList = true\n      this.trtmntPlanListDataSource.data = suggestions;\n    }\n  }\n\n  //Show custom addition section from suggestion list or for manual addition\n  addTphv(tphv: TreatmentPlanHistoryView = null, index: number = 0) {\n    this.showTrtmentPlanSuggestionList = false\n    this.showTrtmentPlanAdditionSection = true\n    if (tphv || tphv != null) {\n      this.selectedTreatmentPlanHistView = tphv\n      this.selectedTreatmentPlanStatus = tphv.status\n    }else{\n      this.selectedTreatmentPlanHistView = new TreatmentPlanHistoryView()\n      this.selectedTreatmentPlanStatus = ''\n    }\n  }\n\n  deleteSelectedTphv() {\n    this.showTrtmentPlanAdditionSection = false\n    this.selectedTreatmentPlanHistView = new TreatmentPlanHistoryView()\n  }\n\n  //Fetch previous entries\n  fetchTphvList() {\n    this.treatmentPlanHistories = this.treatmentPlanService.getTreatmentDoneHistoryViewList()\n    if (this.treatmentPlanHistories && this.treatmentPlanHistories.length > 0) {\n      this.trtmntPlanHistListDataSource.data = this.treatmentPlanHistories;\n    }\n  }\n\n  addTreatmentPlan(){\n    if(this.validateData()){\n      this.selectedTreatmentPlanHistView.patientId = this.treatmentPlanService.getPatientId()\n      this.selectedTreatmentPlanHistView.prescriptionId = this.treatmentPlanService.getPrescriptionId()\n      this.selectedTreatmentPlanHistView.status = this.treatmentStatusForm.value\n      console.log(\"Add Treatment Plan\", JSON.stringify(this.selectedTreatmentPlanHistView))\n      let url : string = this.httpComService.getAddTreatmentPlanUrl+'?patientId='+this.treatmentPlanService.getPatientId()+'&prescriptionId='+this.treatmentPlanService.getPrescriptionId()\n      console.log(\"URL\", JSON.stringify(url))\n      this.httpComService.genericPostRequest(\n        url, \n        this.selectedTreatmentPlanHistView, \n        \"Add Treatment Plan\"\n        ).subscribe( resp => {\n        if(resp.status == \"SUCCESS\"){\n          //Update History\n        }\n      })\n    }\n  }\n\n  validateData() : boolean {\n    if(!this.selectedTreatmentPlanHistView) return false\n    if(!this.selectedTreatmentPlanHistView.clinicalFinding || this.selectedTreatmentPlanHistView.clinicalFinding.length <= 0) return false\n    if(!this.selectedTreatmentPlanHistView.tname || this.selectedTreatmentPlanHistView.tname.length <= 0) return false\n    if(!this.selectedTreatmentPlanHistView.toothIndex) return false\n    if(!this.treatmentStatusForm.value || this.treatmentStatusForm.value.length <= 0) return false\n    if(!this.treatmentPlanService.getPatientId()) return false\n    if(!this.treatmentPlanService.getPrescriptionId()) return false\n    return true\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}