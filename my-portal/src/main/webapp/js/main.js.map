{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-prescription/create-prescription.component.css","webpack:///./src/app/create-prescription/create-prescription.component.html","webpack:///./src/app/create-prescription/create-prescription.component.ts","webpack:///./src/app/create-prescription/custom-fee-insert.html","webpack:///./src/app/create-prescription/dialog-tooth-cf.html","webpack:///./src/app/create-prescription/medicine-dialog/medicine-insert.html","webpack:///./src/app/create-prescription/medicine-dialog/medicine-insertion-dialog-component.ts","webpack:///./src/app/dash-routing.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/mat-sort-table/mat-sort-table.component.css","webpack:///./src/app/mat-sort-table/mat-sort-table.component.html","webpack:///./src/app/mat-sort-table/mat-sort-table.component.ts","webpack:///./src/app/material-test/material-test.component.css","webpack:///./src/app/material-test/material-test.component.html","webpack:///./src/app/material-test/material-test.component.ts","webpack:///./src/app/models/models.ts","webpack:///./src/app/print/print.component.css","webpack:///./src/app/print/print.component.html","webpack:///./src/app/print/print.component.ts","webpack:///./src/app/services/commonservice.service.ts","webpack:///./src/app/services/dummyresponse.ts","webpack:///./src/app/services/event-service.service.ts","webpack:///./src/app/services/httpcomm.service.ts","webpack:///./src/app/services/treatment-plan.service.ts","webpack:///./src/app/snackhelper/snackbar-model.ts","webpack:///./src/app/snackhelper/snackhelper.component.css","webpack:///./src/app/snackhelper/snackhelper.component.html","webpack:///./src/app/snackhelper/snackhelper.component.ts","webpack:///./src/app/treatment-plan/treatment-plan.component.css","webpack:///./src/app/treatment-plan/treatment-plan.component.html","webpack:///./src/app/treatment-plan/treatment-plan.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\n  WORK IN PROGRESS!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\"","module.exports = \"<mat-sidenav-container\\n    class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\n  <mat-sidenav #sidenav (keydown.escape)=\\\"sidenav.close()\\\" disableClose>\\n    <!-- <p><button mat-button (click)=\\\"close('toggle button')\\\">Toggle</button></p> -->\\n    <p *ngFor = \\\"let menu of navMenus\\\">\\n      <button mat-button routerLink={{menu.path}} (click) = \\\"sidenav.close()\\\">{{menu.name}}</button>  \\n    </p>\\n    <!-- <p>      \\n      <button mat-button [routerLink]=\\\"['print']\\\" [queryParams]=\\\"{ patientId:1 , prescriptionId:12}\\\" (click) = \\\"sidenav.close()\\\">Print</button>\\n    </p> -->\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <p>\\n      <button mat-icon-button (click)=\\\"sidenav.open()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">home</mat-icon>\\n      </button>\\n    </p>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n<!-- <nav>\\n  <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n  <a routerLink=\\\"/admin\\\">Admin</a>\\n</nav> -->\\n\\n\"","import { Component,ViewChild } from '@angular/core';\r\nimport {MatSidenav} from '@angular/material/sidenav';\r\nimport { DashRoutingModule } from './dash-routing.module'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  title :string = 'eps-dashboard';\r\n  reason :string = '';\r\n  navMenus = [\r\n    {\"name\": \"Dashboard\", \"path\":\"dashboard\"},\r\n    {\"name\": \"Admin\", \"path\":\"admin\"},\r\n    // {\"name\": \"Test\", \"path\":\"test\"},\r\n    // {\"name\": \"SortTable\", \"path\":\"sortTable\"},\r\n    // {\"name\": \"Print\", \"path\":\"print?patientId=1&prescriptionId=12\"}\r\n  ]\r\n  constructor(){\r\n  }\r\n\r\n  close(reason: string) {\r\n    this.reason = reason;\r\n    this.sidenav.close();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport { DashRoutingModule } from './/dash-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { SnackhelperComponent } from './snackhelper/snackhelper.component';\r\nimport { CreatePrescriptionComponent } from './create-prescription/create-prescription.component';\r\nimport { MaterialTestComponent } from './material-test/material-test.component';\r\nimport { DialogToothClinicalfindings, CustomFeeInsertionDialog } from './create-prescription/create-prescription.component';\r\nimport { MedicineInsertionDialog } from './create-prescription/medicine-dialog/medicine-insertion-dialog-component'\r\nimport { TreatmentPlanComponent } from './treatment-plan/treatment-plan.component';\r\nimport { PrintComponent } from './print/print.component';\r\nimport { MatSortTableComponent } from './mat-sort-table/mat-sort-table.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AdminComponent,\r\n    SnackhelperComponent,\r\n    CreatePrescriptionComponent,\r\n    MaterialTestComponent,\r\n    DialogToothClinicalfindings,\r\n    CustomFeeInsertionDialog,\r\n    MedicineInsertionDialog,\r\n    TreatmentPlanComponent,\r\n    PrintComponent,\r\n    MatSortTableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    DashRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [SnackhelperComponent,DialogToothClinicalfindings,CustomFeeInsertionDialog,MedicineInsertionDialog]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".example-stretched-tabs {\\r\\n  max-width: 1000px;\\r\\n}\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-card-parent {\\r\\n  /* max-width: 800px; */\\r\\n  min-width: 50px;\\r\\n  margin-left: 50px;\\r\\n  margin-top: 30px;\\r\\n  width : 100%;\\r\\n}\\r\\n.example-loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n.example-card {\\r\\n  /* max-width: 800px; */\\r\\n  min-width: 50px;\\r\\n  margin: 30px;\\r\\n  /* width : 100%; */\\r\\n}\\r\\n.expansion-margin {\\r\\n  max-width: 500px;\\r\\n  margin-left: 150px;\\r\\n  margin-top: 30px;\\r\\n}\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n.example-margin {\\r\\n  /* margin: 0 10px; */\\r\\n  margin-top: 20px;\\r\\n  margin-left : 10px;\\r\\n  margin-right: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n.mat-radio-button ~ .mat-radio-button {\\r\\n  padding: 36px;\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\ntr.example-detail-row {\\r\\n  height: 0;\\r\\n}\\r\\ntr.example-element-row:not(.example-expanded-row):hover {\\r\\n  background: #f5f5f5;\\r\\n}\\r\\ntr.example-element-row:not(.example-expanded-row):active {\\r\\n  background: #efefef;\\r\\n}\\r\\n.example-element-row td {\\r\\n  border-bottom-width: 0;\\r\\n}\\r\\n.example-element-detail {\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n}\\r\\n.example-element-diagram {\\r\\n  min-width: 80px;\\r\\n  border: 2px solid black;\\r\\n  padding: 8px;\\r\\n  font-weight: lighter;\\r\\n  margin: 8px 0;\\r\\n  height: 104px;\\r\\n}\\r\\n.example-element-symbol {\\r\\n  font-weight: bold;\\r\\n  font-size: 40px;\\r\\n  line-height: normal;\\r\\n}\\r\\n.example-element-description {\\r\\n  padding: 16px;\\r\\n}\\r\\n/* .example-element-description-attribution {\\r\\n  opacity: 0.5;\\r\\n} */\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-half-width{\\r\\n  width : 50%;\\r\\n}\\r\\n.example-grid-margin{\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 10px;\\r\\n  margin-right: 50px;\\r\\n}\\r\\n.rcorners2 {\\r\\n  border-radius: 25px;\\r\\n  border: 2px solid #73AD21;\\r\\n  padding-left: 4px; \\r\\n  /* width: 200px;\\r\\n  height: 150px;     */\\r\\n  margin-left: 4px;\\r\\n  margin-right: 4px;\\r\\n}\\r\\n/* label > input{ HIDE RADIO \\r\\n  visibility: hidden; Makes input not-clickable\\r\\n  position: absolute; Remove input from document flow\\r\\n}\\r\\nlabel > input { IMAGE STYLES\\r\\n  cursor:pointer;\\r\\n  border:2px solid transparent;\\r\\n}\\r\\nlabel > input:checked { (RADIO CHECKED) IMAGE STYLES\\r\\n  border:20px solid #f00;\\r\\n} */\\r\\n/* Fees table properties */\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n.mat-table-sticky {\\r\\n  border-top: 1px solid #e0e0e0;\\r\\n}\\r\\n/* .icon-search {\\r\\n  background: url(\\\"../images/search.svg\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n}\\r\\n.icon-refresh {\\r\\n  background: url(\\\"../images/refresh.svg\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n}\\r\\n.icon-print {\\r\\n  background: url(\\\"../images/print.svg\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n}\\r\\n.icon-add-fee {\\r\\n  background: url(\\\"../images/icons8-plus.svg\\\");\\r\\n  height: 27px;\\r\\n  width: 27px;\\r\\n  display: block;\\r\\n}\\r\\n.svg-icon{\\r\\n  margin: 5px auto auto;\\r\\n  padding: 0;\\r\\n  display: inline-block;\\r\\n  background-repeat: no-repeat no-repeat;\\r\\n  pointer-events: none;\\r\\n} */\\r\\n.md-button.logo {\\r\\n  height: 7rem;\\r\\n  width: 7rem;\\r\\n}\\r\\n.logo-image {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n/* Putting table headers in center */\\r\\n/* mat-cell{\\r\\n  display:flex !important;\\r\\n  justify-content:center!important;\\r\\n  \\r\\n}\\r\\n\\r\\nmat-header-cell {\\r\\n  display:flex;\\r\\n  justify-content:center;\\r\\n  text-align: center;\\r\\n} */\\r\\n.fab {\\r\\n  position: fixed;\\r\\n  bottom: 30px;\\r\\n  right: 30px;\\r\\n}\"","module.exports = \"<!-- Section to create presciption -->\\r\\n<mat-card class=\\\"example-card-parent\\\">\\r\\n\\r\\n  <mat-tab-group [selectedIndex]=\\\"prescriptionFromControl.value\\\" (selectedIndexChange)=\\\"prescriptionFromControl.setValue($event)\\\"\\r\\n    (selectedTabChange)=\\\"loadTabSpecificData($event.index)\\\" mat-stretch-tabs class=\\\"example-stretched-tabs mat-elevation-z4\\\">\\r\\n    <mat-tab label=\\\"Basic Info\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-content>\\r\\n          <table>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <i>Search by Patient details</i>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <!-- First Name -->\\r\\n                <div class=\\\"example-container example-margin\\\">\\r\\n                  <mat-form-field hintLabel=\\\"Min {{minCharToSearch}} char to search\\\">\\r\\n                    <input matInput cdkFocusInitial maxlength=20 placeholder=\\\"First name\\\" [(ngModel)]=\\\"selectedPatient.firstName\\\"\\r\\n                      (keyup)='fetchPatient($event)'>\\r\\n                    <mat-hint align=\\\"end\\\">{{selectedPatient.firstName?.length || 0}}/20</mat-hint>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                <!-- Last Name -->\\r\\n                <div class=\\\"example-container example-margin\\\">\\r\\n                  <mat-form-field hintLabel=\\\"Min {{minCharToSearch}} char to search\\\">\\r\\n                    <input matInput maxlength=20 placeholder=\\\"Last name\\\" [(ngModel)]=\\\"selectedPatient.lastName\\\" (keyup)='fetchPatient($event)'>\\r\\n                    <mat-hint align=\\\"end\\\">{{selectedPatient.lastName?.length || 0}}/20</mat-hint>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                <!-- Date of birth -->\\r\\n                <div class=\\\"example-container example-margin\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select from calender\\\" (dateChange)=\\\"dateValidate($event)\\\"\\r\\n                      disabled>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                <!-- Search patients -->\\r\\n                <div class=\\\"example-margin\\\">\\r\\n                  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"fetchPatient($event)\\\" matTooltip=\\\"Search\\\">\\r\\n                    <mat-icon aria-label=\\\"Search\\\">search</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                <!-- Reset all details -->\\r\\n                <div class=\\\"example-margin\\\">\\r\\n                  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"refreshSearch()\\\" matTooltip=\\\"Refresh\\\">\\r\\n                    <mat-icon aria-label=\\\"Refresh\\\">refresh</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <mat-divider></mat-divider>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <i>Search by Prescription number</i>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <!-- Prescription id -->\\r\\n                <div class=\\\"example-container example-margin\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput maxlength=20 placeholder=\\\"Enter Prescription ID\\\" [(ngModel)]=\\\"prescriptionId\\\">\\r\\n                    <mat-hint align=\\\"end\\\">Enter in number</mat-hint>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </td>\\r\\n              <td>\\r\\n                <div class=\\\"example-margin\\\">\\r\\n                  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"searchPrescription()\\\" matTooltip=\\\"Search\\\">\\r\\n                    <mat-icon aria-label=\\\"Search\\\">pageview</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n          <!-- Loading progressbar -->\\r\\n          <mat-progress-bar *ngIf=\\\"isPatientLoading\\\" color=\\\"color\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n          <!-- Patient list -->\\r\\n          <div *ngIf=\\\"isPatientLoaded\\\">\\r\\n            <table mat-table [dataSource]=\\\"patientDataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\r\\n              <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\r\\n              <ng-container matColumnDef=\\\"expandedDetail\\\">\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\r\\n                  <div class=\\\"example-element-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\r\\n                    <!-- <div class=\\\"example-element-diagram\\\">\\r\\n                      <div class=\\\"example-element-position\\\"> {{element.firstName}} </div>\\r\\n                      <div class=\\\"example-element-symbol\\\"> {{element.lastName}} </div>\\r\\n                      <div class=\\\"example-element-name\\\"> {{element.age}} </div>\\r\\n                      <div class=\\\"example-element-weight\\\"> {{element.contactNo1}} </div>\\r\\n                      <span>Image placeholder</span>\\r\\n                    </div> --> \\r\\n                    <div class=\\\"example-element-description\\\">\\r\\n                      <p>\\r\\n                        {{element.address1}}\\r\\n                      </p>\\r\\n                      <p>\\r\\n                        {{element.address2}}\\r\\n                      </p>\\r\\n                      <p>\\r\\n                        <!-- <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span> -->\\r\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"selectedElement(expandedElement)\\\">\\r\\n                          Select <mat-icon aria-label=\\\"Select\\\">check_circle_outline</mat-icon>\\r\\n                        </button>\\r\\n                      </p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\" class=\\\"example-element-row\\\"\\r\\n                [class.example-expanded-row]=\\\"expandedElement === element\\\" (mouseenter)=\\\"mouseOverFn(element)\\\">\\r\\n                <!-- (mouseout)=\\\"mouseOutFn(expandedElement)\\\" -->\\r\\n              </tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <!-- <mat-card-actions>\\r\\n          <button mat-button>LIKE</button>\\r\\n          <button mat-button>SHARE</button>\\r\\n        </mat-card-actions> -->\\r\\n      </mat-card>\\r\\n\\r\\n    </mat-tab>\\r\\n\\r\\n    <!-- \\r\\n      *******************************************************************************************\\r\\n      *******************************************************************************************\\r\\n      ********************************* History Section *****************************************\\r\\n      *******************************************************************************************\\r\\n      *******************************************************************************************\\r\\n     -->\\r\\n\\r\\n    <mat-tab label=\\\"History\\\" [disabled]=\\\"disableTabs\\\">\\r\\n\\r\\n      <!-- Dashboard view -->\\r\\n      <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults\\\">\\r\\n        <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>    \\r\\n      </div>  \\r\\n      \\r\\n        <table mat-table [dataSource]=\\\"dashboardDataSource\\\" class=\\\"mat-elevation-z8\\\"\\r\\n          matSort matSortActive=\\\"Date\\\" matSortDisableClear matSortDirection=\\\"desc\\\">\\r\\n\\r\\n          <!-- ['Date','C/F', 'Treatment Plan', 'Treatment Done', 'Due', 'Next Appo'] -->\\r\\n          <ng-container matColumnDef=\\\"Date\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Date </th>\\r\\n            <td mat-cell *matCellDef=\\\"let dv\\\"> {{ dv.pHistory.tsCreated | date:'dd/MM/yy hh:mm a' }}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"C/F\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\r\\n            <td mat-cell *matCellDef=\\\"let dv\\\">\\r\\n              <!--  {{ dv.pHistory.clinicalFindings }} getOrderedClinicalFindings -->\\r\\n              <ul>\\r\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let cf of getOrderedClinicalFindings(dv.pHistory.clinicalFindings)\\\">{{\\r\\n                  cf }}</li>\\r\\n              </ul>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Treatment Plan\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Plan </th>\\r\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\r\\n              <ul>\\r\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let tpv of dv.tphv\\\">{{ tpv.tname }} - {{ tpv.toothIndex }}</li>\\r\\n              </ul>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Treatment Done\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Done </th>\\r\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\r\\n              <ul>\\r\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let tph of getTreatmentDoneHistoryView(dv.tphv)\\\">{{ tph.tname }}</li>\\r\\n              </ul>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Due\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Due </th>\\r\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\" style=\\\"color:red\\\">\\r\\n              {{ getDueFee(dv.fbl) }}\\r\\n              <!-- <ul >\\r\\n                <li style=\\\"list-style: none;\\\" *ngFor=\\\"let fb of dv.fbl\\\">{{ fb.amount }}</li>\\r\\n              </ul>    -->\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Next Appo -->\\r\\n          <ng-container matColumnDef=\\\"Next Appo\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Next Appo </th>\\r\\n            <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\r\\n              {{ dv.pHistory.nextAppointment | date:'dd/MM/yy hh:mm a' }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"dashboardHistoryListColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: dashboardHistoryListColumns;\\\" (click)=\\\"selectPrescription(row)\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"3\\\"></mat-paginator>\\r\\n    \\r\\n    </mat-tab>\\r\\n\\r\\n    <!-- \\r\\n      *******************************************************************************************\\r\\n      *******************************************************************************************\\r\\n      ********************************* Prescription Section ************************************\\r\\n      *******************************************************************************************\\r\\n      *******************************************************************************************\\r\\n     -->\\r\\n    <mat-tab label=\\\"Prescription\\\" [disabled]=\\\"disableTabs\\\">\\r\\n      <mat-card id=\\\"printableContent1\\\" class=\\\"example-card\\\">\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"fab\\\">\\r\\n            <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"resetPrescriptionData()\\\" matTooltip=\\\"Reset\\\">\\r\\n              <mat-icon aria-label=\\\"Reset\\\">restore</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <textarea matInput [disabled]=\\\"checkIfDisabledToModify()\\\" placeholder=\\\"Chief complaint\\\" [(ngModel)]=\\\"prescriptionHistoryView.chiefComplaint\\\"\\r\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.chiefComplaint\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\r\\n              (click)=\\\"prescriptionHistoryView.chiefComplaint=''\\\" matToolTip=\\\"Clear\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n              <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <!-- <button mat-button matPrefix mat-icon-button aria-label=\\\"Add\\\" (click)=\\\"openDialog()\\\" matToolTip=\\\"Add\\\" \\r\\n              [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n              <mat-icon>add_circle_outline</mat-icon>\\r\\n            </button> -->\\r\\n            <!-- <textarea matInput placeholder=\\\"Chief findings\\\" disabled [(ngModel)]=\\\"clinicalFindingsView\\\" cdkTextareaAutosize\\r\\n              cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea> -->\\r\\n            <mat-chip-list #chipList1>\\r\\n              <mat-chip *ngFor=\\\"let s of clinicalFindingsViewForUi\\\" selectable=\\\"false\\\" removable=\\\"false\\\">\\r\\n                {{s}}\\r\\n              </mat-chip>\\r\\n              <input (click)=\\\"openClinicalFindingToothMappingDialog()\\\" (keydown)=\\\"openClinicalFindingToothMappingDialog()\\\" placeholder=\\\"Add C/F\\\" [matChipInputFor]=\\\"chipList1\\\"\\r\\n                matChipInputAddOnBlur=\\\"true\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n            </mat-chip-list>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <table>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <!-- Medical History -->\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <mat-select placeholder=\\\"Medical History\\\" [formControl]=\\\"medicalHistoryForm\\\" [(ngModel)]=\\\"medicalHistoryViewModel\\\"\\r\\n                    multiple class=\\\"example-full-width\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                    <mat-option *ngFor=\\\"let mh of mhList\\\" [value]=\\\"mh\\\">{{mh}}</mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n                <!-- Loading progressbar -->\\r\\n                <mat-progress-bar *ngIf=\\\"mhList == null || mhList?.length <= 0\\\" color=\\\"color\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n              </td>\\r\\n              <td>\\r\\n                <!-- Investigation -->\\r\\n                <mat-form-field hintLabel=\\\"Max 30 characters\\\" class=\\\"example-full-width\\\">\\r\\n                  <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Investigation\\\" [(ngModel)]=\\\"prescriptionHistoryView.investigation\\\"\\r\\n                    [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                  <mat-hint align=\\\"end\\\">{{prescriptionHistoryView.investigation?.length || 0}}/30</mat-hint>\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n\\r\\n          <!-- provisionalDiagnosis -->\\r\\n          <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <textarea matInput placeholder=\\\"Provisional diagnosis\\\" [(ngModel)]=\\\"prescriptionHistoryView.provisionalDiagnosis\\\"\\r\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\"></textarea>\\r\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.provisionalDiagnosis\\\" matSuffix mat-icon-button\\r\\n              aria-label=\\\"Clear\\\" (click)=\\\"prescriptionHistoryView.provisionalDiagnosis=''\\\" matToolTip=\\\"Clear\\\"\\r\\n              [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n              <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <!-- Treatment Plan -->\\r\\n          <!-- <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <mat-chip-list #chipListtrtmnt>\\r\\n              <mat-chip *ngFor=\\\"let s of treatmentPlanListView\\\" selectable=\\\"true\\\" removable=\\\"true\\\" (removed)=\\\"removeChip(s,1)\\\">\\r\\n                {{s}}\\r\\n                <mat-icon matChipRemove>cancel</mat-icon>\\r\\n              </mat-chip>\\r\\n              <input placeholder=\\\"Treatment Plan\\\" [matChipInputFor]=\\\"chipListtrtmnt\\\" matChipInputAddOnBlur=\\\"true\\\"\\r\\n                (matChipInputTokenEnd)=\\\"addTreatmentPlan($event)\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\">\\r\\n            </mat-chip-list>\\r\\n          </mat-form-field> -->\\r\\n\\r\\n          <!-- Treatment plan -->\\r\\n          <span class=\\\"example-margin\\\">Advised Treatment plan</span>\\r\\n          <div *ngIf=\\\"cftMapArray && cftMapArray.length > 0\\\">\\r\\n            <table mat-table [dataSource]=\\\"trtmntPlanListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n              <ng-container matColumnDef=\\\"cf\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\r\\n                <td mat-cell *matCellDef=\\\"let cftMap\\\"> {{cftMap.clinicalFinding.fname}} </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"teeth\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Tooth </th>\\r\\n                <td mat-cell *matCellDef=\\\"let cftMap\\\"> {{cftMap.teeth.toothIndex}}\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"plan\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Plan </th>\\r\\n                <td mat-cell *matCellDef=\\\"let cftMap; let i = index;\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <div *ngIf=\\\"!checkIfDisabledToModify()\\\">\\r\\n                      <mat-select placeholder=\\\"Select Treatment Plan\\\" [formControl]=\\\"treatmentPlanFormControl\\\" class=\\\"example-full-width\\\"\\r\\n                        (selectionChange)=\\\"updateTrtmntPlanSelect($event.value, i)\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                        <!-- [(value)] = cftMap.treatmentPlanName -->\\r\\n                        <mat-option *ngFor=\\\"let tpl of treatmentPlanList\\\" [value]=\\\"tpl.trtName\\\">{{tpl.trtName}}</mat-option>\\r\\n                      </mat-select>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"checkIfDisabledToModify()\\\">\\r\\n                      <textarea matInput placeholder=\\\"Treatment Plans\\\" cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\"\\r\\n                        cdkAutosizeMaxRows=\\\"5\\\" disabled>{{cftMap.treatmentPlanViewModel}}</textarea>\\r\\n                    </div>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"newPlan\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> New Plan </th>\\r\\n                <td mat-cell *matCellDef=\\\"let cftMap; let i = index;\\\">\\r\\n                  <input class=\\\"example-full-width\\\" style=\\\"text-align:center\\\" *ngIf=\\\"cftMap.customTrtmntPlan\\\" matInput\\r\\n                    placeholder=\\\"Custom plan\\\" (input)=\\\"updateTrtmntPlanI($event.target.value, i)\\\" required [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"trtmntPlanListViewColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: trtmntPlanListViewColumns;\\\"></tr>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <!-- advice -->\\r\\n          <mat-form-field class=\\\"example-full-width example-grid-margin\\\">\\r\\n            <textarea matInput placeholder=\\\"Advice\\\" [(ngModel)]=\\\"prescriptionHistoryView.advice\\\" cdkTextareaAutosize\\r\\n              cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\"></textarea>\\r\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.advice\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\r\\n              (click)=\\\"prescriptionHistoryView.advice=''\\\" matToolTip=\\\"Clear\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n              <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <!-- Medicine -->\\r\\n          <!-- <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <mat-select placeholder=\\\"Add Medicine\\\" [formControl]=\\\"medicineForm\\\" multiple class=\\\"example-full-width\\\">\\r\\n              <mat-option *ngFor=\\\"let mh of medicineMasterViewList\\\" [value]=\\\"mh\\\">{{mh.medicineName}} {{mh.dosage}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field> -->\\r\\n          <div class=\\\"example-margin\\\" align=\\\"right\\\">\\r\\n            <span>Add Medicine</span>\\r\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"openMedicineInsertionDialog()\\\">\\r\\n              <mat-icon aria-label=\\\"\\\">add_circle</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n          <!-- Medicines Preview -->\\r\\n          <div *ngIf=\\\"medicineHistoryViewModel\\\">\\r\\n            <mat-form-field class=\\\"example-full-width example-grid-margin\\\">\\r\\n              <textarea matInput placeholder=\\\"Medicines\\\" [(ngModel)]=\\\"medicineHistoryViewModel\\\"\\r\\n                cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n              </textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <!-- Next appointment -->\\r\\n          <table>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <span>Next appo</span>\\r\\n              </td>\\r\\n              <td class=\\\"example-full-width\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"nextAppoPicker\\\" placeholder=\\\"Date\\\"\\r\\n                    (dateChange)=\\\"createNextAppo($event)\\\">\\r\\n                  <!-- <mat-datepicker-toggle matSuffix [for]=\\\"nextAppoPicker\\\"></mat-datepicker-toggle> -->\\r\\n                  <mat-datepicker #nextAppoPicker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n                <button mat-raised-button (click)=\\\"nextAppoPicker.open()\\\">Choose Date</button>\\r\\n              </td>\\r\\n              <td class=\\\"example-full-width\\\">\\r\\n                <mat-form-field hintLabel=\\\"Enter in digits\\\">\\r\\n                  <input matInput maxlength=\\\"2\\\" type=\\\"number\\\" min=0 max=24 placeholder=\\\"Hour\\\" [(ngModel)]=\\\"nextAppoHour\\\"\\r\\n                    (change)=\\\"createNextAppoTime()\\\">\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n              <td class=\\\"example-full-width\\\">\\r\\n                <mat-form-field hintLabel=\\\"Enter in digits\\\">\\r\\n                  <input matInput maxlength=\\\"2\\\" type=\\\"number\\\" min=0 max=59 placeholder=\\\"Minute\\\" [(ngModel)]=\\\"nextAppoMinute\\\"\\r\\n                    (change)=\\\"createNextAppoTime()\\\">\\r\\n                </mat-form-field>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n\\r\\n          <div>\\r\\n            <div class=\\\"example-margin\\\" align=\\\"right\\\">\\r\\n              <span>Add Fee</span>\\r\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addCustomFee()\\\">\\r\\n                <mat-icon aria-label=\\\"\\\">add_circle</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"feesConfigListView && feesConfigListView.length > 0\\\">\\r\\n              <table mat-table [dataSource]=\\\"feesConfigListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <!-- column list -->\\r\\n                <!-- Id Column -->\\r\\n                <ng-container matColumnDef=\\\"treatmentPlanId\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> # </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.treatmentPlanId}} </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- baseFee Column -->\\r\\n                <ng-container matColumnDef=\\\"baseFee\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Base </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.baseFee}} </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- ageGroupId Column -->\\r\\n                <ng-container matColumnDef=\\\"ageGroupId\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> AgeGrp </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.ageGroupId}} </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- ageGroupPercent Column -->\\r\\n                <ng-container matColumnDef=\\\"ageGroupPercent\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> % </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.ageGroupPercent}} </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- toothGroupId Column -->\\r\\n                <ng-container matColumnDef=\\\"toothGroupId\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> ToothGrp </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\" style=\\\"text-align:center\\\"> {{fee.toothGroupId}} </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- toothGroupPercent Column -->\\r\\n                <ng-container matColumnDef=\\\"toothGroupPercent\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> % </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.toothGroupPercent}} </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- totalFee Column -->\\r\\n                <ng-container matColumnDef=\\\"totalFee\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Fee </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput type=\\\"number\\\" min=1 [(ngModel)]=\\\"fee.totalFee\\\" (change)=\\\"getTotalFee()\\\" style=\\\"text-align:center\\\"\\r\\n                        [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> Total {{totalFees | currency:'&#8377;' }}</td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- amountPaid Column -->\\r\\n                <ng-container matColumnDef=\\\"amountPaid\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Paid </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput type=\\\"number\\\" min=1 [(ngModel)]=\\\"fee.amountPaid\\\" (change)=\\\"getTotalFee()\\\" style=\\\"text-align:center\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> Paid {{totalPaidFees | currency:'&#8377;' }}</td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- notes Column -->\\r\\n                <ng-container matColumnDef=\\\"notes\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Note </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let fee\\\">\\r\\n                    <mat-form-field>\\r\\n                      <input matInput [(ngModel)]=\\\"fee.notes\\\" style=\\\"text-align:center\\\">\\r\\n                    </mat-form-field>\\r\\n                    <button mat-button matSuffix mat-icon-button aria-label=\\\"Remove\\\" (click)=\\\"removeFees($index)\\\"\\r\\n                      matToolTip=\\\"Remove\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <td mat-footer-cell *matFooterCellDef style=\\\"color: red;\\\"> Due {{totalDueFees | currency:'&#8377;' }}\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"feesConfigListViewColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: feesConfigListViewColumns;\\\"></tr>\\r\\n                <tr mat-footer-row *matFooterRowDef=\\\"feesConfigListViewColumns; sticky: true\\\"></tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Note -->\\r\\n          <div class=\\\"example-margin\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <textarea matInput placeholder=\\\"Notes\\\" [(ngModel)]=\\\"prescriptionHistoryView.note\\\" cdkTextareaAutosize\\r\\n                cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\"></textarea>\\r\\n              <button mat-button *ngIf=\\\"prescriptionHistoryView.note\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\r\\n                (click)=\\\"prescriptionHistoryView.note=''\\\" matToolTip=\\\"Clear\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n              </button>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <!-- Printable notes -->\\r\\n          <div class=\\\"example-margin\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\">\\r\\n              <textarea matInput placeholder=\\\"Notes to be printed\\\" [(ngModel)]=\\\"prescriptionHistoryView.printableNotes\\\"\\r\\n                cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" [disabled]=\\\"checkIfDisabledToModify()\\\"></textarea>\\r\\n              <button mat-button *ngIf=\\\"prescriptionHistoryView.printableNotes\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\r\\n                (click)=\\\"prescriptionHistoryView.printableNotes=''\\\" matToolTip=\\\"Clear\\\" [disabled]=\\\"checkIfDisabledToModify()\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n              </button>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <a>Save Prescription </a>\\r\\n            <button class=\\\"example-margin\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"createAndSubmitPrescription()\\\" matTooltip=\\\"Upload\\\">\\r\\n              <mat-icon aria-label=\\\"Upload\\\">cloud_upload</mat-icon>\\r\\n            </button>\\r\\n          \\r\\n            <a>      Print Prescription </a>\\r\\n            <button class=\\\"example-margin\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"printPrescription()\\\" matTooltip=\\\"Print\\\" [disabled]=\\\"!checkIfDisabledToModify()\\\">\\r\\n              <mat-icon aria-label=\\\"Print\\\">local_printshop</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-tab>\\r\\n\\r\\n    <!-- \\r\\n  /************************************************************************************************************\\r\\n   ************************************************************************************************************\\r\\n   *************************************** Treatment Plan Section *********************************************\\r\\n   ************************************************************************************************************\\r\\n   ************************************************************************************************************\\r\\n   */\\r\\n     -->\\r\\n\\r\\n    <mat-tab label=\\\"Treatment Done\\\" [disabled]=\\\"disableTreatmentDoneTab\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-content>\\r\\n          <!-- Treatment Done -->\\r\\n          <!-- this.treatmentTabPatientId = dashboardResponse.patientId\\r\\n            this.treatmentTabPrescriptionId = dashboardResponse.prescriptionId\\r\\n            this.treatmentTabTreatmentPlanHistoryViews -->\\r\\n          <!-- <app-treatment-plan \\r\\n              [treatmentTabPatientId] = \\\"treatmentTabPatientId\\\"\\r\\n              [treatmentTabPrescriptionId] = \\\"treatmentTabPrescriptionId\\\"\\r\\n              [treatmentTabTreatmentPlanHistoryViews] = \\\"treatmentTabTreatmentPlanHistoryViews\\\"\\r\\n            >Loading..</app-treatment-plan> -->\\r\\n          <app-treatment-plan>Loading..</app-treatment-plan>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </mat-tab>\\r\\n\\r\\n  </mat-tab-group>\\r\\n\\r\\n</mat-card>\"","import { Component, OnInit, Inject, ViewChild, AfterViewInit } from '@angular/core';\r\nimport {\r\n  ClinicalFindingView, MedicalMaster, Patient, PrescriptionHistoryView,\r\n  ToothQuadrentView, TreatmentPlan, FeesBreakupView, FeeConfigView,\r\n  MedicalHistoryView, MedicineHistoryView, DashboardView, MedicineView, TreatmentPlanHistoryView,\r\n  CompositDialogBoxData, ClinicalFindingToothMapping, DashboardResponse, TreatmentPlanStatus\r\n} from '../models/models';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { SnackbarModel } from '../snackhelper/snackbar-model';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { HttpcommService } from '../services/httpcomm.service';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent, MatPaginator, MatSort } from '@angular/material';\r\nimport { Observable, pipe, of, merge } from 'rxjs';\r\nimport { startWith, map, tap, switchMap } from 'rxjs/operators';\r\nimport { CommonService } from '../services/commonservice.service';\r\nimport { TreatmentPlanService } from '../services/treatment-plan.service'\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EventServiceService } from '../services/event-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { MedicineInsertionDialog } from './medicine-dialog/medicine-insertion-dialog-component';\r\n\r\n@Component({\r\n  selector: 'app-create-prescription',\r\n  templateUrl: './create-prescription.component.html',\r\n  styleUrls: ['./create-prescription.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class CreatePrescriptionComponent implements OnInit {\r\n\r\n  selectedPatient: Patient;\r\n  isPatientLoading: boolean; // Toggle progress bar  \r\n  isPatientLoaded: boolean; // Toggle patient list\r\n  isPatientSelected: boolean; // Toggle patient details view\r\n  isDisabledToModify: boolean //Toggle for exisiting prescription\r\n  patientDataSource: Patient[];\r\n  columnsToDisplay = ['firstName', 'lastName', 'age', 'weight'];\r\n  expandedElement: Patient;\r\n  prescriptionHistoryView: PrescriptionHistoryView;\r\n  feesConfigListView: FeeConfigView[];\r\n\r\n  medicalHistoryView: MedicalHistoryView;\r\n  medicalHistoryForm = new FormControl();\r\n  medicalHistoryViewModel: string[];\r\n\r\n  medicineMasterViewList: MedicineView[];\r\n  // medicineForm = new FormControl()\r\n  medicineHistoryViews: MedicineHistoryView[]\r\n  medicineHistoryViewModel: string\r\n  mhList: MedicalMaster[] = [];\r\n\r\n  dashboardView: DashboardView;\r\n  clinicalFindings: ClinicalFindingView[];\r\n  toothQuadrents: ToothQuadrentView[];\r\n  dialogData = new CompositDialogBoxData();\r\n\r\n  cftMapArray: ClinicalFindingToothMapping[];\r\n  clinicalFindingsViewForUi: string[]; //To show selected clinical findings to tooth mapping\r\n  treatmentPlanListView: string[]; //To show selected treatment plans\r\n  treatmentPlanList: TreatmentPlan[] = [];\r\n  treatmentPlanFormControl = new FormControl()\r\n\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  feesConfigListViewColumns: string[] = ['treatmentPlanId', 'baseFee', 'ageGroupId', 'ageGroupPercent', 'toothGroupId', 'toothGroupPercent', 'totalFee', 'amountPaid', 'notes'];\r\n  feesConfigListDataSource: MatTableDataSource<FeeConfigView>;\r\n\r\n  disableTabs: boolean = true;\r\n  //Enable treatment done tab on prescription repeat or after submitting prescription\r\n  disableTreatmentDoneTab = true;\r\n  snackModel = new SnackbarModel()\r\n  ageGroup = \"\"\r\n\r\n  prescriptionFromControl = new FormControl(0);\r\n  minCharToSearch = 3;\r\n\r\n  // treatmentTabPatientId: number\r\n  // treatmentTabPrescriptionId: number\r\n  // treatmentTabTreatmentPlanHistoryViews: TreatmentPlanHistoryView[]\r\n\r\n  constructor(public snackBar: MatSnackBar,\r\n    public dialog: MatDialog, public httpCom: HttpcommService,\r\n    public treatmentPlanService: TreatmentPlanService, public commonService: CommonService\r\n    , private eventService: EventServiceService, public router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.initializeValiables();\r\n    // this.commonService = new CommonService();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n  }\r\n\r\n  loadTabSpecificData(tabIndex: number) {\r\n    switch (tabIndex) {\r\n      //Patient search page\r\n      case 0:\r\n        break\r\n      //Patient history page\r\n      case 1:\r\n        break\r\n      //Prescription page\r\n      case 2:\r\n        this.httpCom.getMedicalMaster().subscribe(\r\n          resp => {\r\n            if (resp.status == 'SUCCESS') {\r\n              for (let i = 0; i < resp.resp.length; i++) {\r\n                this.mhList.push(resp.resp[i].medicalHistoryName);\r\n              }\r\n            }\r\n          }\r\n        );\r\n        this.httpCom.getTreatmentPlan().subscribe(\r\n          resp => {\r\n            if (resp.status == 'SUCCESS') {\r\n              this.treatmentPlanList = resp.resp;\r\n            }\r\n          }\r\n        );\r\n        this.httpCom.getAllMedicine().subscribe(\r\n          resp => {\r\n            if (resp.status == 'SUCCESS') {\r\n              this.medicineMasterViewList = resp.resp;\r\n            }\r\n          }\r\n        )\r\n        break\r\n      //Treatment done page\r\n      case 3:\r\n\r\n        //Event emit\r\n        this.eventService.sendEvent(true)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  refreshSearch() {\r\n    this.isPatientLoading = false;\r\n    this.isPatientLoaded = false;\r\n    this.isPatientSelected = false;\r\n    this.tabSelection(0);\r\n    this.disableTabs = true\r\n    this.initializeValiables()\r\n    this.patientDataSource = []\r\n    this.prescriptionId = undefined\r\n  }\r\n\r\n  initializeValiables() {\r\n    this.selectedPatient = new Patient();\r\n    this.prescriptionHistoryView = new PrescriptionHistoryView();\r\n    this.isPatientLoading = false;\r\n    this.isPatientLoaded = false;\r\n    this.isPatientSelected = false;\r\n    this.isDisabledToModify = false;\r\n    this.dashboardDataSource = new MatTableDataSource<DashboardView>()\r\n    this.medicalHistoryViewModel = [];\r\n    this.clinicalFindingsViewForUi = [];\r\n    this.cftMapArray = [];\r\n    this.treatmentPlanListView = [];\r\n    this.feesConfigListView = [];\r\n    this.feesConfigListDataSource = new MatTableDataSource<FeeConfigView>();\r\n    this.medicineHistoryViews = []\r\n    this.medicineHistoryViewModel = ''\r\n  }\r\n\r\n  fetchPatient(event: any) {\r\n    // console.log(event.key);\r\n    if (\r\n      (this.selectedPatient.firstName !== undefined &&\r\n        this.selectedPatient.firstName.length >= this.minCharToSearch) ||\r\n      (this.selectedPatient.lastName !== undefined &&\r\n        this.selectedPatient.lastName.length >= this.minCharToSearch)) {\r\n      this.searchPatient();\r\n    } else {\r\n      if (this.selectedPatient && this.selectedPatient.firstName && this.selectedPatient.firstName.length > 0\r\n        && this.selectedPatient.lastName && this.selectedPatient.lastName.length > 0\r\n      ) {\r\n        this.isPatientLoading = true;\r\n      } else {\r\n        this.isPatientLoading = false;\r\n      }\r\n      this.isPatientLoaded = false;\r\n    }\r\n  }\r\n\r\n  dateValidate(event: MatDatepickerInputEvent<Date>) {\r\n    console.log('Prescptn ' + event.value);\r\n    let parsedDate = this.commonService.getParsedDate(event.value);\r\n    if (parsedDate && parsedDate.length == 3) {\r\n      this.selectedPatient.dobDd = parsedDate[0];\r\n      this.selectedPatient.dobMm = parsedDate[1];\r\n      this.selectedPatient.dobYy = parsedDate[2];\r\n      this.searchPatient();\r\n    }\r\n  }\r\n  searchPatient() {\r\n    //search patient\r\n    this.isPatientLoading = true;\r\n    this.isPatientLoaded = false;\r\n    this.httpCom.getPatient(this.selectedPatient).subscribe(resp => {\r\n      if (resp) {\r\n        if (resp.status && resp.status === 'SUCCESS') {\r\n          if (resp.status.length > 0) {\r\n            this.patientDataSource = resp.resp;\r\n          } else {\r\n            this.commonService.showSuccessSnackBar(this.snackBar, \"No record found\")\r\n          }\r\n        } else {\r\n          this.commonService.showErrorSnackBar(this.snackBar, resp.desc)\r\n        }\r\n      } else {\r\n        this.commonService.showErrorSnackBar(this.snackBar)\r\n      }\r\n      this.isPatientLoaded = true;\r\n      this.isPatientLoading = false;\r\n    });\r\n  }\r\n\r\n  mouseOverFn(element: Patient) {\r\n    this.expandedElement = element;\r\n  }\r\n\r\n  mouseOutFn(element: Patient) {\r\n    // this.expandedElement = new Patient();\r\n  }\r\n\r\n  selectedElement(element: Patient) {\r\n    this.selectedPatient = element;\r\n    this.disableTabs = false;\r\n    this.tabSelection(1);\r\n    this.fetchDashboard(element.pid)\r\n  }\r\n\r\n  prescriptionId: number\r\n  searchPrescription() {\r\n    console.log('Prescription ID: ' + this.prescriptionId)\r\n    if (this.prescriptionId && this.prescriptionId > 0) {\r\n      this.httpCom.getSinglePrescriptionDetail(this.prescriptionId).subscribe(dashboardResp => {\r\n        if (dashboardResp) {\r\n          if (dashboardResp.status == 'SUCCESS') {\r\n            this.tabSelection(2)\r\n            if (dashboardResp.resp && dashboardResp.resp.length > 0) {\r\n              //Fetch patient details\r\n              let dashboard: DashboardView = dashboardResp.resp[0];\r\n              let patient = new Patient()\r\n              patient.pid = dashboard.pHistory.patientId\r\n              this.httpCom.getPatient(patient).subscribe(patientResp => {\r\n                if (patientResp && patientResp.status == 'SUCCESS') {\r\n                  this.selectedPatient = patientResp.resp[0];\r\n                  this.disableTabs = false;\r\n                  this.selectPrescription(dashboard);\r\n                }\r\n              })\r\n            } else {\r\n              this.commonService.showSuccessSnackBar(this.snackBar, dashboardResp.desc)\r\n            }\r\n          } else {\r\n            this.commonService.showErrorSnackBar(this.snackBar, dashboardResp.desc)\r\n          }\r\n        } else {\r\n          this.commonService.showErrorSnackBar(this.snackBar)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  tabSelection(tabIndex: number) {\r\n    this.prescriptionFromControl.setValue(tabIndex);\r\n  }\r\n\r\n  /************************************************************************************************************\r\n   ************************************************************************************************************\r\n   ***************************************** History Section **************************************************\r\n   ************************************************************************************************************\r\n   ************************************************************************************************************\r\n   */\r\n\r\n  dashboardHistoryListColumns = ['Date', 'C/F', 'Treatment Plan', 'Treatment Done', 'Due', 'Next Appo']\r\n  dashboardDataSource: MatTableDataSource<DashboardView>\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  // @ViewChild(MatSort) sort: MatSort;\r\n  resultsLength = 0;\r\n  isLoadingResults: Boolean = false\r\n\r\n  fetchDashboard(patientId: number) {\r\n\r\n    // this.httpCom.getDashboardView(patientId).subscribe(\r\n    //   resp => {\r\n    //     if (resp.status === 'SUCCESS' && resp.resp) {\r\n    //       if (resp.resp && resp.resp.length > 0) {\r\n    //         this.dashboardDataSource = new MatTableDataSource<DashboardView>()\r\n    //         this.dashboardDataSource.data = resp.resp\r\n    //       } else {\r\n    //         this.tabSelection(2)\r\n    //       }\r\n    //     } else {\r\n    //       this.commonService.showErrorSnackBar(this.snackBar, resp.desc, () => { this.tabSelection(2) })\r\n    //       this.tabSelection(2)\r\n    //     }\r\n    //   }\r\n    // )\r\n\r\n    this.httpCom.getDashboardCount(patientId).subscribe(resp => {\r\n      if (resp && resp.status == 'SUCCESS' && resp.resp > 0) {\r\n        this.resultsLength = resp.resp\r\n\r\n        merge(this.paginator.page)\r\n          .pipe(\r\n            startWith({}),\r\n            switchMap(() => {\r\n              this.isLoadingResults = true;\r\n              return this.httpCom.getDashboardPaginatedView(patientId, this.paginator.pageIndex, 3)\r\n            }),\r\n            map(data => {\r\n              // Flip flag to show that loading has finished.\r\n              this.isLoadingResults = false;\r\n              if(data){\r\n                if (data && data.status == 'SUCCESS') {\r\n                  this.dashboardDataSource = new MatTableDataSource<DashboardView>()\r\n                  this.dashboardDataSource.data = data.resp\r\n                }else{\r\n                  this.commonService.showErrorSnackBar(this.snackBar, data.desc)\r\n                }\r\n              }else{\r\n                this.commonService.showErrorSnackBar(this.snackBar)\r\n              }\r\n              return data.resp;\r\n            })\r\n          ).subscribe(data => {\r\n            console.log(data)\r\n          });\r\n        }else {\r\n          this.tabSelection(2)\r\n        }\r\n    })\r\n  }\r\n\r\n  getDueFee(feesList: FeesBreakupView[]): number {\r\n    let due = 0\r\n    feesList.map(fee => {\r\n      due += fee.amount - fee.amountPaid\r\n      // error\r\n    })\r\n    return due\r\n  }\r\n\r\n  getTreatmentDoneHistoryView(treatmentPlanHistoryViews: TreatmentPlanHistoryView[]): TreatmentPlanHistoryView[] {\r\n    return (treatmentPlanHistoryViews && treatmentPlanHistoryViews.length > 0) ? treatmentPlanHistoryViews.filter(tph => tph.status == TreatmentPlanStatus.COMPLETED) : []\r\n  }\r\n\r\n  //populate prescription details\r\n  selectPrescription(dashboard: DashboardView) {\r\n\r\n    this.tabSelection(2)\r\n    this.isDisabledToModify = true\r\n    this.prescriptionId = dashboard.pHistory.prescriptionId\r\n    if (dashboard.pHistory) {\r\n      this.prescriptionHistoryView = dashboard.pHistory\r\n      if (dashboard.pHistory.clinicalFindings.length > 0) {\r\n        this.clinicalFindingsViewForUi = dashboard.pHistory.clinicalFindings.split(',')\r\n      }\r\n      this.medicalHistoryViewModel = []\r\n      dashboard.mhv.forEach(e => {\r\n        this.medicalHistoryViewModel.push(e.medicalHistoryName)\r\n      })\r\n      this.medicineHistoryViewModel = ''\r\n      dashboard.medhv.forEach(e => {\r\n        this.medicineHistoryViewModel += (e.medicineName + ' ' + e.dosage + '\\n')\r\n      })\r\n      //Create cftMapArray\r\n      this.cftMapArray = []\r\n      if (dashboard.pHistory &&\r\n        dashboard.pHistory.clinicalFindings &&\r\n        dashboard.pHistory.clinicalFindings.length > 0) {\r\n\r\n        let clinicalFinidingToothComposite = dashboard.pHistory.clinicalFindings.split(',');\r\n        clinicalFinidingToothComposite.forEach(e => {\r\n          let clinicalFindingComposite = e.split(' - ')\r\n          if (clinicalFindingComposite.length == 2) {\r\n            let clinicalFindingDerived = clinicalFindingComposite[0];\r\n            let toothComposite = clinicalFindingComposite[1].split(' ')\r\n            toothComposite.forEach(tooth => {\r\n              let cft = new ClinicalFindingToothMapping()\r\n              cft.teeth = new ToothQuadrentView()\r\n              cft.clinicalFinding = new ClinicalFindingView()\r\n              if (!isNaN(parseInt(tooth, 10))) {\r\n                cft.teeth.toothIndex = parseInt(tooth, 10)\r\n                cft.clinicalFinding.fname = clinicalFindingDerived\r\n                let treatmentPlanList = dashboard.tphv.filter(tph => tph.clinicalFinding == clinicalFindingDerived && tph.toothIndex == cft.teeth.toothIndex)\r\n                if (treatmentPlanList && treatmentPlanList.length > 0) {\r\n                  cft.treatmentPlanViewModel = treatmentPlanList[0].tname\r\n                }\r\n              }\r\n              this.cftMapArray.push(cft)\r\n            })\r\n          }\r\n        })\r\n        this.trtmntPlanListDataSource.data = this.cftMapArray\r\n\r\n        //Creating Treatment Plan History Data\r\n        this.disableTreatmentDoneTab = false\r\n        this.treatmentPlanService.setTreatmentData(dashboard.pHistory.patientId, dashboard.pHistory.prescriptionId, dashboard.tphv)\r\n\r\n        /**\r\n         * As event emitter is working, so need to send reference as we need to operate on data\r\n         * Hence communicating via server\r\n         */\r\n        // Injecting variable references\r\n        // this.treatmentTabPatientId = dashboard.pHistory.patientId\r\n        // this.treatmentTabPrescriptionId = dashboard.pHistory.prescriptionId\r\n        // this.treatmentTabTreatmentPlanHistoryViews = dashboard.tphv\r\n\r\n        this.httpCom.getAgeGroup(this.selectedPatient.age.toString()).subscribe(resp => {\r\n          if (resp && resp.status === 'SUCCESS') {\r\n            this.ageGroup = resp.resp.groupId\r\n          }\r\n        })\r\n        this.feesConfigListView = []\r\n        dashboard.fbl.forEach(fee => {\r\n          let feeConf = new FeeConfigView()\r\n          feeConf.treatmentPlanId = fee.trtmntPlanRef\r\n          feeConf.totalFee = fee.amount\r\n          feeConf.amountPaid = fee.amountPaid\r\n          feeConf.notes = fee.notes\r\n          feeConf.ageGroupId = this.ageGroup\r\n          feeConf.feeConfigId = fee.fId\r\n          this.feesConfigListView.push(feeConf)\r\n        })\r\n        this.getTotalFee()\r\n        this.feesConfigListDataSource.data = this.feesConfigListView\r\n      }\r\n    }\r\n  }\r\n\r\n  checkIfDisabledToModify(): boolean {\r\n    return this.isDisabledToModify\r\n  }\r\n\r\n  /************************************************************************************************************\r\n   ************************************************************************************************************\r\n   ***************************************** Prescription Section *********************************************\r\n   ************************************************************************************************************\r\n   ************************************************************************************************************\r\n   */\r\n\r\n  resetPrescriptionData() {\r\n    this.commonService.showSuccessSnackBar(this.snackBar, \"Are you sure to reset all data? \", () => {\r\n      this.isDisabledToModify = false;\r\n      this.dashboardView = new DashboardView();\r\n      this.prescriptionHistoryView = new PrescriptionHistoryView();\r\n      this.medicalHistoryViewModel = [];\r\n      this.medicalHistoryForm = new FormControl();\r\n      this.clinicalFindingsViewForUi = [];\r\n      this.cftMapArray = [];\r\n      this.treatmentPlanListView = [];\r\n      this.feesConfigListView = [];\r\n      this.feesConfigListDataSource = new MatTableDataSource<FeeConfigView>();\r\n      this.checkIfDisabledToModify()\r\n    });\r\n  }\r\n\r\n  getOrderedClinicalFindings(cf: string): string[] {\r\n    if (cf && cf.length > 0) return cf.split(',')\r\n  }\r\n\r\n  //Prescription Section\r\n  openClinicalFindingToothMappingDialog(): void {\r\n    this.httpCom.getClinicalFindings().subscribe(\r\n      response => {\r\n        if (response.status == 'SUCCESS') {\r\n          this.clinicalFindings = response.resp;\r\n          this.httpCom.getToothQuadrents().subscribe(\r\n            response => {\r\n              if (response.status == 'SUCCESS') {\r\n                this.toothQuadrents = response.resp;\r\n                this.dialogData.clinicalFindingsComposite = this.clinicalFindings;\r\n                this.dialogData.toothQuadrentsComposite = this.toothQuadrents;\r\n\r\n                const dialogRef = this.dialog.open(DialogToothClinicalfindings, {\r\n                  width: '700px',\r\n                  data: this.dialogData\r\n                });\r\n\r\n                dialogRef.afterClosed().subscribe(result => {\r\n                  if (result && result.length > 0) {\r\n                    if (this.cftMapArray.length == 0) {\r\n                      this.cftMapArray = result;\r\n                    } else {\r\n                      result.map(r => this.cftMapArray.push(r))\r\n                    }\r\n                    for (let i = 0; i < this.cftMapArray.length; i++) {\r\n                      this.clinicalFindingsViewForUi.push(\r\n                        this.commonService.combineValForStringArray(\r\n                          this.clinicalFindingsViewForUi, this.cftMapArray[i].clinicalFinding.fname,\r\n                          this.cftMapArray[i].teeth.toothIndex.toString()\r\n                        )\r\n                      )\r\n                    }\r\n                    this.createTreatmentPlanTable()\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  totalFees: number = 0;\r\n  totalPaidFees: number = 0\r\n  totalDueFees: number = 0\r\n  getTotalFee() {\r\n    this.totalFees = this.feesConfigListView && this.feesConfigListView.length > 0 ?\r\n      this.feesConfigListView.map(fee => fee.totalFee).reduce((prevTotal, curr) => prevTotal + curr, 0) :\r\n      0;\r\n    this.getTotalPaidFee()\r\n    // return this.totalFees;\r\n  }\r\n\r\n  getTotalPaidFee() {\r\n    this.totalPaidFees = this.feesConfigListView && this.feesConfigListView.length > 0 ?\r\n      this.feesConfigListView.map(fee => fee.amountPaid).reduce((prevTotal, curr) => prevTotal + curr, 0) :\r\n      0;\r\n    this.getTotalDueFee()\r\n    // return this.totalPaidFees\r\n  }\r\n\r\n  getTotalDueFee() {\r\n    this.totalDueFees = this.totalFees - this.totalPaidFees\r\n    return this.totalDueFees\r\n  }\r\n\r\n  addCustomFee() {\r\n\r\n    const dialogFeeRef = this.dialog.open(CustomFeeInsertionDialog, {\r\n      width: '700px',\r\n      data: this.treatmentPlanList\r\n    });\r\n\r\n    dialogFeeRef.afterClosed().subscribe(result => {\r\n      console.log(result)\r\n      if (result) {\r\n        let customFeeConfigView: FeeConfigView = result;\r\n        customFeeConfigView.ageGroupId = this.ageGroup\r\n        if (this.feesConfigListView == undefined || this.feesConfigListView.length == 0) {\r\n          this.feesConfigListView = []\r\n        }\r\n        this.feesConfigListView.push(customFeeConfigView)\r\n        this.feesConfigListDataSource.data = this.feesConfigListView\r\n        this.getTotalFee()\r\n      }\r\n    });\r\n  }\r\n\r\n  openMedicineInsertionDialog() {\r\n\r\n    const dialogFeeRef = this.dialog.open(MedicineInsertionDialog, {\r\n      width: '700px',\r\n      data: this.medicineMasterViewList\r\n    });\r\n\r\n    dialogFeeRef.afterClosed().subscribe(result => {\r\n      console.log(result)\r\n      if (result) {\r\n\r\n        let medicineHistoryView: MedicineHistoryView = result\r\n        if (medicineHistoryView) {\r\n          medicineHistoryView.patientId = this.selectedPatient.pid\r\n          medicineHistoryView.prescriptionId = this.prescriptionId\r\n          this.medicineHistoryViews.push(medicineHistoryView)\r\n          this.medicineHistoryViewModel = this.medicineHistoryViewModel + medicineHistoryView.medicineName + ' ' + medicineHistoryView.dosage + '\\n'\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  addTreatmentPlan(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    if ((value || '').trim()) {\r\n      this.treatmentPlanListView.push(value.trim());\r\n    }\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  removeChip(s: string | MedicineView, n: number) {\r\n    //Remove Treatment plan\r\n    if (n == 1 && typeof s === 'string') {\r\n      let idx = this.treatmentPlanListView.indexOf(s);\r\n      if (idx >= 0) {\r\n        this.treatmentPlanListView.splice(idx, 1);\r\n\r\n        //TODO: Also remove medicines and fee configurations\r\n      }\r\n    }\r\n    //Remove medicines\r\n    else if (n == 2 && s instanceof MedicineView) {\r\n      let idx = this.medicineMasterViewList.indexOf(s);\r\n      if (idx >= 0) {\r\n        this.medicineMasterViewList.splice(idx, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  removeFees(index: number) {\r\n    this.feesConfigListView.splice(index, 1);\r\n    this.feesConfigListDataSource.data = this.feesConfigListView;\r\n    this.getTotalFee()\r\n  }\r\n\r\n  // Commenting as no usage found for addMedicine\r\n  //Function for adding custom medicines\r\n  // addMedicine(event: MatChipInputEvent) {\r\n  //   let customMedicineMaster = new MedicineView();\r\n  //   const input = event.input;\r\n  //   let data = event.value;\r\n  //   if ((data || '').trim()) {\r\n  //     let dataParts: string[] = data.split(' -- ');\r\n  //     if (dataParts.length == 2) {\r\n  //       customMedicineMaster.medicineName = dataParts[0];\r\n  //       customMedicineMaster.dosage = dataParts[1];\r\n  //       this.medicineMasterViewList.push(customMedicineMaster);\r\n  //     } else {\r\n  //       console.log('Error medicine format');\r\n  //     }\r\n  //   }\r\n  //   if (input) {\r\n  //     input.value = '';\r\n  //   }\r\n  // }\r\n\r\n  createNextAppo(event: MatDatepickerInputEvent<Date>) {\r\n    try {\r\n      // console.log('next appo ' + event.value.getTime());\r\n      this.nextAppoDate = event.value.getTime()\r\n    } catch (error) {\r\n      console.log(error)\r\n      this.snackModel.msg = \"Invalid Date\"\r\n      this.snackModel.action = \"OK\"\r\n      this.snackModel.callback = () => {\r\n        console.log(\"Retry allowed\")\r\n      }\r\n      this.commonService.showSnackBar(this.snackBar, this.snackModel)\r\n    }\r\n  }\r\n\r\n  nextAppoHour = 0;\r\n  nextAppoMinute = 0;\r\n  nextAppoDate = 0;\r\n  createNextAppoTime() {\r\n    // console.log(`NextAppo Hour ${this.nextAppoHour} Minute ${this.nextAppoMinute}`)\r\n  }\r\n\r\n  minDate: Date = new Date();\r\n  todayMillis = this.minDate.getTime();\r\n  maxMillis = this.todayMillis + (5 * 86400 * 1000);\r\n  maxDate = new Date(this.maxMillis);\r\n\r\n\r\n  trtmntPlanListDataSource = new MatTableDataSource<ClinicalFindingToothMapping>()\r\n  trtmntPlanListViewColumns = ['cf', 'teeth', 'plan', 'newPlan']\r\n\r\n  //Get all dialog box data from this.cftMapArray\r\n  createTreatmentPlanTable() {\r\n    this.trtmntPlanListDataSource.data = this.cftMapArray\r\n  }\r\n\r\n  updateTrtmntPlanSelect(value: string, index: number) {\r\n\r\n    this.treatmentPlanList.filter(data => {\r\n      if (data.trtName == value) {\r\n        if (this.cftMapArray.length > index) {\r\n          this.cftMapArray[index].treatmentPlanName = value\r\n          if (value === 'Other') {\r\n            this.cftMapArray[index].customTrtmntPlan = true\r\n          }\r\n          let toothGrpIndex = this.cftMapArray[index].teeth.toothGroup\r\n          let treatmentId = data.trtId\r\n\r\n          this.httpCom.getFeeConfig(this.selectedPatient.age, toothGrpIndex, treatmentId).subscribe(resp => {\r\n            if (resp && resp.status === 'SUCCESS') {\r\n              let feeConfigData: FeeConfigView = resp.resp;\r\n              if (feeConfigData && feeConfigData.totalFee > 0) {\r\n                this.feesConfigListView.push(feeConfigData);\r\n                this.feesConfigListDataSource.data = this.feesConfigListView;\r\n                this.getTotalFee();\r\n              }\r\n            } else {\r\n              //Show error and open custom feeaddition section\r\n              this.snackModel.msg = \"Please add custom fee\"\r\n              this.snackModel.action = \"OK\"\r\n              this.snackModel.callback = () => {\r\n                this.addCustomFee()\r\n              }\r\n              this.commonService.showSnackBar(this.snackBar, this.snackModel)\r\n            }\r\n          });\r\n        }\r\n      }\r\n      // console.log('Updated cft', this.cftMapArray)\r\n\r\n      //Getting filtered medicines\r\n      //TOBE DONE LATER\r\n      // this.httpCom.getMedicineView(this.httpCom.getMedicineUrl\r\n      //   + this.httpCom.getMedicineUrlPart1\r\n      //   + data.trtId\r\n      //   + this.httpCom.getMedicineUrlPart2\r\n      //   + this.selectedPatient.age\r\n      // ).subscribe(\r\n      //   resp => {\r\n      //     if (resp.status === 'SUCCESS') {\r\n      //       resp.resp.map(medicineMasterView => {\r\n      //         this.medicineMasterViewList.push(medicineMasterView);\r\n      //       });\r\n      //     } else {\r\n      //       console.log('resp error: ' + resp);\r\n      //     }\r\n      //   }\r\n      // );\r\n    })\r\n  }\r\n\r\n  updateTrtmntPlanI(value: string, index: number) {\r\n    this.cftMapArray[index].treatmentPlanName = value\r\n  }\r\n\r\n  dashboardResponse: DashboardResponse\r\n  createAndSubmitPrescription() {\r\n\r\n\r\n\r\n    this.dashboardView = new DashboardView();\r\n    //Check if uploading new precription or updating an existing one\r\n    //Existing\r\n    if (this.prescriptionHistoryView && this.prescriptionHistoryView.prescriptionId > 0) {\r\n      this.dashboardView.fbl = []\r\n      if (this.feesConfigListView && this.feesConfigListView.length > 0) {\r\n        this.feesConfigListView.map(f => {\r\n          let fb = new FeesBreakupView()\r\n          fb.amount = f.totalFee\r\n          fb.notes = f.notes\r\n          fb.trtmntPlanRef = f.treatmentPlanId\r\n          fb.patientId = this.selectedPatient.pid\r\n          fb.amountPaid = f.amountPaid\r\n          fb.fId = f.feeConfigId\r\n          fb.prescriptionId = this.prescriptionHistoryView.prescriptionId\r\n          this.dashboardView.fbl.push(fb)\r\n        })\r\n      }\r\n\r\n      // this.dashboardView.medhv = []\r\n      // if (this.medicineForm.value && this.medicineForm.value.length > 0) {\r\n      //   this.medicineForm.value.map(m => {\r\n      //     let medh = new MedicineHistoryView()\r\n      //     medh.medicineName = m.medicineName\r\n      //     medh.diseaseCode = m.diseaseCode\r\n      //     medh.diseaseName = m.diseaseName\r\n      //     medh.dosage = m.dosage\r\n      //     medh.patientId = this.selectedPatient.pid\r\n      //     this.dashboardView.medhv.push(medh)\r\n      //   })\r\n      // }\r\n      this.dashboardView.medhv = this.medicineHistoryViews\r\n\r\n      this.dashboardView.pHistory = new PrescriptionHistoryView()\r\n      this.dashboardView.pHistory.patientId = this.selectedPatient.pid\r\n      this.dashboardView.pHistory.prescriptionId = this.prescriptionId\r\n      if (0 < this.nextAppoDate) {\r\n        this.dashboardView.pHistory.nextAppointment = this.nextAppoDate\r\n        if (0 <= this.nextAppoHour && this.nextAppoHour <= 24 && 0 <= this.nextAppoMinute && this.nextAppoMinute <= 59) {\r\n          let modifiedTime = ((this.nextAppoHour * 60) + this.nextAppoMinute) * 60 * 1000 + this.nextAppoDate\r\n          this.dashboardView.pHistory.nextAppointment = modifiedTime;\r\n        }\r\n      }\r\n      console.log(JSON.stringify(this.dashboardView))\r\n      this.httpCom.updateDashBoard(this.dashboardView).subscribe(\r\n        resp => {\r\n          if (resp.status === 'SUCCESS') {\r\n            console.log(JSON.stringify(resp.resp));\r\n            this.dashboardResponse = resp.resp\r\n            if (this.dashboardResponse && this.dashboardResponse.status) {\r\n              this.treatmentPlanService.setTreatmentData(this.dashboardResponse.patientId, this.dashboardResponse.prescriptionId, this.dashboardView.tphv)\r\n              this.commonService.showSuccessSnackBar(this.snackBar, \"Prescription updated\", () => {\r\n                this.tabSelection(3)\r\n              })\r\n            } else {\r\n              this.commonService.showErrorSnackBar(this.snackBar, this.dashboardResponse.respMsg)\r\n            }\r\n          } else {\r\n            this.commonService.showErrorSnackBar(this.snackBar, resp.status)\r\n          }\r\n        }\r\n      );\r\n    }\r\n    //else insert as a new prescription\r\n    else {\r\n      this.dashboardView = new DashboardView();\r\n      this.dashboardView.fbl = []\r\n      if (this.feesConfigListView && this.feesConfigListView.length > 0) {\r\n        this.feesConfigListView.map(f => {\r\n          let fb = new FeesBreakupView()\r\n          fb.amount = f.totalFee\r\n          fb.notes = f.notes\r\n          fb.trtmntPlanRef = f.treatmentPlanId\r\n          fb.patientId = this.selectedPatient.pid\r\n          fb.amountPaid = f.amountPaid\r\n          this.dashboardView.fbl.push(fb)\r\n        })\r\n      }\r\n      this.dashboardView.medhv = []\r\n      // if (this.medicineForm.value && this.medicineForm.value.length > 0) {\r\n      //   this.medicineForm.value.map(m => {\r\n      //     let medh = new MedicineHistoryView()\r\n      //     medh.medicineName = m.medicineName\r\n      //     medh.diseaseCode = m.diseaseCode\r\n      //     medh.diseaseName = m.diseaseName\r\n      //     medh.dosage = m.dosage\r\n      //     medh.patientId = this.selectedPatient.pid\r\n      //     this.dashboardView.medhv.push(medh)\r\n      //   })\r\n      // }\r\n\r\n      this.dashboardView.medhv = this.medicineHistoryViews\r\n      this.dashboardView.mhv = [];\r\n      // if (this.medicalHistoryForm.value && this.medicalHistoryForm.value.length > 0) {\r\n      if (this.medicalHistoryViewModel && this.medicalHistoryViewModel.length > 0) {\r\n        // medicalHistoryViewModel\r\n        this.medicalHistoryForm.value.map(v => {\r\n          let view = new MedicalHistoryView();\r\n          view.medicalHistoryName = v;\r\n          view.patientId = this.selectedPatient.pid;\r\n          this.dashboardView.mhv.push(view);\r\n        });\r\n      }\r\n      this.dashboardView.pHistory = this.prescriptionHistoryView\r\n      this.dashboardView.pHistory.patientId = this.selectedPatient.pid\r\n      this.dashboardView.pHistory.clinicalFindings = this.commonService.getFormattedClinicalFindingsForPost(this.clinicalFindingsViewForUi)\r\n      if (0 < this.nextAppoDate) {\r\n        this.dashboardView.pHistory.nextAppointment = this.nextAppoDate\r\n        if (0 <= this.nextAppoHour && this.nextAppoHour <= 24 && 0 <= this.nextAppoMinute && this.nextAppoMinute <= 59) {\r\n          let modifiedTime = ((this.nextAppoHour * 60) + this.nextAppoMinute) * 60 * 1000 + this.nextAppoDate\r\n          this.dashboardView.pHistory.nextAppointment = modifiedTime;\r\n        }\r\n      }\r\n      this.dashboardView.tphv = []\r\n      this.cftMapArray.map(cft => {\r\n        let tph = new TreatmentPlanHistoryView()\r\n        tph.patientId = this.selectedPatient.pid\r\n        tph.tname = cft.treatmentPlanName\r\n        tph.toothIndex = cft.teeth.toothIndex\r\n        tph.clinicalFinding = cft.clinicalFinding.fname\r\n        this.dashboardView.tphv.push(tph)\r\n      })\r\n\r\n      console.log(JSON.stringify(this.dashboardView))\r\n      this.httpCom.addDashBoard(this.dashboardView).subscribe(\r\n        resp => {\r\n          if (resp.status === 'SUCCESS') {\r\n            //Do something and print prescription\r\n            console.log(JSON.stringify(resp.resp));\r\n            // this.printPrescription();\r\n            this.dashboardResponse = resp.resp\r\n            if (this.dashboardResponse && this.dashboardResponse.status) {\r\n              this.isDisabledToModify = true\r\n              this.treatmentPlanService.setTreatmentData(this.dashboardResponse.patientId, this.dashboardResponse.prescriptionId, this.dashboardView.tphv)\r\n\r\n              /**\r\n               * As event emitter is working, so need to send reference as we need to operate on data\r\n               * Hence communicating via server\r\n               */\r\n              //Injecting variable references\r\n              // this.treatmentTabPatientId = dashboardResponse.patientId\r\n              // this.treatmentTabPrescriptionId = dashboardResponse.prescriptionId\r\n              // this.treatmentTabTreatmentPlanHistoryViews = this.dashboardView.tphv\r\n\r\n              this.snackModel.isError = false\r\n              this.snackModel.msg = \"Prescription added\"\r\n              this.snackModel.action = \"OK\"\r\n              this.snackModel.callback = () => {\r\n                //navigate to treatment plan tab\r\n                this.tabSelection(3)\r\n              }\r\n              this.commonService.showSnackBar(this.snackBar, this.snackModel)\r\n            } else {\r\n              this.snackModel.isError = true\r\n              this.snackModel.msg = \"Server error\"\r\n              this.snackModel.action = \"OK\"\r\n              this.commonService.showSnackBar(this.snackBar, this.snackModel)\r\n            }\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  printPrescription() {\r\n    console.log('Patient ID' + this.selectedPatient.pid)\r\n    console.log('Prescription ID' + this.prescriptionId)\r\n    if (this.dashboardResponse && this.dashboardResponse.patientId && this.dashboardResponse.prescriptionId) {\r\n      this.router.navigate(['print'], { queryParams: { patientId: this.dashboardResponse.patientId, prescriptionId: this.dashboardResponse.prescriptionId } })\r\n    } else if (this.isDisabledToModify) {\r\n      this.router.navigate(['print'], { queryParams: { patientId: this.selectedPatient.pid, prescriptionId: this.prescriptionId } })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Dialog box to select clinical findings mapped with tooth index\r\n@Component({\r\n  selector: 'dialog-tooth-cf',\r\n  templateUrl: 'dialog-tooth-cf.html',\r\n  styleUrls: ['./create-prescription.component.css'],\r\n})\r\nexport class DialogToothClinicalfindings {\r\n\r\n  cfTextToBeShownOnUi = [];\r\n  originalCfList: string[] = [];\r\n  filteredCfList: Observable<string[]>;\r\n  toothForm = new FormControl();\r\n  clinicalFindingForm = new FormControl();\r\n  // readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  cftMapArray: ClinicalFindingToothMapping[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogToothClinicalfindings>,\r\n    @Inject(MAT_DIALOG_DATA) public data: CompositDialogBoxData,\r\n    public httpCom: HttpcommService) { }\r\n\r\n  ngOnInit() {\r\n    for (let i = 0; i < this.data.clinicalFindingsComposite.length; i++) {\r\n      this.originalCfList.push(this.data.clinicalFindingsComposite[i].fname);\r\n    };\r\n    this.startFilter1();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  };\r\n\r\n  getOrderedList(grp: number, isAsc: boolean = false): ToothQuadrentView[] {\r\n\r\n    return this.data.toothQuadrentsComposite\r\n      .filter(tooth => tooth.toothQdr == grp)\r\n      .sort((a: ToothQuadrentView, b: ToothQuadrentView) => {\r\n        if (isAsc && a.toothIndex > b.toothIndex) return 1;\r\n        else if (!isAsc && a.toothIndex < b.toothIndex) return 1;\r\n        else return -1;\r\n      });\r\n  }\r\n\r\n  checkTooth(t: ToothQuadrentView) {\r\n    t.selected = !t.selected;\r\n  }\r\n\r\n  //Scope for new clinical findingds\r\n\r\n  customCFName: string = ''\r\n  customCFDesc: string = ''\r\n\r\n  //In case of other add the other data in db and process as usual if async add is on\r\n  add() {\r\n    if (this.originalCfList.includes(this.clinicalFindingForm.value)) {\r\n\r\n      // let selectedToothList: number[] = this.toothForm.value;\r\n\r\n      let selectedToothIndexes: string = '';\r\n      this.data.toothQuadrentsComposite.map(tooth => {\r\n        if (tooth.selected) {\r\n          let cft = new ClinicalFindingToothMapping();\r\n          cft.teeth = tooth;\r\n          selectedToothIndexes = tooth.toothIndex.toString();\r\n\r\n          let formValue: string = this.clinicalFindingForm.value\r\n          if (formValue === 'Others') {\r\n            formValue = this.customCFName\r\n          }\r\n\r\n          //Combining tooth index for cf\r\n          this.cfTextToBeShownOnUi.push(new CommonService().combineValForStringArray(\r\n            this.cfTextToBeShownOnUi, formValue, selectedToothIndexes\r\n          ))\r\n\r\n          if (this.clinicalFindingForm.value === 'Others') {\r\n            let cf = new ClinicalFindingView();\r\n            cf.fname = this.customCFName;\r\n            cf.fdesc = this.customCFDesc;\r\n            cft.clinicalFinding = cf;\r\n\r\n            this.httpCom.addClinicalFinding(cf).subscribe(resp => {\r\n              if (resp.status === 'SUCCESS') {\r\n                //TODO: Show message\r\n                console.log('CF added')\r\n              }\r\n            })\r\n\r\n          } else {\r\n            this.data.clinicalFindingsComposite.map(cf => {\r\n              if (cf.fname === this.clinicalFindingForm.value) {\r\n                // console.log(`Match for ${this.clinicalFindingForm.value}`)\r\n                cft.clinicalFinding = cf\r\n              }\r\n            })\r\n\r\n          }\r\n          tooth.selected = false;\r\n          this.cftMapArray.push(cft);\r\n        }\r\n      });\r\n    } else {\r\n      // Show error\r\n    }\r\n    this.clinicalFindingForm.setValue('');\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close(this.cftMapArray);\r\n  }\r\n\r\n  remove(s: string): void {\r\n    const index = this.cfTextToBeShownOnUi.indexOf(s);\r\n    if (index >= 0) {\r\n      this.cfTextToBeShownOnUi.splice(index, 1);\r\n    }\r\n    let cfName = s.substring(0, s.indexOf(\"-\"));\r\n    for (let l = 0; l < this.cftMapArray.length; l++) {\r\n      if (this.cftMapArray[l].clinicalFinding.fname === cfName) {\r\n        this.cftMapArray.splice(l, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  setSelect(t: ToothQuadrentView) {\r\n    alert('Selected:' + t.toothIndex);\r\n  }\r\n\r\n  startFilter1() {\r\n    this.filteredCfList = this.clinicalFindingForm.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    return this.originalCfList.filter(option => option.toLowerCase().includes(value.toLowerCase()));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'custom-fee-insert',\r\n  templateUrl: 'custom-fee-insert.html',\r\n  styleUrls: ['./create-prescription.component.css'],\r\n})\r\nexport class CustomFeeInsertionDialog {\r\n\r\n  treatmentPlanDescsObservable: Observable<string[]>;\r\n  treatmentPlanDescs: string[];\r\n  treatmentPlanForm = new FormControl();\r\n  feeConfigView = new FeeConfigView()\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<CustomFeeInsertionDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public treatmentPlans: TreatmentPlan[]) {\r\n    if (treatmentPlans && treatmentPlans.length > 0) {\r\n      this.treatmentPlanDescs = [];\r\n      treatmentPlans.forEach(tpls => {\r\n        this.treatmentPlanDescs.push(tpls.trtDesc);\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.startTreatmentPlanFilter();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  };\r\n\r\n  closeDialog() {\r\n    if (!isNaN(this.feeConfigView.totalFee) && !isNaN(this.feeConfigView.amountPaid)) {\r\n      this.getCustomFee()\r\n      this.dialogRef.close(this.feeConfigView);\r\n    }\r\n  }\r\n\r\n  startTreatmentPlanFilter() {\r\n    this.treatmentPlanDescsObservable = this.treatmentPlanForm.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    return this.treatmentPlanDescs.filter(desc => desc.toLowerCase().includes(value.toLowerCase()));\r\n  }\r\n\r\n  getCustomFee() {\r\n    if (this.treatmentPlanForm.value && this.treatmentPlanForm.value.length > 0) {\r\n      let filterdList = this.treatmentPlans.filter(tDesc => this.treatmentPlanForm.value == tDesc.trtDesc)\r\n      if (filterdList && filterdList.length > 0) {\r\n        this.feeConfigView.treatmentPlanId = filterdList[0].trtId\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Add Fee</h1>\\r\\n<div mat-dialog-content>\\r\\n    <form class=\\\"example-form\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Select treatment plan\\\" aria-label=\\\"Number\\\" [formControl]=\\\"treatmentPlanForm\\\"\\r\\n                [matAutocomplete]=\\\"auto3\\\">\\r\\n            <mat-autocomplete autoActiveFirstOption #auto3=\\\"matAutocomplete\\\">\\r\\n                <mat-option *ngFor=\\\"let treatmentPlanDesc of treatmentPlanDescsObservable | async\\\" [value]=\\\"treatmentPlanDesc\\\">\\r\\n                    {{treatmentPlanDesc}}\\r\\n                </mat-option>\\r\\n            </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Total Fee\\\" min=1 [(ngModel)]=\\\"feeConfigView.totalFee\\\" style=\\\"text-align:center\\\" required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Amount Paid\\\" min=1 [(ngModel)]=\\\"feeConfigView.amountPaid\\\" style=\\\"text-align:center\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput placeholder=\\\"Note\\\" [(ngModel)]=\\\"feeConfigView.notes\\\" style=\\\"text-align:center\\\">\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    <button mat-button (click)=\\\"closeDialog()\\\">Done</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Create Clinical Findings</h1>\\r\\n<div mat-dialog-content>\\r\\n    <!-- <mat-list>\\r\\n        <h3 mat-subheader>Clinical Findings</h3>\\r\\n        <mat-list-item *ngFor=\\\"let cf of data.clinicalFindingsComposite\\\">\\r\\n            <mat-icon mat-list-icon>notes</mat-icon>\\r\\n            <h4 mat-line>Name : {{cf.fname}}</h4>\\r\\n            <p mat-line>Desc : {{cf.fdesc}} </p>\\r\\n        </mat-list-item>\\r\\n    </mat-list> -->\\r\\n    <form class=\\\"example-form\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Select C/F\\\" aria-label=\\\"Number\\\" [formControl]=\\\"clinicalFindingForm\\\"\\r\\n                [matAutocomplete]=\\\"auto2\\\">\\r\\n            <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\">\\r\\n                <mat-option *ngFor=\\\"let cfdd of filteredCfList | async\\\" [value]=\\\"cfdd\\\">\\r\\n                    {{cfdd}}\\r\\n                </mat-option>\\r\\n            </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <!-- Section for adding custom clinical findings -->\\r\\n    <table *ngIf=\\\"clinicalFindingForm?.value === 'Others'\\\">\\r\\n        <tr>\\r\\n            <td>\\r\\n                <!-- Custom clinical finding name -->\\r\\n                <mat-form-field hintLabel=\\\"Max 30 characters\\\" class=\\\"example-full-width\\\">\\r\\n                    <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"C/F Name\\\" [(ngModel)]=\\\"customCFName\\\" required>\\r\\n                    <mat-hint align=\\\"end\\\">{{customCFName?.length || 0}}/30</mat-hint>\\r\\n                </mat-form-field>\\r\\n            </td>\\r\\n            <td>\\r\\n                <!-- Custom clinical finding desc -->\\r\\n                <mat-form-field hintLabel=\\\"Max 30 characters\\\" class=\\\"example-full-width\\\">\\r\\n                    <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"C/F Desc\\\" [(ngModel)]=\\\"customCFDesc\\\">\\r\\n                    <mat-hint align=\\\"end\\\">{{customCFDesc?.length || 0}}/30</mat-hint>\\r\\n                </mat-form-field>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n\\r\\n    <!-- <mat-form-field>\\r\\n        <mat-select placeholder=\\\"Tooth\\\" [formControl]=\\\"toothForm\\\" multiple>\\r\\n            <mat-option *ngFor=\\\"let tooth of data.toothQuadrentsComposite\\\" [value]=\\\"tooth.toothIndex\\\">{{tooth.toothIndex}}</mat-option>\\r\\n        </mat-select>\\r\\n    </mat-form-field> -->\\r\\n\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(1)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <!-- (click)=\\\"setSelect(t)\\\" -->\\r\\n                <label>\\r\\n                    <input class=\\\"custom_mat-radio-button\\\" type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\"\\r\\n                        [checked]=\\\"t.selected\\\" disabled />\\r\\n                    {{t.toothIndex}}\\r\\n                </label>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(2, true)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                    <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                    {{t.toothIndex}}\\r\\n                </label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(3)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                {{t.toothIndex}}\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(4, true)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                {{t.toothIndex}}\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n\\r\\n    <p>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\r\\n            Select <mat-icon aria-label=\\\"Select\\\">check_circle_outline</mat-icon>\\r\\n        </button>\\r\\n    </p>\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <mat-chip-list #chipList>\\r\\n                <mat-chip *ngFor=\\\"let cf of cfTextToBeShownOnUi\\\" selectable=\\\"true\\\" removable=\\\"true\\\" (removed)=\\\"remove(cf)\\\">\\r\\n                    {{cf}}\\r\\n                    <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                </mat-chip>\\r\\n                <input placeholder=\\\"Result\\\" disabled [matChipInputFor]=\\\"chipList\\\" matChipInputAddOnBlur=\\\"true\\\">\\r\\n                <!-- \\r\\n                    (matChipInputTokenEnd)=\\\"addChip($event)\\\" \\r\\n                    [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                -->\\r\\n            </mat-chip-list>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    <button mat-button (click)=\\\"closeDialog()\\\">Done</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Add Fee</h1>\\r\\n<div mat-dialog-content>\\r\\n    <form class=\\\"example-form\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Select Medicine\\\" [formControl]=\\\"medicineForm\\\"\\r\\n                [matAutocomplete]=\\\"autoMedicine\\\">\\r\\n            <mat-autocomplete autoActiveFirstOption #autoMedicine=\\\"matAutocomplete\\\">\\r\\n                <mat-option *ngFor=\\\"let medicineName of medicineNameListObservable | async\\\" [value]=\\\"medicineName\\\">\\r\\n                    {{medicineName}}\\r\\n                </mat-option>\\r\\n            </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput placeholder=\\\"Repetition\\\" [(ngModel)]=\\\"repetition\\\" style=\\\"text-align:center\\\" required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput placeholder=\\\"Period in days\\\" [(ngModel)]=\\\"period\\\" style=\\\"text-align:center\\\" required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput [ngModel]=\\\"result\\\" style=\\\"text-align:center\\\" disabled>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    <button mat-button (click)=\\\"generatePreview()\\\">Check</button>\\r\\n    <button mat-button (click)=\\\"closeDialog()\\\">Done</button>\\r\\n</div>\"","import { Component, Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith,map } from 'rxjs/operators'\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { MedicineHistoryView, MedicineView } from '../../models/models';\r\n\r\n/**\r\n * @Input MedicineView List\r\n * @Output MedicineHistoryView object without patientId and prescriptionId\r\n */\r\n@Component({\r\n    selector: 'medicine-insert',\r\n    templateUrl: 'medicine-insert.html',\r\n    styleUrls: ['../create-prescription.component.css'],\r\n  })\r\n  export class MedicineInsertionDialog {\r\n  \r\n    medicineNameListObservable: Observable<string[]>;\r\n    medicineNameList: string[];\r\n    medicineForm = new FormControl();\r\n    repetition = ''\r\n    period = ''\r\n    result = ''\r\n  \r\n    constructor(\r\n      public dialogRef: MatDialogRef<MedicineInsertionDialog>,\r\n      @Inject(MAT_DIALOG_DATA) public medicineList: MedicineView[]) {\r\n      if (medicineList && medicineList.length > 0) {\r\n        this.medicineNameList = [];\r\n        medicineList.forEach(meds => {\r\n          this.medicineNameList.push(meds.medicineName);\r\n        })\r\n      }\r\n    }\r\n  \r\n    ngOnInit() {\r\n      this.startMedicineFilter();\r\n    }\r\n  \r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    };\r\n  \r\n    generatePreview(){\r\n      this.result = this.medicineForm.value + ' ' + this.repetition + ' ' + this.period + ' days'\r\n    }\r\n  \r\n    closeDialog() {\r\n      \r\n      if(this.medicineForm && this.medicineForm.value){\r\n        let medicineHistoryView = new MedicineHistoryView()\r\n        medicineHistoryView.medicineName = this.medicineForm.value\r\n        medicineHistoryView.dosage = this.repetition + ' ' + this.period + ' days'\r\n        \r\n        let medicineIndex = this.medicineNameList.indexOf(medicineHistoryView.medicineName);\r\n        if(medicineIndex && this.medicineList.length > medicineIndex){\r\n          medicineHistoryView.medId = this.medicineList[medicineIndex].medicineId\r\n        }\r\n        this.dialogRef.close(medicineHistoryView)\r\n      }\r\n    }\r\n  \r\n    startMedicineFilter() {\r\n      this.medicineNameListObservable = this.medicineForm.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n    }\r\n  \r\n    private _filter(value: string): string[] {\r\n      return this.medicineNameList.filter(desc => desc.toLowerCase().includes(value.toLowerCase()));\r\n    }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport { MaterialTestComponent } from './material-test/material-test.component';\r\nimport { PrintComponent } from './print/print.component'\r\nimport { MatSortTableComponent } from './mat-sort-table/mat-sort-table.component'\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'admin', component: AdminComponent },\r\n  { path: 'test', component: MaterialTestComponent },\r\n  { path: 'print', component: PrintComponent },\r\n  { path: 'sortTable', component: MatSortTableComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class DashRoutingModule {\r\n}\r\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 800px;\\r\\n    min-width: 50px;\\r\\n    margin-left: 50px;\\r\\n    margin-top: 30px;\\r\\n    width : 100%;\\r\\n  }\\r\\n  \\r\\n  .expansion-margin {\\r\\n    max-width: 1000px;\\r\\n    margin-left: 150px;\\r\\n    margin-top: 30px;\\r\\n  }\\r\\n  \\r\\n  .example-section {\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    height: 60px;\\r\\n  }\\r\\n  \\r\\n  .example-margin {\\r\\n    /* margin: 0 10px; */\\r\\n    margin-top: 20px;\\r\\n    margin : 5px 10px;\\r\\n  }\\r\\n  \\r\\n  /* .mat-radio-button ~ .mat-radio-button {\\r\\n    padding: 36px;\\r\\n  } */\\r\\n  \\r\\n  .example-radio-group-column {\\r\\n    /* display: inline-flex; */\\r\\n    /* flex-direction: column; */\\r\\n  }\\r\\n  \\r\\n  .example-icon-radio-button {\\r\\n    margin: 0px;\\r\\n    padding-left: 27px;\\r\\n  }\\r\\n  \\r\\n  .example-half-width{\\r\\n    width: 50%;\\r\\n  }\\r\\n  \\r\\n  .icon-male {\\r\\n    background: url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22%3F%3E%3C!DOCTYPE svg PUBLIC %22-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN%22 %22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.1%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M9%2C9C10.29%2C9 11.5%2C9.41 12.47%2C10.11L17.58%2C5H13V3H21V11H19V6.41L13.89%2C11.5C14.59%2C12.5 15%2C13.7 15%2C15A6%2C6 0 0%2C1 9%2C21A6%2C6 0 0%2C1 3%2C15A6%2C6 0 0%2C1 9%2C9M9%2C11A4%2C4 0 0%2C0 5%2C15A4%2C4 0 0%2C0 9%2C19A4%2C4 0 0%2C0 13%2C15A4%2C4 0 0%2C0 9%2C11Z%22 %2F%3E%3C%2Fsvg%3E\\\");\\r\\n    height: 27px;\\r\\n    width: 22px;\\r\\n    display: block;\\r\\n    /* Other styles here */\\r\\n}\\r\\n  \\r\\n  .icon-female {\\r\\n  background: url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22%3F%3E%3C!DOCTYPE svg PUBLIC %22-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN%22 %22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.1%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M12%2C4A6%2C6 0 0%2C1 18%2C10C18%2C12.97 15.84%2C15.44 13%2C15.92V18H15V20H13V22H11V20H9V18H11V15.92C8.16%2C15.44 6%2C12.97 6%2C10A6%2C6 0 0%2C1 12%2C4M12%2C6A4%2C4 0 0%2C0 8%2C10A4%2C4 0 0%2C0 12%2C14A4%2C4 0 0%2C0 16%2C10A4%2C4 0 0%2C0 12%2C6Z%22 %2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"dash\\\">\\r\\n  <mat-tab-group  [selectedIndex]=\\\"dashboardTabControl.value\\\" \\r\\n    (selectedIndexChange)=\\\"dashboardTabControl.setValue($event)\\\"\\r\\n    (selectedTabChange)=\\\"getSelectedTabChange($event)\\\"\\r\\n    >\\r\\n\\r\\n    <mat-tab label=\\\"Create Prescription\\\">\\r\\n      <div class=\\\"expansion-margin\\\">\\r\\n        <app-create-prescription>Loading...</app-create-prescription>\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n\\r\\n    <mat-tab label=\\\"Add Patient\\\">\\r\\n\\r\\n      <div class=\\\"expansion-margin\\\">\\r\\n\\r\\n        <!-- Accordian expansion panel -->\\r\\n        <mat-accordion>\\r\\n          <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                Basic data\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                Section for name, date of birth, weight, blood group\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n\\r\\n            <mat-card class=\\\"example-card\\\">\\r\\n              <mat-card-content>\\r\\n                <table>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <!-- First Name -->\\r\\n                      <div class=\\\"example-container example-margin\\\">\\r\\n                        <mat-form-field hintLabel=\\\"Max {{config.first_name_len}} characters\\\">\\r\\n                          <input matInput [maxlength]=\\\"config.first_name_len\\\" placeholder=\\\"First name\\\" [(ngModel)]=\\\"patient.firstName\\\" (keyup)='onKeyUp($event)'\\r\\n                            required>\\r\\n                          <mat-hint align=\\\"end\\\">{{patient.firstName?.length || 0}}/{{config.first_name_len}}</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <!-- Last Name -->\\r\\n                      <div class=\\\"example-container example-margin\\\">\\r\\n                        <mat-form-field hintLabel=\\\"Max {{config.last_name_len}} characters\\\">\\r\\n                          <input matInput maxlength=15 placeholder=\\\"Last name\\\" [(ngModel)]=\\\"patient.lastName\\\" required>\\r\\n                          <mat-hint align=\\\"end\\\">{{patient.lastName?.length || 0}}/{{config.last_name_len}}</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <!-- Sex -->\\r\\n                      <div class=\\\"example-container example-margin\\\">\\r\\n                        <div style=\\\"display: inline;\\\">\\r\\n                          <span>Sex</span>\\r\\n                          <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"patient.sex\\\">\\r\\n                            <span class=\\\"icon-male\\\">\\r\\n                              <mat-radio-button class=\\\"example-icon-radio-button\\\" value=\\\"male\\\"></mat-radio-button>\\r\\n                            </span>\\r\\n                            <span class='icon-female'>\\r\\n                              <mat-radio-button class=\\\"example-icon-radio-button\\\" value=\\\"female\\\"></mat-radio-button>\\r\\n                            </span>\\r\\n                          </mat-radio-group>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n\\r\\n                      <!-- </td>\\r\\n                    <td> -->\\r\\n                      <!-- DOB -->\\r\\n                      <div class=\\\"example-margin\\\">\\r\\n                        <span>\\r\\n                          Date of birth :\\r\\n                        </span>\\r\\n                        <mat-form-field>\\r\\n                          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select from calender\\\" (dateChange)=\\\"dateAddEvent('change', $event)\\\"\\r\\n                            disabled [formControl]=\\\"dobDate\\\">\\r\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                          <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <!-- </tr>\\r\\n                  <tr> -->\\r\\n                    <td>\\r\\n\\r\\n                      <!-- </td>\\r\\n                    <td> -->\\r\\n                      <div class=\\\"example-margin\\\">\\r\\n                        <span>\\r\\n                          Blood Group :\\r\\n                        </span>\\r\\n                        <!-- Blood group -->\\r\\n                        <mat-select class=\\\"example-half-width\\\" placeholder=\\\"Blood group\\\" [(ngModel)]=\\\"patient.bloodGroup\\\" name=\\\"bloodGroup\\\">\\r\\n                          <mat-option *ngFor=\\\"let bg of bloodGroups\\\" [value]=\\\"bg.value\\\">\\r\\n                            {{bg.viewValue}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <!-- Height -->\\r\\n                      <div class=\\\"example-margin\\\">\\r\\n                        <span>\\r\\n                          Height(cm) :\\r\\n                        </span>\\r\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\">\\r\\n                          <input matInput maxlength=3 placeholder=\\\"Height\\\" [(ngModel)]=\\\"patient.height\\\" required>\\r\\n                          <mat-hint align=\\\"end\\\">{{patient.height?.length || 0}}/3</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <!-- Weight -->\\r\\n                      <div class=\\\"example-margin\\\">\\r\\n                        <span>\\r\\n                          Weight(kg) :\\r\\n                        </span>\\r\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\">\\r\\n                          <input matInput maxlength=3 placeholder=\\\"Weight\\\" [(ngModel)]=\\\"patient.weight\\\" required>\\r\\n                          <mat-hint align=\\\"end\\\">{{patient.weight?.length || 0}}/3</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n              </mat-card-content>\\r\\n            </mat-card>\\r\\n            <mat-action-row>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n            </mat-action-row>\\r\\n          </mat-expansion-panel>\\r\\n\\r\\n          <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle>\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                Contact data\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                Section for phone number, email and address\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <mat-card class=\\\"example-card\\\">\\r\\n              <mat-card-content>\\r\\n                <table>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <!-- Contact Number -->\\r\\n                      <div class=\\\"example-container example-margin\\\">\\r\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\" class=\\\"example-full-width\\\">\\r\\n                          <span matPrefix>+91 &nbsp;</span>\\r\\n                          <input type=\\\"tel\\\" matInput placeholder=\\\"Contact number\\\" [(ngModel)]=\\\"patient.contactNo1\\\">\\r\\n                          <mat-icon matSuffix>contact_phone</mat-icon>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <!-- Email address -->\\r\\n                      <div class=\\\"example-container example-margin\\\">\\r\\n                        <mat-form-field hintLabel=\\\"Optional email\\\">\\r\\n                          <input matInput maxlength=30 placeholder=\\\"Enter email\\\" type=\\\"email\\\" [(ngModel)]=\\\"patient.email\\\">\\r\\n                          <mat-icon matSuffix>contact_mail</mat-icon>\\r\\n                          <mat-hint align=\\\"end\\\">{{patient.email?.length || 0}}/30</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n\\r\\n                <!-- Address 1 -->\\r\\n                <div class=\\\"example-container example-margin\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <textarea matInput placeholder=\\\"Address1\\\" [(ngModel)]=\\\"patient.address1\\\" required></textarea>\\r\\n                    <button mat-button *ngIf=\\\"patient.address1\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"patient.address1=''\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <!-- Address 2 -->\\r\\n                <div class=\\\"example-container example-margin\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width\\\">\\r\\n                    <textarea matInput placeholder=\\\"Address2\\\" [(ngModel)]=\\\"patient.address2\\\"></textarea>\\r\\n                    <button mat-button *ngIf=\\\"patient.address2\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"patient.address2=''\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </mat-card-content>\\r\\n            </mat-card>\\r\\n            <!-- <mat-action-row>\\r\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n            </mat-action-row> -->\\r\\n            <mat-action-row>\\r\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"submitPatient()\\\">Add Patient</button>\\r\\n            </mat-action-row>\\r\\n          </mat-expansion-panel>\\r\\n\\r\\n          <!-- <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle>\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                Configuration data\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                Optional data\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <span>Discount</span>\\r\\n            <table>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-radio-group class=\\\"example-margin\\\" [(ngModel)]=\\\"patient.discountType\\\">\\r\\n                    <mat-radio-button value=\\\"percentage\\\">Percent</mat-radio-button>\\r\\n                    <mat-radio-button value=\\\"flat\\\">Flat</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"example-margin\\\">\\r\\n                    <mat-form-field hintLabel=\\\"Enter in digits\\\">\\r\\n                      <input matInput maxlength=\\\"5\\\" placeholder=\\\"Discount\\\" [(ngModel)]=\\\"patient.discount\\\">\\r\\n                      <mat-hint align=\\\"end\\\">{{patient.discount?.length || 0}}/5</mat-hint>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n            <mat-action-row>\\r\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"submitPatient()\\\">Add Patient</button>\\r\\n            </mat-action-row>\\r\\n          </mat-expansion-panel> -->\\r\\n\\r\\n\\r\\n        </mat-accordion>\\r\\n\\r\\n      </div>\\r\\n    </mat-tab>\\r\\n\\r\\n  </mat-tab-group>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { Patient, BloodGroup } from '../models/models';\r\nimport { HttpcommService } from '../services/httpcomm.service'\r\nimport { CommonService } from '../services/commonservice.service';\r\nimport { SnackbarModel } from '../snackhelper/snackbar-model';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  patient : Patient;\r\n  dashboardTabControl = new FormControl(0) //Dynamically tab selection\r\n  dobDate = new FormControl(new Date())\r\n  //Place holder for dynamic field validation\r\n  config = {\r\n    \"first_name_len\" : 20,\r\n    \"last_name_len\" : 15\r\n  };\r\n  firstName : string;\r\n  lastName : string;\r\n  bloodGroups : BloodGroup[] = [\r\n    {value : 'A_POSITIVE', viewValue : 'A+'},\r\n    {value : 'A_NEGETIVE', viewValue : 'A-'},\r\n    {value : 'B_POSITIVE', viewValue : 'B+'},\r\n    {value : 'B_NEGETIVE', viewValue : 'B-'},\r\n    {value : 'AB_POSITIVE', viewValue : 'AB+'},\r\n    {value : 'AB_NEGETIVE', viewValue : 'AB-'},\r\n    {value : 'O_POSITIVE', viewValue : 'O+'},\r\n    {value : 'O_NEGETIVE', viewValue : 'O-'},\r\n  ];\r\n\r\n  httpService : HttpcommService;\r\n\r\n  patientEmailControl = new FormControl('',[\r\n    Validators.email,\r\n    Validators.required\r\n  ]);\r\n\r\n  //Accordian expansion bar control\r\n  step: number = 0;\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n  constructor(public snackBar: MatSnackBar, public httpClient: HttpClient,\r\n    public commonService : CommonService) { \r\n    this.patient = new Patient();\r\n    this.httpService = new HttpcommService(httpClient);\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  submitPatient(){\r\n    // this.nextStep();\r\n    // console.log(this.patient)\r\n    // console.log('DOB',this.dobDate.value)  \r\n    this.httpService.addPatient(this.patient).subscribe( resp => {\r\n      if(resp && resp.status == 'SUCCESS'){\r\n          this.commonService.showSuccessSnackBar(this.snackBar)\r\n          this.patient = new Patient()\r\n          this.dashboardTabControl.setValue(0) //Go back to add prescription page\r\n        }else{\r\n          this.commonService.showErrorSnackBar(this.snackBar,resp.desc)\r\n        }\r\n      }\r\n    )\r\n  }\r\n  onKeyUp(event : any){  }\r\n  getSelectedTabChange(event : any){\r\n    console.log(event)\r\n  }\r\n  getFocusChange(event : any){\r\n    console.log(event)\r\n  }\r\n  dateAddEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    // console.log(`Date value: ${event.value}`)\r\n    let dob: Date = event.value\r\n    let parsedDate : number[] = this.commonService.getParsedDate(dob);\r\n    if(parsedDate && parsedDate.length == 3){\r\n      this.patient.dobDd = parsedDate[0];\r\n      this.patient.dobMm = parsedDate[1];\r\n      this.patient.dobYy = parsedDate[2];\r\n      this.patient.dobTimestamp = dob.getTime();\r\n    }\r\n  }\r\n\r\n\r\n\r\n}","module.exports = \"/* Structure */\\r\\n.example-container {\\r\\n    position: relative;\\r\\n    min-height: 200px;\\r\\n  }\\r\\n.example-table-container {\\r\\n    position: relative;\\r\\n    max-height: 400px;\\r\\n    overflow: auto;\\r\\n  }\\r\\ntable {\\r\\n    width: 100%;\\r\\n  }\\r\\n.example-loading-shade {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 56px;\\r\\n    right: 0;\\r\\n    background: rgba(0, 0, 0, 0.15);\\r\\n    z-index: 1;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n.example-rate-limit-reached {\\r\\n    color: #980000;\\r\\n    max-width: 360px;\\r\\n    text-align: center;\\r\\n  }\\r\\n/* Column Widths */\\r\\n.mat-column-number,\\r\\n  .mat-column-state {\\r\\n    max-width: 64px;\\r\\n  }\\r\\n.mat-column-created {\\r\\n    max-width: 124px;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults || isRateLimitReached\\\">\\r\\n    <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\r\\n    <div class=\\\"example-rate-limit-reached\\\" *ngIf=\\\"isRateLimitReached\\\">\\r\\n      GitHub's API rate limit has been reached. It will be reset in one minute.\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"example-table-container\\\">\\r\\n\\r\\n    <!-- <table mat-table [dataSource]=\\\"data\\\" class=\\\"example-table\\\"\\r\\n             matSort matSortActive=\\\"created\\\" matSortDisableClear matSortDirection=\\\"desc\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"number\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">{{row.number}}</td>\\r\\n        </ng-container>\\r\\n        \\r\\n        <ng-container matColumnDef=\\\"title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Title</th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">{{row.title}}</td>\\r\\n        </ng-container>\\r\\n          \\r\\n        <ng-container matColumnDef=\\\"state\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>State</th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">{{row.state}}</td>\\r\\n        </ng-container>\\r\\n          \\r\\n        <ng-container matColumnDef=\\\"created\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\\r\\n            Created\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">{{row.created_at | date}}</td>\\r\\n        </ng-container>\\r\\n  \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table> -->\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dashboardDataSource\\\" class=\\\"example-table mat-elevation-z8\\\"\\r\\n      matSort matSortActive=\\\"created\\\" matSortDisableClear matSortDirection=\\\"desc\\\">\\r\\n\\r\\n      <!-- ['Date','C/F', 'Treatment Plan', 'Treatment Done', 'Due', 'Next Appo'] -->\\r\\n      <ng-container matColumnDef=\\\"Date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Date </th>\\r\\n        <td mat-cell *matCellDef=\\\"let dv\\\"> {{ dv.pHistory.tsCreated | date:'dd/MM/yy hh:mm a' }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"C/F\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\r\\n        <td mat-cell *matCellDef=\\\"let dv\\\">\\r\\n          <!--  {{ dv.pHistory.clinicalFindings }} getOrderedClinicalFindings -->\\r\\n          <ul>\\r\\n            <li style=\\\"list-style: none;\\\" *ngFor=\\\"let cf of getOrderedClinicalFindings(dv.pHistory.clinicalFindings)\\\">{{\\r\\n              cf }}</li>\\r\\n          </ul>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Treatment Plan\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Plan </th>\\r\\n        <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\r\\n          <ul>\\r\\n            <li style=\\\"list-style: none;\\\" *ngFor=\\\"let tpv of dv.tphv\\\">{{ tpv.tname }} - {{ tpv.toothIndex }}</li>\\r\\n          </ul>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Treatment Done\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Done </th>\\r\\n        <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\r\\n          <ul>\\r\\n            <li style=\\\"list-style: none;\\\" *ngFor=\\\"let tph of getTreatmentDoneHistoryView(dv.tphv)\\\">{{ tph.tname }}</li>\\r\\n          </ul>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Due\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Due </th>\\r\\n        <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\r\\n          {{ getDueFee(dv.fbl) }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Next Appo -->\\r\\n      <ng-container matColumnDef=\\\"Next Appo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Next Appo </th>\\r\\n        <td mat-cell *matCellDef=\\\"let dv; let i = index;\\\">\\r\\n          {{ dv.pHistory.nextAppointment | date:'dd/MM/yy hh:mm a' }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"dashboardHistoryListColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: dashboardHistoryListColumns;\\\" (click)=\\\"selectPrescription(row)\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"3\\\"></mat-paginator>\\r\\n</div>\"","import {HttpClient} from '@angular/common/http';\r\nimport {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {MatPaginator, MatSort} from '@angular/material';\r\nimport {merge, Observable, of as observableOf} from 'rxjs';\r\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DashboardView,Response } from '../models/models'\r\n\r\n@Component({\r\n  selector: 'app-mat-sort-table',\r\n  templateUrl: './mat-sort-table.component.html',\r\n  styleUrls: ['./mat-sort-table.component.css']\r\n})\r\nexport class MatSortTableComponent implements AfterViewInit  {\r\n  \r\n  dashboardHistoryListColumns = ['Date', 'C/F', 'Treatment Plan', 'Treatment Done', 'Due', 'Next Appo']\r\n  dashboardDataSource: MatTableDataSource<DashboardView>\r\n  \r\n  // displayedColumns: string[] = ['created', 'state', 'number', 'title'];\r\n  exampleDatabase: ExampleHttpDatabase | null;\r\n  data: DashboardView[] = [];\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngAfterViewInit () {\r\n    this.exampleDatabase = new ExampleHttpDatabase(this.http);\r\n\r\n    // If the user changes the sort order, reset back to the first page.\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        startWith({}),\r\n        switchMap(() => {\r\n          this.isLoadingResults = true;\r\n          return this.exampleDatabase!.getRepoIssues(\r\n            // this.sort.active, this.sort.direction, this.paginator.pageIndex\r\n            \"1\",this.paginator.pageIndex,3);\r\n        }),\r\n        map(data => {\r\n          if(data && data.status == 'SUCCESS'){\r\n            // Flip flag to show that loading has finished.\r\n            this.isLoadingResults = false;\r\n            this.isRateLimitReached = false;\r\n            this.data = data.resp;\r\n            \r\n            this.dashboardDataSource.data = data.resp\r\n            this.resultsLength = this.data.length;\r\n          }\r\n          return data.resp;\r\n        }),\r\n        catchError(() => {\r\n          this.isLoadingResults = false;\r\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\r\n          this.isRateLimitReached = true;\r\n          return observableOf([]);\r\n        })\r\n      ).subscribe(data => this.data = data);\r\n  }\r\n\r\n}\r\n\r\n// export interface GithubApi {\r\n//   items: GithubIssue[];\r\n//   total_count: number;\r\n// }\r\n\r\n// export interface GithubIssue {\r\n//   created_at: string;\r\n//   number: string;\r\n//   state: string;\r\n//   title: string;\r\n// }\r\n\r\n/** An example database that the data source uses to retrieve data for the table. */\r\nexport class ExampleHttpDatabase {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRepoIssues(patientId: string = \"1\", page: number, size: number = 5): Observable<Response> {\r\n    const href = 'http://localhost:12000/my-portal/dashboard/get-dashboard';\r\n    const requestUrl =\r\n        `${href}?patientId=${patientId}&page=${page + 1}&size=${size}`;\r\n\r\n    return this.http.get<Response>(requestUrl);\r\n  }\r\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n  }\\r\\n  \\r\\n  tr.example-element-row:not(.example-expanded-row):hover {\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  tr.example-element-row:not(.example-expanded-row):active {\\r\\n    background: #efefef;\\r\\n  }\\r\\n  \\r\\n  .example-element-row td {\\r\\n    border-bottom-width: 0;\\r\\n  }\\r\\n  \\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  .example-element-diagram {\\r\\n    min-width: 80px;\\r\\n    border: 2px solid black;\\r\\n    padding: 8px;\\r\\n    font-weight: lighter;\\r\\n    margin: 8px 0;\\r\\n    height: 104px;\\r\\n  }\\r\\n  \\r\\n  .example-element-symbol {\\r\\n    font-weight: bold;\\r\\n    font-size: 40px;\\r\\n    line-height: normal;\\r\\n  }\\r\\n  \\r\\n  .example-element-description {\\r\\n    padding: 16px;\\r\\n  }\\r\\n  \\r\\n  /* .example-element-description-attribution {\\r\\n    opacity: 0.5;\\r\\n  } */\\r\\n  \"","module.exports = \"\\n\\n\\n<table mat-table\\n       [dataSource]=\\\"dataSource\\\" multiTemplateDataRows\\n       class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\n  </ng-container>\\n\\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n      <div class=\\\"example-element-detail\\\"\\n           [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n        <div class=\\\"example-element-diagram\\\">\\n          <div class=\\\"example-element-position\\\"> {{element.position}} </div>\\n          <div class=\\\"example-element-symbol\\\"> {{element.symbol}} </div>\\n          <div class=\\\"example-element-name\\\"> {{element.name}} </div>\\n          <div class=\\\"example-element-weight\\\"> {{element.weight}} </div>\\n        </div>\\n        <div class=\\\"example-element-description\\\">\\n          {{element.description}}\\n          <p>\\n            <!-- <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span> -->\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"selectedElement(expandedElement)\\\">\\n                Select <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">check_circle_outline</mat-icon>\\n            </button>\\n          </p>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\"\\n      class=\\\"example-element-row\\\"\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n      (mouseenter)=\\\"mouseOverFn(element)\\\"\\n      (mouseout)=\\\"mouseOutFn(expandedElement)\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table>\\n\\n\\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\\n    Use of this source code is governed by an MIT-style license that\\n    can be found in the LICENSE file at http://angular.io/license -->\"","import { Component, OnInit } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-material-test',\n  templateUrl: './material-test.component.html',\n  styleUrls: ['./material-test.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class MaterialTestComponent implements OnInit {\n\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: PeriodicElement;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  mouseOverFn(element : PeriodicElement){\n    console.log(\"mouse enter called\");\n    this.expandedElement = element;\n  }\n\n  mouseOutFn(element : PeriodicElement){\n    console.log(\"mouse out called\");\n    // this.expandedElement = null;\n  }\n\n  selectedElement(element : PeriodicElement){\n    console.log(`Selected position ${element.position}`);\n  }\n\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  description: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];","export class Response {\r\n\r\n    status: string;\r\n    desc: string;\r\n    resp: any;\r\n};\r\nexport class ClinicalFindingView {\r\n    fid: number;\r\n    fdesc: string;\r\n    fname: string;\r\n};\r\nexport class MedicalMaster {\r\n    medicalHistoryName: string;\r\n};\r\nexport class Patient {\r\n    bloodGroup: string;\r\n    contactNo1: number;\r\n    contactNo2: number;\r\n    discountType: string;\r\n    discount: number;\r\n    dobDd: number;\r\n    dobMm: number;\r\n    dobYy: number;\r\n    dobTimestamp: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    tsCreated: number;\r\n    weight: number;\r\n    height: number;\r\n    // image: string;\r\n    email: string;\r\n    address1: string;\r\n    address2: string;\r\n    age: number;\r\n    pid: number;\r\n    sex: string;\r\n};\r\nexport interface BloodGroup {\r\n    value: string;\r\n    viewValue: string;\r\n};\r\nexport class PrescriptionHistoryView {\r\n    prescriptionId: number;\r\n    advice: string;\r\n    chiefComplaint: string;\r\n    clinicalFindings: string;\r\n    investigation: string;\r\n    medicines: string;\r\n    nextAppointment: number;\r\n    note: string;\r\n    printableNotes: string;\r\n    patientId: number;\r\n    provisionalDiagnosis: string;\r\n    treatmentDone: string;\r\n    treatmentPlan: string;\r\n    tsCreated: number;\r\n    tsModified: number;\r\n};\r\nexport class ToothQuadrentView {\r\n    toothIndex: number;\r\n    toothGroup: number;\r\n    toothNumber: number;\r\n    toothQdr: number;\r\n    selected: boolean = false;\r\n};\r\nexport class TreatmentPlan {\r\n    trtId: number;\r\n    trtDesc: string;\r\n    trtName: string;\r\n    clinicalFinding: number;\r\n};\r\nexport class MedicineView {\r\n    medicineName: string;\r\n    ageGroup: string;\r\n    treatmentId: number;\r\n    dosage: string;\r\n    clinicalAvailability: number;\r\n    diseaseCode: string;\r\n    diseaseName: string;\r\n    medicineId: number;\r\n};\r\n\r\nexport class FeesBreakupView {\r\n    fId: number;\r\n    amount: number;\r\n    amountPaid: number = 0;\r\n    trtmntPlanRef: number;\r\n    notes: string;\r\n    patientId: number;\r\n    prescriptionId: number;\r\n    tsCreated: number;\r\n    paymentTs: number;\r\n};\r\n\r\nexport class FeeConfigView {\r\n    feeConfigId: number;\r\n    ageGroupId: string;\r\n    ageGroupPercent: number;\r\n    baseFee: number;\r\n    toothGroupid: number;\r\n    toothGroupPercent: number;\r\n    treatmentPlanId: number;\r\n    totalFee: number;\r\n    amountPaid: number = 0;\r\n    notes?: string;\r\n}\r\n\r\nexport class FeeConfigRequestListView {\r\n    tooth_grp_idx: number;\r\n    trtmnt_id: number;\r\n}\r\n\r\nexport class MedicalHistoryView {\r\n    medicalHistoryId: number;\r\n    medicalHistoryName: string\r\n    note: string;\r\n    patientId: number;\r\n    prescriptionId: number;\r\n    severity: string;\r\n    startedFrom: number;\r\n}\r\nexport class MedicineHistoryView {\r\n    medId: number;\r\n    diseaseCode: string;\r\n    diseaseName: string;\r\n    dosage: string;\r\n    medicineName: string\r\n    patientId: number;\r\n    prescriptionId: number;\r\n}\r\n\r\nexport class TreatmentPlanHistoryView {\r\n    tid: number;\r\n    tname: string;\r\n    clinicalFinding: string;\r\n    note: string;\r\n    patientId: number;\r\n    prescriptionId: number;\r\n    toothIndex: number;\r\n    tsCreated: number;\r\n    tsModified: number;\r\n    status: TreatmentPlanStatus = TreatmentPlanStatus.PENDING;\r\n}\r\n\r\nexport enum TreatmentPlanStatus {\r\n    COMPLETED = \"Completed\",\r\n    PENDING = \"Pending\"\r\n}\r\n\r\nexport class DashboardView {\r\n    pHistory: PrescriptionHistoryView;\r\n    fbl: FeesBreakupView[];\r\n    mhv: MedicalHistoryView[];\r\n    medhv: MedicineHistoryView[];\r\n    tphv: TreatmentPlanHistoryView[];\r\n}\r\n\r\nexport class DashboardResponse {\r\n    prescriptionId: number\r\n    patientId: number\r\n    status: boolean\r\n    respMsg: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class CompositDialogBoxData {\r\n    toothQuadrentsComposite: ToothQuadrentView[];\r\n    clinicalFindingsComposite: ClinicalFindingView[];\r\n}\r\n\r\nexport class ClinicalFindingToothMapping {\r\n    clinicalFinding: ClinicalFindingView;\r\n    teeth: ToothQuadrentView;\r\n    treatmentPlanName: string;\r\n    customTrtmntPlan: Boolean = false;\r\n    treatmentPlanViewModel: string = ''\r\n}\r\n\r\nexport class PrescriptionPrintView {\r\n    name: string;\r\n    sex: string;\r\n    age: string;\r\n    // phoneNo: string;\r\n    // department: string;\r\n    // doctor: string;\r\n    prescriptionId: string;\r\n    regDate: string;\r\n    visitNo: string;\r\n    visitDateTime: string;\r\n    nextAppointmentDateTime: string;\r\n    printableNotes: string;\r\n    chiefComplain: string;\r\n    medicalHistory: string;\r\n    clinicalFindings: string;\r\n    provisionalDiagnosis: string;\r\n    advice: string;\r\n    medicineCurrent: string[];\r\n    medicineAll: string[];\r\n    tphv: TreatmentPlanHistoryView[];\r\n    tphvCompleted: TreatmentPlanHistoryView[];\r\n}","module.exports = \"/*  ------ Global settings */\\r\\n\\r\\np,div,td,h1,h2,h3 {\\r\\n    font-family: Cambria, Georgia, serif;\\r\\n    /* background-color: #ffffe0; */\\r\\n    }\\r\\n\\r\\nbody {\\r\\n    text-align:justify;\\r\\n    counter-reset: chapter;\\r\\n    }\\r\\n\\r\\n/* ------- Pagination */\\r\\n\\r\\nh1, h2 {\\r\\n  page-break-after: avoid;\\r\\n  /* page-break-before: always; */\\r\\n}\\r\\n\\r\\n/* p {\\r\\n    orphans:3;\\r\\n    widows:3;\\r\\n} */\\r\\n\\r\\n/* Default left, right, top, bottom margin is 2cm */\\r\\n\\r\\n@page { margin: 1cm }\\r\\n\\r\\n/* First page, 10 cm margin on top */\\r\\n\\r\\n@page :first {\\r\\n/* margin-top: 10cm  */\\r\\n}\\r\\n\\r\\n/* Left pages, a wider margin on the left */\\r\\n\\r\\n/* @page :left {\\r\\nmargin-left: 3cm;\\r\\nmargin-right: 2cm;\\r\\n}\\r\\n\\r\\n@page :right {\\r\\nmargin-left: 2cm;\\r\\nmargin-right: 3cm;\\r\\n} */\\r\\n\\r\\n/* ------ Normal elements */\\r\\n\\r\\np,div,td { \\r\\n    text-indent:   1em;\\r\\n    margin-top:    .5em;\\r\\n    margin-bottom: .5em;\\r\\n    line-height: 1.5;\\r\\n    }\\r\\n\\r\\n/* First paragraphs after a title  */\\r\\n\\r\\nh2+p {\\r\\n    text-indent: 0em;\\r\\n    }\\r\\n\\r\\nh2+p:first-letter {\\r\\n    font-size: 200%;\\r\\n    color: blue;\\r\\n    font-family: \\\"Goudy Old Style\\\", Georgia, serif;\\r\\n    line-height: 50%;\\r\\n    }\\r\\n\\r\\nh1,h2,h4,h5,h6 { \\r\\n    text-align: center; \\r\\n    letter-spacing: 0.1em;\\r\\n    }\\r\\n\\r\\nh1 {\\r\\n    /* margin-top: 3cm; */\\r\\n    color: red;\\r\\n    }\\r\\n\\r\\nh2 {\\r\\n    border-top: 5px solid blue;\\r\\n    border-bottom: 1px solid blue;\\r\\n    padding-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n    margin-top: 2cm;\\r\\n    counter-increment: chapter;\\r\\n    }\\r\\n\\r\\nh2:before {\\r\\n    content: \\\"Chapter \\\" counter(chapter) \\\": \\\";\\r\\n    }\\r\\n\\r\\nhr { \\r\\n    width: 50%;\\r\\n    text-align: center;\\r\\n    }\\r\\n\\r\\nstrong { \\r\\n    background-color: yellow;\\r\\n    font-style: normal;\\r\\n}\\r\\n\\r\\nblockquote {\\r\\n    font-size: 90%; \\r\\n    margin-left: 20%; \\r\\n    margin-right: 20%;\\r\\n    }\\r\\n\\r\\n/*  ------ Special sections, using CSS class identifiers */\\r\\n\\r\\n.toc  {\\r\\n    text-align:center;\\r\\n    margin-top: 2cm;\\r\\n    margin-bottom: 2cm;\\r\\n    }\\r\\n\\r\\n.toc p:first-letter {font-size: 100%;}\\r\\n\\r\\npre { \\r\\n    font-family: \\\"Comic Sans\\\", fantasy, serif;\\r\\n    font-style: italic; \\r\\n    margin-left: 20%;\\r\\n    }\\r\\n\\r\\np.fineprint {\\r\\n    font-size: 70%;\\r\\n    text-indent: 0em;\\r\\n    }\\r\\n\\r\\npre.copyright, .noprint {\\r\\n   display:none;\\r\\n}\\r\\n\\r\\np.heading {\\r\\n    font-size: x-large;\\r\\n    text-align: center; \\r\\n    }\\r\\n\\r\\n/* Custom entry */\\r\\n\\r\\n.left {\\r\\n    text-align: left;    \\r\\n}\\r\\n\\r\\n.center {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.border{\\r\\n    border-top: 3px solid blue;\\r\\n}\\r\\n\\r\\n.smaller-border{\\r\\n    border-top: 1.5px solid blue;\\r\\n}\\r\\n\\r\\ntable,tr{\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n.block1,.block2{\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.fab {\\r\\n    position: fixed;\\r\\n    bottom: 30px;\\r\\n    right: 30px;\\r\\n  }\"","module.exports = \"<div *ngIf=\\\"requestLoading\\\">\\r\\n    <h1>Loading...</h1>\\r\\n    <mat-progress-bar style=\\\"width: 100%\\\" color=\\\"primary\\\" mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-bar>\\r\\n</div>\\r\\n<div *ngIf=\\\"printView\\\">\\r\\n<!-- <div> -->\\r\\n    <mat-tab-group mat-align-tabs=\\\"center\\\" animationDuration=\\\"1500ms\\\">\\r\\n        <mat-tab label=\\\"Full Prescription\\\">\\r\\n            <div class=\\\"fab\\\">\\r\\n                <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"printPrescription()\\\" matTooltip=\\\"Print\\\">\\r\\n                    <mat-icon aria-label=\\\"Print\\\">local_printshop</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"printableFullPrescriptionContent\\\">\\r\\n                <div style=\\\"text-indent: 0em\\\"> <img src=\\\"../img/g5220.png\\\" alt=\\\"E Prescription\\\" height=\\\"150px\\\" width=\\\"99%\\\">\\r\\n                </div>\\r\\n                <br />\\r\\n                <!-- <div class=\\\"border\\\"></div> -->\\r\\n                <p class=\\\"left\\\">Prescription ID: {{printView.prescriptionId}}</p>\\r\\n                <p class=\\\"left\\\"><b>PATIENT INFORMATION</b></p>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            Name: <b>{{printView.name}}</b>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            Date: {{date | date: 'dd-MM-yyyy hh:mm a'}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            Sex: {{printView.sex}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            Visited: {{printView.visitDateTime}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            Age: {{printView.age}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            Next Appointment: {{printView.nextAppointmentDateTime}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <!-- <td>\\r\\n                                    <table>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                Phone No. {{printView.phoneNo}}\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                Department: {{printView.department}}\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                Doctor: {{printView.doctor}}\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </td> -->\\r\\n                        <td>\\r\\n                            Others: {{printView.printableNotes}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n                <div class=\\\"border\\\"></div>\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td style=\\\"width:40%\\\">\\r\\n                            CHIEF COMPLAINT:\\r\\n                        </td>\\r\\n                        <td style=\\\"width:70%\\\">\\r\\n                            {{printView.chiefComplain}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <p class=\\\"smaller-border\\\"></p>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p class=\\\"smaller-border\\\"></p>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"width:40%\\\">\\r\\n                            MEDICAL HISTORY:\\r\\n                        </td>\\r\\n                        <td style=\\\"width:70%\\\">\\r\\n                            {{printView.medicalHistory}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <p class=\\\"smaller-border\\\"></p>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p class=\\\"smaller-border\\\"></p>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"width:40%\\\">\\r\\n                            CLINICAL FINDINGS:\\r\\n                        </td>\\r\\n                        <td style=\\\"width:70%\\\">\\r\\n                            {{printView.clinicalFindings}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <p class=\\\"smaller-border\\\"></p>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <p class=\\\"smaller-border\\\"></p>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"width:40%\\\">\\r\\n                            PROVISIONAL DIAGNOSIS:\\r\\n                        </td>\\r\\n                        <td style=\\\"width:70%\\\">\\r\\n                            {{printView.provisionalDiagnosis}}\\r\\n                        </td>\\r\\n                    </tr>                    \\r\\n                </table>\\r\\n                <div class=\\\"border\\\"></div>\\r\\n                <div *ngIf=\\\"printView.tphv && printView.tphv.length > 0\\\">                    \\r\\n                    <p><b>Treatment Plan:</b></p>\\r\\n                    <div>\\r\\n                        <ol>\\r\\n                            <li *ngFor=\\\"let tphvItem of printView.tphv\\\">\\r\\n                                {{tphvItem.tname}} on {{tphvItem.toothIndex}} for {{tphvItem.clinicalFinding}} is {{tphvItem.status}}\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"printView.advice\\\">\\r\\n                    <div class=\\\"smaller-border\\\"></div>\\r\\n                    <p><b>ADVICE</b></p>\\r\\n                    <div>\\r\\n                        <ul>\\r\\n                            <li *ngFor=\\\"let advice of getOrderedAdviceList()\\\">{{advice}}</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"noPrint\\\" *ngIf=\\\"printView.medicineAll\\\">\\r\\n                    <div class=\\\"smaller-border\\\"></div>\\r\\n                    <p><b>ALL MEDICINE</b></p>\\r\\n                    <div>\\r\\n                        <ol>\\r\\n                            <li *ngFor=\\\"let med of printView.medicineAll\\\">\\r\\n                                {{med}}\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div id=\\\"medicine\\\" *ngIf=\\\"printView.medicineCurrent && printView.medicineCurrent.length > 0\\\">\\r\\n                    <div class=\\\"smaller-border\\\"></div>\\r\\n                    <p><b>MEDICINE</b></p>\\r\\n                    <div>\\r\\n                        <ol>\\r\\n                            <li *ngFor=\\\"let med of printView.medicineCurrent\\\">\\r\\n                                {{med}}\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br />\\r\\n                <table>\\r\\n                    <tr>\\r\\n                        <td style=\\\"color:red\\\" class=\\\"left\\\">\\r\\n                            <div class=\\\"block1\\\"><b><i>Dr. Mitrasen Manna</i></b></div>\\r\\n                            <div class=\\\"block2\\\" style=\\\"color:red\\\"><b> [B.D.S. (W.B.U.H.S)]</b></div>\\r\\n                        </td>\\r\\n                        <td style=\\\"color:red\\\" class=\\\"right\\\">\\r\\n                            <div class=\\\"block1\\\"><b><i>Dr. Aparna Gupta</i></b></div>\\r\\n                            <div class=\\\"block2\\\" style=\\\"color:red\\\"><b> [B.D.S., M.D.S. (W.B.U.H.S)]</b></div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"color:blue\\\">Regd No: 3350A</td>\\r\\n                        <td class=\\\"right\\\" style=\\\"color:blue\\\">Regd No: 5883-A</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td style=\\\"color:blue\\\">\\r\\n                            Ex-House Surgeon, R. G. Kar Medical College & Hospital, Kolkata\\r\\n                        </td>\\r\\n                        <td class=\\\"right\\\" style=\\\"color:blue\\\">\\r\\n                            Ex-Resident, Dr. R. Ahmed Dental College & Hospital, Sealdah, Kolkata\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td></td>\\r\\n                        <!-- <td style=\\\"color:blue\\\">\\r\\n                                    Contact No. 7044074579, 8697969918\\r\\n                                </td> -->\\r\\n                        <td class=\\\"right\\\" style=\\\"color:blue\\\">\\r\\n                            Ex-House Surgeon, GTB Hospital New Delhi\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Revisit Prescription\\\">\\r\\n            <div class=\\\"fab\\\">\\r\\n                <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"printRevisit()\\\" matTooltip=\\\"Print\\\">\\r\\n                    <mat-icon aria-label=\\\"Print\\\">local_printshop</mat-icon>\\r\\n                </button>\\r\\n            </div>            \\r\\n            <div id=\\\"printableRevisitPrescriptionContent\\\">\\r\\n                <div class=\\\"smaller-border\\\"></div>\\r\\n                <div>Visit count : {{printView.visitNo}}</div>\\r\\n                <div class=\\\"noPrint\\\" *ngIf=\\\"printView.tphv && printView.tphv.length > 0\\\">\\r\\n                    <div class=\\\"smaller-border\\\"></div>\\r\\n                    <p><b>Work History:</b></p>\\r\\n                    <div>\\r\\n                        <ol>\\r\\n                            <li *ngFor=\\\"let tphvItem of printView.tphv\\\">\\r\\n                                {{tphvItem.tname}} on {{tphvItem.toothIndex}} for {{tphvItem.clinicalFinding}} is {{tphvItem.status}}\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"printView.tphvCompleted && printView.tphvCompleted.length > 0\\\">\\r\\n                    <div class=\\\"smaller-border\\\"></div>\\r\\n                    <p><b>Work Done:</b></p>\\r\\n                    <div>\\r\\n                        <ol>\\r\\n                            <li *ngFor=\\\"let tphvItem of printView.tphvCompleted\\\">\\r\\n                                {{tphvItem.tname}} done on {{tphvItem.toothIndex}} for {{tphvItem.clinicalFinding}}\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"noPrint\\\" *ngIf=\\\"printView.medicineAll\\\">\\r\\n                    <div class=\\\"smaller-border\\\"></div>\\r\\n                    <p><b>ALL MEDICINE</b></p>\\r\\n                    <div>\\r\\n                        <ol>\\r\\n                            <li *ngFor=\\\"let med of printView.medicineAll\\\">\\r\\n                                {{med}}\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"printView.medicineCurrent\\\">\\r\\n                    <div class=\\\"smaller-border\\\"></div>\\r\\n                    <p><b>MEDICINE</b></p>\\r\\n                    <div>\\r\\n                        <ol>\\r\\n                            <li *ngFor=\\\"let med of printView.medicineCurrent\\\">\\r\\n                                {{med}}\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div id=\\\"nextAppo\\\">\\r\\n                    <div class=\\\"border\\\"></div>\\r\\n                    <p>Next Appointment: {{printView.nextAppointmentDateTime}}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Money Receipt\\\">Coming soon</mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n</div>\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { PrescriptionPrintView } from '../models/models';\r\nimport { HttpcommService } from '../services/httpcomm.service';\r\nimport { CommonService } from '../services/commonservice.service';\r\nimport { DummyResponse } from '../services/dummyresponse';\r\n\r\n@Component({\r\n    selector: 'app-print',\r\n    templateUrl: './print.component.html',\r\n    styleUrls: ['./print.component.css']\r\n})\r\nexport class PrintComponent implements OnInit, AfterViewInit {\r\n\r\n    printView: PrescriptionPrintView;\r\n    httpService: HttpcommService;\r\n    commonService: CommonService;\r\n    requestLoading = true;\r\n    date: Date = new Date()\r\n\r\n    constructor(private route: ActivatedRoute, httpClient: HttpClient,\r\n        public matSnackbar: MatSnackBar, public router: Router,\r\n        public dialog: MatDialog) {\r\n        this.httpService = new HttpcommService(httpClient);\r\n        this.commonService = new CommonService();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const patientId = +this.route.snapshot.queryParamMap.get('patientId');\r\n        const prescriptionId = +this.route.snapshot.queryParamMap.get('prescriptionId');\r\n        \r\n        if (patientId > 0 && prescriptionId > 0) {\r\n            this.httpService.getPrescriptionPrintView(patientId, prescriptionId).subscribe(resp => {\r\n                this.requestLoading = false\r\n                if (resp && resp.status == 'SUCCESS') {\r\n                    this.printView = resp.resp;\r\n                } else {                    \r\n                    this.commonService.showErrorSnackBar(this.matSnackbar,resp.desc,() =>{\r\n                        this.router.navigate([''])\r\n                    })\r\n                }\r\n            })\r\n        }else{ \r\n            this.router.navigate([''])            \r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        /**\r\n         * More details on route and queryparams\r\n         * https://www.tektutorialshub.com/angular/angular-passing-optional-query-parameters-to-route/\r\n         * https://www.tektutorialshub.com/angular/angular-passing-parameters-to-route/\r\n         */\r\n    }\r\n\r\n    getOrderedAdviceList() {\r\n        return this.commonService.getNewLineSeperatedArrayString(this.printView.advice)\r\n    }\r\n\r\n    printPrescription() {\r\n        var prescriptionContent = document.getElementById(\"printableFullPrescriptionContent\");\r\n        // if (prescriptionContent.requestFullscreen) {\r\n        //     prescriptionContent.requestFullscreen();\r\n        // }\r\n        // var openWindow = window.open(\"\", \"_blank\", \"fullscreen=yes,width=800,height=600\")\r\n        this.processPrintProcess(prescriptionContent.innerHTML)\r\n    }\r\n    printRevisit(){\r\n        var revisit = document.getElementById(\"printableRevisitPrescriptionContent\").innerHTML        \r\n        this.processPrintProcess(revisit)\r\n    }\r\n    processPrintProcess(htmlData: string){\r\n        var openWindow = window.open(\"\", \"target\", \"fullscreen=yes\")\r\n        var css = this.printStylesheet\r\n        let printablePage =\r\n            `<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"> \r\n        <html lang=\"en\"> \r\n          <head> \r\n            <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" /> \r\n            <title>E - prescription</title>\r\n            ${css}\r\n          </head> \r\n          <body>\r\n       ${htmlData}\r\n       </body></html>`;\r\n        openWindow.document.open()\r\n        openWindow.document.write(printablePage)\r\n        openWindow.document.close\r\n        openWindow.focus();\r\n        if(!this.httpService.dummy){\r\n            openWindow.print();\r\n            openWindow.close();\r\n        }\r\n    }\r\n    printStylesheet: string = `\r\n    <style>\r\n    /*  ------ Global settings */\r\n\r\n    * {\r\n        font-family: Cambria, Georgia, serif;\r\n        /* background-color: #ffffe0; */\r\n        }\r\n    \r\n    body {\r\n        text-align:justify;\r\n        counter-reset: chapter;\r\n        }\r\n        \r\n    /* ------- Pagination */\r\n    \r\n    h1, h2 {\r\n      page-break-after: avoid;\r\n      /* page-break-before: always; */\r\n    }\r\n    \r\n    /* p {\r\n        orphans:3;\r\n        widows:3;\r\n    } */\r\n    \r\n    /* Default left, right, top, bottom margin is 2cm */\r\n    @page { margin: 1cm } \r\n    \r\n    /* First page, 10 cm margin on top */\r\n    @page :first {\r\n    /* margin-top: 10cm  */\r\n    }\r\n    \r\n    /* Left pages, a wider margin on the left */\r\n    /* @page :left {\r\n    margin-left: 3cm;\r\n    margin-right: 2cm;\r\n    }\r\n    \r\n    @page :right {\r\n    margin-left: 2cm;\r\n    margin-right: 3cm;\r\n    } */\r\n    \r\n    /* ------ Normal elements */\r\n        \r\n     p,div,td { \r\n        text-indent:   1em;\r\n        margin-top:    .5em;\r\n        margin-bottom: .5em;\r\n        line-height: 1.5;\r\n        }\r\n        \r\n    /* First paragraphs after a title  */\r\n        \r\n    h2+p {\r\n        text-indent: 0em;\r\n        }\r\n        \r\n    h2+p:first-letter {\r\n        font-size: 200%;\r\n        color: blue;\r\n        font-family: \"Goudy Old Style\", Georgia, serif;\r\n        line-height: 50%;\r\n        }\r\n    \r\n    h1,h2,h4,h5,h6 { \r\n        text-align: center; \r\n        letter-spacing: 0.1em;\r\n        }\r\n        \r\n     h1 {\r\n        /* margin-top: 3cm; */\r\n        color: red;\r\n        }\r\n        \r\n     h2 {\r\n        border-top: 5px solid blue;\r\n        border-bottom: 1px solid blue;\r\n        padding-top: 5px;\r\n        padding-bottom: 5px;\r\n        margin-top: 2cm;\r\n        counter-increment: chapter;\r\n        }\r\n        \r\n     h2:before {\r\n        content: \"Chapter \" counter(chapter) \": \";\r\n        }\r\n    \r\n     hr { \r\n        width: 50%;\r\n        text-align: center;\r\n        }\r\n    \r\n    strong { \r\n        background-color: yellow;\r\n        font-style: normal;\r\n    }\r\n        \r\n    blockquote {\r\n        font-size: 90%; \r\n        margin-left: 20%; \r\n        margin-right: 20%;\r\n        }\r\n        \r\n    .toc  {\r\n        text-align:center;\r\n        margin-top: 2cm;\r\n        margin-bottom: 2cm;\r\n        }\r\n        \r\n    .toc p:first-letter {font-size: 100%;}\r\n        \r\n    pre { \r\n        font-family: \"Comic Sans\", fantasy, serif;\r\n        font-style: italic; \r\n        margin-left: 20%;\r\n        }\r\n        \r\n    p.fineprint {\r\n        font-size: 70%;\r\n        text-indent: 0em;\r\n        }\r\n        \r\n    pre.copyright, .noprint {\r\n       display:none;\r\n    }\r\n    \r\n    p.heading {\r\n        font-size: x-large;\r\n        text-align: center; \r\n        }\r\n    \r\n    \r\n    /* Custom entry */\r\n    .left {\r\n        text-align: left;    \r\n    }\r\n    .center {\r\n        text-align: center;\r\n    }\r\n    .right {\r\n        text-align: right;\r\n    }\r\n    .border{\r\n        border-top: 3px solid blue;\r\n    }\r\n    .smaller-border{\r\n        border-top: 1.5px solid blue;\r\n    }\r\n    table,tr{\r\n        width:100%;\r\n    }\r\n    .block1,.block2{\r\n        display: inline;\r\n    }\r\n    </style>\r\n    `\r\n}\r\n\r\n// @Component({\r\n//     selector: 'doctor-selection-dialog',\r\n//     templateUrl: 'doctor-selection-dialog.html',\r\n//     styleUrls: ['./print.component.css'],\r\n// })\r\n// export class DoctorSelectionDialog {\r\n\r\n//     regdNo: string\r\n//     constructor(\r\n//         public dialogRef: MatDialogRef<DoctorSelectionDialog>,\r\n//         @Inject(MAT_DIALOG_DATA) public customData: string = \"\") {\r\n\r\n//     }\r\n//     closeDialog() {\r\n//         this.dialogRef.close(this.regdNo)\r\n//     }\r\n\r\n//     onNoClick(): void {\r\n//         this.dialogRef.close();\r\n//     };\r\n\r\n// }","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { SnackbarModel } from '../snackhelper/snackbar-model';\r\nimport { SnackhelperComponent } from '../snackhelper/snackhelper.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  message: string[];\r\n  constructor() {\r\n    this.message = [];\r\n  }\r\n\r\n  hasValue(s: string): boolean {\r\n    if (s) {\r\n      if (s.length > 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addMessage(msg: string) {\r\n    this.message.push(msg);\r\n  }\r\n\r\n  getMessages(): string[] {\r\n    return this.message;\r\n  }\r\n\r\n  validateDate(date: Date): boolean {    \r\n    if (date.getDate() > 0 &&\r\n      date.getMonth() >= 0 &&\r\n      date.getFullYear() > 0) {\r\n        return true;    \r\n    }else{\r\n      return false;\r\n    }\r\n}\r\n\r\n  getParsedDate(date: Date): number[] {\r\n    let pd: number[] = null;\r\n    // console.log(date.getTime())\r\n    // console.log(date.getDate())\r\n    // console.log(date.getMonth())\r\n    // console.log(date.getFullYear())\r\n    console.log('Date validation: ' + this.validateDate(date));\r\n    if (this.validateDate(date)) {\r\n      pd = [];\r\n      pd.push(date.getDate());\r\n      pd.push(date.getMonth() + 1);\r\n      pd.push(date.getFullYear());\r\n    }\r\n    console.log(pd)\r\n    return pd;\r\n  }\r\n\r\n  /**\r\n   * Method to create array to view clinical finding and corresponding teeth\r\n   * @param stringArr \r\n   * @param key \r\n   * @param addVal \r\n   * @param keyValueSeperator \r\n   * @param valueSeperator \r\n   */\r\n  combineValForStringArray(stringArr: string[], key: string, addVal: string,\r\n    keyValueSeperator: string = ' - ', valueSeperator: string = ','): string {\r\n\r\n    let combinedVal: string = ''\r\n    for (let index = 0; index < stringArr.length; index++) {\r\n      if (stringArr[index].includes(key)) {\r\n        let insertedVal = stringArr.splice(index, 1)[0]\r\n        if (insertedVal.includes(addVal)) {\r\n          return insertedVal\r\n        } else {\r\n          combinedVal = this.getSortedValues(insertedVal + valueSeperator + addVal, keyValueSeperator, valueSeperator)\r\n          // console.log('Return', combinedVal)\r\n          return combinedVal\r\n        }\r\n      }\r\n    }\r\n    let response = key + keyValueSeperator + addVal\r\n    return response\r\n  }\r\n\r\n  /**\r\n   * Method to sort teeths in ascending order for a clinical finding\r\n   * @param values \r\n   * @param keyValueSeperator \r\n   * @param valueSeperator \r\n   * @param isAsync \r\n   */\r\n  getSortedValues(values: string, keyValueSeperator: string, valueSeperator: string, isAsync: Boolean = true): string {\r\n\r\n    let keyValueArray: string[] = values.split(keyValueSeperator)\r\n    if (keyValueArray && keyValueArray.length == 2) {\r\n      let key = keyValueArray[0]\r\n      let valueStringArray: string[] = keyValueArray[1].split(valueSeperator)\r\n      let valueNumberArray: number[] = []\r\n      valueStringArray.map(vs => {\r\n        valueNumberArray.push(Number(vs))\r\n      })\r\n      let sortedNumberArray: number[] = valueNumberArray.sort((n1, n2) => {\r\n        if (isAsync && n1 > n2) return 1\r\n        else return -1\r\n      })\r\n      return key + keyValueSeperator + sortedNumberArray\r\n    } else return values\r\n  }\r\n\r\n  getFormattedClinicalFindingsForPost(stringArray : string[]) : string{\r\n    let response = ''\r\n    if(stringArray && stringArray.length > 0){\r\n      stringArray.forEach((str, index) => {\r\n        response += str.replace(/,/g, \" \")\r\n        if(index +1 < stringArray.length){\r\n          response += \",\"        \r\n        }\r\n      })\r\n    }\r\n    // console.log(`Response getFormattedClinicalFindingsForPost ${response}`)\r\n    return response;\r\n  }\r\n\r\n  showSnackBar(snackBar: MatSnackBar, snackBarModel: SnackbarModel) {\r\n    snackBar.openFromComponent(SnackhelperComponent, {\r\n      data: snackBarModel, duration: snackBarModel.duration\r\n    })\r\n  }\r\n\r\n  showSuccessSnackBar(snackBar: MatSnackBar, successMsg: string = 'Data updated successfully', callback : () => void = null) {\r\n    let snackBarModel = new SnackbarModel()\r\n    snackBarModel.action = \"OK\"\r\n    snackBarModel.msg = successMsg\r\n    if(callback){\r\n      snackBarModel.callback = callback\r\n    }\r\n    snackBar.openFromComponent(SnackhelperComponent, {\r\n      data: snackBarModel, duration: snackBarModel.duration\r\n    })\r\n  }\r\n\r\n  showErrorSnackBar(snackBar: MatSnackBar, errorMsg: string = 'Server error', callback : () => void = null) {\r\n    let snackBarModel = new SnackbarModel()\r\n    snackBarModel.action = \"OK\"\r\n    snackBarModel.isError = true\r\n    snackBarModel.msg = errorMsg\r\n    if(callback){\r\n      snackBarModel.callback = callback\r\n    }\r\n    snackBar.openFromComponent(SnackhelperComponent, {\r\n      data: snackBarModel, duration: snackBarModel.duration\r\n    })\r\n  }\r\n\r\n  getNewLineSeperatedArrayString(input:string) : string[]{\r\n    return (input && input.length>0) ? input.split(/\\n/g) : []\r\n  }\r\n}\r\n","export class DummyResponse {\r\n  public getPatient = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"bloodGroup\": \"B_POSITIVE\",\r\n        \"contactNo1\": 9046787913,\r\n        \"contactNo2\": 7980231838,\r\n        \"discountType\": \"flat\",\r\n        \"discount\": 20,\r\n        \"dobDd\": 27,\r\n        \"dobMm\": 3,\r\n        \"dobYy\": 1992,\r\n        \"firstName\": \"sourabh\",\r\n        \"lastName\": \"sadhu\",\r\n        \"tsCreated\": 1534695098485,\r\n        \"age\": 24,\r\n        \"height\": 169,\r\n        \"sex\": \"male\",\r\n        \"weight\": 80,\r\n        \"image\": null,\r\n        \"email\": \"sadhuait@gmail.com\",\r\n        \"address1\": \"Habra Jaigachi Rathtala North 24 Parganas\",\r\n        \"address2\": \"Trying to write a pretty looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong looooooooooooooooooooong text\",\r\n        \"pid\": 1\r\n      },\r\n      {\r\n        \"bloodGroup\": \"AB_POSITIVE\",\r\n        \"contactNo2\": 9046787913,\r\n        \"contactNo1\": 7980231838,\r\n        \"discountType\": \"flat\",\r\n        \"discount\": 20,\r\n        \"dobDd\": 27,\r\n        \"dobMm\": 3,\r\n        \"dobYy\": 1992,\r\n        \"firstName\": \"gourab\",\r\n        \"lastName\": \"sadhu\",\r\n        \"age\": 20,\r\n        \"tsCreated\": 1534695098485,\r\n        \"weight\": 80,\r\n        \"image\": null,\r\n        \"email\": \"sadhuait@gmail.com\",\r\n        \"address1\": \"Habra\",\r\n        \"address2\": \"looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong looooooooooooooooooooong text\",\r\n        \"pid\": 1\r\n      }\r\n    ]\r\n  };\r\n\r\n  public getTreatmentPlan = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"trtId\": 1,\r\n        \"trtDesc\": \"Root canal treatment\",\r\n        \"trtName\": \"RCT\",\r\n        \"clinicalFinding\": 1\r\n      },\r\n      {\r\n        \"trtId\": 3,\r\n        \"trtDesc\": \"Extraction\",\r\n        \"trtName\": \"Extraction\",\r\n        \"clinicalFinding\": 2\r\n      },\r\n      {\r\n        \"trtId\": 4,\r\n        \"trtDesc\": \"Oral prophylaxis\",\r\n        \"trtName\": \"Oral prophylaxis\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 5,\r\n        \"trtDesc\": \"Restoration statined teeth\",\r\n        \"trtName\": \"Restoration Stain\",\r\n        \"clinicalFinding\": 9\r\n      },\r\n      {\r\n        \"trtId\": 6,\r\n        \"trtDesc\": \"Prosthesis removable\",\r\n        \"trtName\": \"Prosthesis Remove\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 7,\r\n        \"trtDesc\": \"Prosthesis fixed\",\r\n        \"trtName\": \"Prosthesis Fixed\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 8,\r\n        \"trtDesc\": \"Prosthesis implant\",\r\n        \"trtName\": \"Prosthesis Implant\",\r\n        \"clinicalFinding\": 10\r\n      },\r\n      {\r\n        \"trtId\": 10,\r\n        \"trtDesc\": \"Other treatment\",\r\n        \"trtName\": \"Other\",\r\n        \"clinicalFinding\": 10\r\n      }\r\n    ]\r\n  };\r\n\r\n  public getMedicine = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"medicineName\": \"med1\",\r\n        \"ageGroup\": \"10to30\",\r\n        \"treatmentId\": 1,\r\n        \"dosage\": \"sokale bikale 1 ta khabar por\",\r\n        \"clinicalAvailability\": 7,\r\n        \"diseaseCode\": \"dCode1\",\r\n        \"diseaseName\": \"dName1\",\r\n        \"ageGroupBean\": null,\r\n        \"treatmentPlan\": null,\r\n        \"medicineId\": 1\r\n      },\r\n      {\r\n        \"medicineName\": \"med2\",\r\n        \"ageGroup\": \"10to30\",\r\n        \"treatmentId\": 1,\r\n        \"dosage\": \"sokale bikale 1 ta khabar por\",\r\n        \"clinicalAvailability\": 7,\r\n        \"diseaseCode\": \"dCode2\",\r\n        \"ageGroupBean\": null,\r\n        \"treatmentPlan\": null,\r\n        \"medicineId\": 2\r\n      },\r\n      {\r\n        \"medicineName\": \"med3\",\r\n        \"ageGroup\": \"10to30\",\r\n        \"treatmentId\": 1,\r\n        \"dosage\": \"sokale bikale 1 ta khabar por\",\r\n        \"clinicalAvailability\": 7,\r\n        \"diseaseCode\": \"dCode3\",\r\n        \"medicineId\": 3\r\n      }\r\n    ]\r\n  };\r\n\r\n  public medicalMaster = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"medicalHistoryName\": \"Hyperglycaemia\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hypertension\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hypotension\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Asthma\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Cerebro vascular accident\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Cardiac diseases\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hypothyroidism\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Hyperthyroidism\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Drug hypersensitivity\",\r\n        \"medicalHistories\": null\r\n      },\r\n      {\r\n        \"medicalHistoryName\": \"Other\",\r\n        \"medicalHistories\": null\r\n      }\r\n    ]\r\n  };\r\n\r\n  getFeeConfig = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": {\r\n      \"feeConfigId\": 18,\r\n      \"ageGroupId\": \"10to30\",\r\n      \"ageGroupPercent\": 10,\r\n      \"baseFee\": 60,\r\n      \"toothGroupId\": 2,\r\n      \"toothGroupPercent\": 10,\r\n      \"treatmentPlanId\": 1,\r\n      \"totalFee\": 72,\r\n      \"amountPaid\": 0\r\n    }\r\n  }\r\n\r\n  getFeeConfigList = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"feeConfigId\": 18,\r\n        \"ageGroupId\": \"10to30\",\r\n        \"ageGroupPercent\": 10,\r\n        \"baseFee\": 60,\r\n        \"toothGroupId\": 2,\r\n        \"toothGroupPercent\": 10,\r\n        \"treatmentPlanId\": 1,\r\n        \"totalFee\": 72,\r\n      },\r\n      {\r\n        \"feeConfigId\": -24,\r\n        \"ageGroupId\": \"3to10\",\r\n        \"ageGroupPercent\": 30,\r\n        \"baseFee\": 89,\r\n        \"toothGroupId\": 1,\r\n        \"toothGroupPercent\": 5,\r\n        \"treatmentPlanId\": 2,\r\n        \"totalFee\": 119\r\n      }\r\n    ]\r\n  };\r\n\r\n  getAgeGroup = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": {\r\n      \"groupId\": \"3to13\",\r\n      \"fromAge\": 3,\r\n      \"toAge\": 13\r\n    }\r\n  };\r\n\r\n  clinicalFindingList = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"fdesc\": \"desc Caries\",\r\n        \"fid\": 1,\r\n        \"fname\": \"Caries\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Periodontities\",\r\n        \"fid\": 2,\r\n        \"fname\": \"Periodontities\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Grossly decayed\",\r\n        \"fid\": 3,\r\n        \"fname\": \"Grossly decayed\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Root stump\",\r\n        \"fid\": 4,\r\n        \"fname\": \"Root stump\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Attrition\",\r\n        \"fid\": 5,\r\n        \"fname\": \"Attrition\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Cervical abrasion\",\r\n        \"fid\": 6,\r\n        \"fname\": \"Cervical abrasion\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Missing tooth\",\r\n        \"fid\": 7,\r\n        \"fname\": \"Missing tooth\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Calculus\",\r\n        \"fid\": 8,\r\n        \"fname\": \"Calculus\"\r\n      },\r\n      {\r\n        \"fdesc\": \"desc Stain\",\r\n        \"fid\": 9,\r\n        \"fname\": \"Stain\"\r\n      },\r\n      {\r\n        \"fdesc\": \"other desc\",\r\n        \"fid\": 10,\r\n        \"fname\": \"Others\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  addonClinicalFinding = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\":\r\n    {\r\n      \"fdesc\": \"desc Caries\",\r\n      \"fid\": 1,\r\n      \"fname\": \"Caries\"\r\n    }\r\n  }\r\n\r\n  public toothQuadrentList = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"toothIndex\": 41,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 42,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 43,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 44,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 35,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 36,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 37,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 38,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 45,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 46,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 12,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 11,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 14,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 13,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 16,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 15,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 18,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 17,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 1\r\n      },\r\n      {\r\n        \"toothIndex\": 22,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 21,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 24,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 23,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 26,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 6,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 25,\r\n        \"toothGroup\": 3,\r\n        \"toothNumber\": 5,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 28,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 27,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 2\r\n      },\r\n      {\r\n        \"toothIndex\": 32,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 2,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 31,\r\n        \"toothGroup\": 1,\r\n        \"toothNumber\": 1,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 34,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 4,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 33,\r\n        \"toothGroup\": 2,\r\n        \"toothNumber\": 3,\r\n        \"toothQdr\": 3\r\n      },\r\n      {\r\n        \"toothIndex\": 48,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 8,\r\n        \"toothQdr\": 4\r\n      },\r\n      {\r\n        \"toothIndex\": 47,\r\n        \"toothGroup\": 4,\r\n        \"toothNumber\": 7,\r\n        \"toothQdr\": 4\r\n      }\r\n    ]\r\n  };\r\n\r\n  public getDashboardCountView = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": 3\r\n  }\r\n\r\n  public getDashboardView = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [\r\n      {\r\n        \"pHistory\": {\r\n          \"prescriptionId\": 34,\r\n          \"advice\": \"general test  advice\",\r\n          \"chiefComplaint\": \"general test cc\",\r\n          \"clinicalFindings\": \"Periodontities - 34 35\",\r\n          \"investigation\": \"general test iv\",\r\n          \"nextAppointment\": 1542393000000,\r\n          \"note\": \"general test notes\",\r\n          \"printableNotes\": \"Printed\",\r\n          \"patientId\": 1,\r\n          \"provisionalDiagnosis\": \"general test pd\",\r\n          \"tsCreated\": 1542426489661,\r\n          \"tsModified\": null\r\n        },\r\n        \"fbl\": [\r\n          {\r\n            \"fId\": 34,\r\n            \"amount\": 500,\r\n            \"amountPaid\": 390,\r\n            \"trtmntPlanRef\": 2,\r\n            \"notes\": \"general test fee\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": null,\r\n            \"tsCreated\": 1542426489787,\r\n            \"paymentTs\": null\r\n          },\r\n          {\r\n            \"fId\": 35,\r\n            \"amount\": 356,\r\n            \"amountPaid\": 70,\r\n            \"trtmntPlanRef\": 2,\r\n            \"notes\": \"general test fee\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": null,\r\n            \"tsCreated\": 1542426489787,\r\n            \"paymentTs\": null\r\n          }\r\n        ],\r\n        \"mhv\": [\r\n          {\r\n            \"medicalHistoryId\": 37,\r\n            \"medicalHistoryName\": \"Hypotension\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34,\r\n            \"severity\": null,\r\n            \"startedFrom\": 1542426489878\r\n          },\r\n          {\r\n            \"medicalHistoryId\": 38,\r\n            \"medicalHistoryName\": \"Asthma\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34,\r\n            \"severity\": null,\r\n            \"startedFrom\": 1542426489878\r\n          }\r\n        ],\r\n        \"medhv\": [\r\n          {\r\n            \"medId\": 20,\r\n            \"diseaseCode\": \"dCode2\",\r\n            \"diseaseName\": null,\r\n            \"dosage\": \"dose\",\r\n            \"medicineName\": \"med2\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34\r\n          },\r\n          {\r\n            \"medId\": 21,\r\n            \"diseaseCode\": \"dCode3\",\r\n            \"diseaseName\": null,\r\n            \"dosage\": \"dose\",\r\n            \"medicineName\": \"med3\",\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 34\r\n          }\r\n        ],\r\n        \"tphv\": [\r\n          {\r\n            \"clinicalFinding\": \"Periodontities\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 40,\r\n            \"toothIndex\": \"35\",\r\n            \"tsCreated\": 1546330807107,\r\n            \"tsModified\": null,\r\n            \"status\": \"Pending\",\r\n            \"tname\": \"Prosthesis removable\",\r\n            \"tid\": 8\r\n          },\r\n          {\r\n            \"clinicalFinding\": \"Periodontities\",\r\n            \"note\": null,\r\n            \"patientId\": 1,\r\n            \"prescriptionId\": 40,\r\n            \"toothIndex\": \"34\",\r\n            \"tsCreated\": 1546330836694,\r\n            \"tsModified\": null,\r\n            \"status\": \"Completed\",\r\n            \"tname\": \"RCT\",\r\n            \"tid\": 9\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  public getSinglePrescriptionView = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": [{\r\n      \"pHistory\": {\r\n        \"prescriptionId\": 34,\r\n        \"advice\": \"general test  advice\",\r\n        \"chiefComplaint\": \"general test cc\",\r\n        \"clinicalFindings\": \"Periodontities - 34 35\",\r\n        \"investigation\": \"general test iv\",\r\n        \"nextAppointment\": 1542393000000,\r\n        \"note\": \"general test notes\",\r\n        \"printableNotes\": \"Printed\",\r\n        \"patientId\": 1,\r\n        \"provisionalDiagnosis\": \"general test pd\",\r\n        \"tsCreated\": 1542426489661,\r\n        \"tsModified\": null\r\n      },\r\n      \"fbl\": [\r\n        {\r\n          \"fId\": 34,\r\n          \"amount\": 500,\r\n          \"amountPaid\": 390,\r\n          \"trtmntPlanRef\": 2,\r\n          \"notes\": \"general test fee\",\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": null,\r\n          \"tsCreated\": 1542426489787,\r\n          \"paymentTs\": null\r\n        },\r\n        {\r\n          \"fId\": 35,\r\n          \"amount\": 356,\r\n          \"amountPaid\": 70,\r\n          \"trtmntPlanRef\": 2,\r\n          \"notes\": \"general test fee\",\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": null,\r\n          \"tsCreated\": 1542426489787,\r\n          \"paymentTs\": null\r\n        }\r\n      ],\r\n      \"mhv\": [\r\n        {\r\n          \"medicalHistoryId\": 37,\r\n          \"medicalHistoryName\": \"Hypotension\",\r\n          \"note\": null,\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 34,\r\n          \"severity\": null,\r\n          \"startedFrom\": 1542426489878\r\n        },\r\n        {\r\n          \"medicalHistoryId\": 38,\r\n          \"medicalHistoryName\": \"Asthma\",\r\n          \"note\": null,\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 34,\r\n          \"severity\": null,\r\n          \"startedFrom\": 1542426489878\r\n        }\r\n      ],\r\n      \"medhv\": [\r\n        {\r\n          \"medId\": 20,\r\n          \"diseaseCode\": \"dCode2\",\r\n          \"diseaseName\": null,\r\n          \"dosage\": \"dose\",\r\n          \"medicineName\": \"med2\",\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 34\r\n        },\r\n        {\r\n          \"medId\": 21,\r\n          \"diseaseCode\": \"dCode3\",\r\n          \"diseaseName\": null,\r\n          \"dosage\": \"dose\",\r\n          \"medicineName\": \"med3\",\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 34\r\n        }\r\n      ],\r\n      \"tphv\": [\r\n        {\r\n          \"clinicalFinding\": \"Periodontities\",\r\n          \"note\": null,\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 40,\r\n          \"toothIndex\": \"35\",\r\n          \"tsCreated\": 1546330807107,\r\n          \"tsModified\": null,\r\n          \"status\": \"Pending\",\r\n          \"tname\": \"Prosthesis removable\",\r\n          \"tid\": 8\r\n        },\r\n        {\r\n          \"clinicalFinding\": \"Periodontities\",\r\n          \"note\": null,\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 40,\r\n          \"toothIndex\": \"34\",\r\n          \"tsCreated\": 1546330836694,\r\n          \"tsModified\": null,\r\n          \"status\": \"Completed\",\r\n          \"tname\": \"RCT\",\r\n          \"tid\": 9\r\n        }\r\n      ]\r\n    }]\r\n  };\r\n\r\n\r\n  public prescriptionPrintView = {\r\n    \"status\": \"SUCCESS\",\r\n    \"desc\": null,\r\n    \"resp\": {\r\n      \"name\": \"Sourabh Sadhu\",\r\n      \"sex\": \"Male\",\r\n      \"age\": \"26 Yrs 9 Months 23 Days\",\r\n      \"phoneNo\": \"9046787913 / 7980231838\",\r\n      \"department\": \"Oral and Maxillofacial Surgery OPD\",\r\n      \"doctor\": \"Dr. Aparna Gupta / Dr. Mitrasen Manna\",\r\n      \"prescriptionId\": \"41\",\r\n      \"regDate\": \"19-08-2018 09:41 PM\",\r\n      \"visitNo\": \"1\",\r\n      \"visitDateTime\": \"05-01-2019 11:35 AM\",\r\n      \"nextAppointmentDateTime\": \"09-01-2019 12:00 AM\",\r\n      \"printableNotes\": \"Printed\",\r\n      \"chiefComplain\": \"Dental Pain\",\r\n      \"provisionalDiagnosis\": \"Diagnosis critical\",\r\n      \"medicalHistory\": \"Asthma, Cardiac diseases, Hypertension, Hypotension, Hyperthyroidism, Drug hypersensitivity\",\r\n      \"clinicalFindings\": \"RETAINED ROOT IN 23,32,36,37,45 \\n CARIOUS 13,14\",\r\n      \"advice\": \"Extraction in 23, 36, 37, 45, 13, 14.\\n Come within 9:30 AM after having full meal with an adult addendent except SUNDAYs and enlisted holidays.\\n EXTRACTION OF 23 HAS BEEN DONE UNDER L.A.\\n HEMOSTASIS HAS BEEN ACHIEVED.\\n MOIST COTTON PACK GIVEN.\\n SOFT AND COLD DIET FOR NEXT 24 HOURS.\\n WARM SALINE MOUTH WASH FREQUENTLY AFTER 24 HOURS.\\n IN CASE OF ANY EMERGENCY, ADVISED TO GO TO ANY NEARBY GOVT HOSPITAL.\",\r\n      \"medicineAll\": [\r\n        \"Amoxycilin 500mg + Clavulenic Acid 125mg Tab 3 after meal 5 days\",\r\n        \"Metronidazole Tab I.P. 400mg (Flim coated) 3 after meal 5 days\",\r\n        \"Paracetamol I.P. 650mg. Tab 3 after meal 5 days\",\r\n        \"Rantidine Tab. I.P. 150mg 2 before meal 5 days\"\r\n      ],\r\n      \"medicineCurrent\": [\r\n        \"Paracetamol I.P. 650mg. Tab 3 after meal 5 days\",\r\n        \"Rantidine Tab. I.P. 150mg 2 before meal 5 days\"\r\n      ],\r\n      \"tphv\": [\r\n        {\r\n          \"clinicalFinding\": \"Periodontities\",\r\n          \"note\": null,\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 40,\r\n          \"toothIndex\": \"34\",\r\n          \"tsCreated\": 1546330836694,\r\n          \"tsModified\": null,\r\n          \"status\": \"Completed\",\r\n          \"tname\": \"RCT\",\r\n          \"tid\": 9\r\n        },\r\n        {\r\n          \"clinicalFinding\": \"Periodontities\",\r\n          \"note\": null,\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 40,\r\n          \"toothIndex\": \"17\",\r\n          \"tsCreated\": 1546330836694,\r\n          \"tsModified\": null,\r\n          \"status\": \"Pending\",\r\n          \"tname\": \"Removal\",\r\n          \"tid\": 9\r\n        }\r\n      ],\r\n      \"tphvCompleted\": [\r\n        {\r\n          \"clinicalFinding\": \"Periodontities\",\r\n          \"note\": null,\r\n          \"patientId\": 1,\r\n          \"prescriptionId\": 40,\r\n          \"toothIndex\": \"34\",\r\n          \"tsCreated\": 1546330836694,\r\n          \"tsModified\": null,\r\n          \"status\": \"Completed\",\r\n          \"tname\": \"RCT\",\r\n          \"tid\": 9\r\n        }\r\n      ]\r\n    }\r\n  };\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventServiceService {\n\n  constructor() { }\n  private subject = new Subject<any>();\n\n  sendEvent(dataLoaded: boolean) {\n    this.subject.next({ flag: dataLoaded });\n  }\n\n  clearEvent() {\n    this.subject.next();\n  }\n\n  getEvent(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map,tap, catchError } from 'rxjs/operators';\r\nimport { Response,Patient, FeeConfigRequestListView, DashboardView, ClinicalFindingView, DashboardResponse } from '../models/models';\r\nimport { DummyResponse } from './dummyresponse';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpcommService {\r\n\r\n  dummyResp : DummyResponse;\r\n  dummy = false;\r\n  resp : Response;\r\n  baseUrl = 'http://localhost:12000/my-portal/';\r\n  ageGrpUrl = this.baseUrl + 'age-group/get-age-group?age=';\r\n  getPatientUrl = this.baseUrl + 'patient/get-patient';\r\n  addPatientUrl = this.baseUrl + 'patient/add-patient';\r\n  getAllToothQuadrent = this.baseUrl + 'tooth-qdr/get-all';\r\n  getAllTreatmentPlan = this.baseUrl + 'trtmnt/get-plan';\r\n  getAllClinicalFindings = this.baseUrl + 'clinical-finding/get-all';\r\n  getAllMedicalHistory = this.baseUrl + 'medical-history/get-all'\r\n  getAllMedicalHistoryMaster = this.baseUrl + 'medical-history/get-medical-master';\r\n  getMedicineUrl = this.baseUrl + 'medicine/get-medicine';\r\n  getMedicineUrlPart1 = '?trtmntId=';\r\n  getMedicineUrlPart2 = '&age=';\r\n  getFeeConfigUrl = this.baseUrl + 'fee/get-config';\r\n  getFeeConfigAgeGrpPart1Url = '?age=';\r\n  getFeeConfigToothGrpPart2Url = '&tooth_grp_idx=';\r\n  getFeeConfigTrtIdPart3Url = '&trtmnt_id=';\r\n  getFeeConfigListUrl = this.baseUrl + 'fee/get-config-list';\r\n  addDashboardUrl = this.baseUrl + 'dashboard/add-dashboard';\r\n  updateDashboardUrl = this.baseUrl + 'dashboard/update-dashboard';\r\n  getDashboardUrl = this.baseUrl + 'dashboard/get-dashboard?';\r\n  getDashboardCountUrl = this.baseUrl + 'dashboard/get-dashboard-count?';\r\n  postAddClinicalFindingUrl = this.baseUrl + 'clinical-finding/add-clinical-finding'\r\n  getAddTreatmentPlanHistUrl = this.baseUrl + 'trtmnt/add-treatment-plan-hist'\r\n  getPrescriptionPrintViewUrl = this.baseUrl + 'prescription-print/get?'\r\n  \r\n  constructor(public http : HttpClient) {\r\n    this.dummyResp = new DummyResponse();\r\n  }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ \r\n      'Accept' : 'application/json',\r\n      // 'Content-Type' : 'text/plain',\r\n      'Content-Type' : 'application/json',\r\n    })\r\n  };\r\n\r\n  parseData(s : object) : any{\r\n    return JSON.parse(JSON.stringify(s));\r\n  }\r\n\r\n  getDashboardView(patientId: number): Observable<Response>{\r\n    if(this.dummy){      \r\n      return of(this.parseData(this.dummyResp.getDashboardView));\r\n    }else{      \r\n      return this.http.get<Response>(this.getDashboardUrl+'patientId='+patientId, this.httpOptions);\r\n    }\r\n  }\r\n\r\n  getDashboardCount(patientId: number): Observable<Response>{\r\n    if(this.dummy){      \r\n      return of(this.parseData(this.dummyResp.getDashboardCountView));\r\n    }else{\r\n      return this.genericGetRequest(this.getDashboardCountUrl+'patientId='+patientId,\"Dashboard count\")\r\n    }\r\n  }\r\n\r\n  getDashboardPaginatedView(patientId: number, page: number, size: number): Observable<Response>{\r\n    if(this.dummy){      \r\n      return of(this.parseData(this.dummyResp.getDashboardView));\r\n    }else{\r\n      return this.genericGetRequest(`${this.getDashboardUrl}patientId=${patientId}&page=${page}&size=${size}`)\r\n    }\r\n  }\r\n\r\n  getAgeGroup(age : string) : Observable<Response>{\r\n    if(this.dummy){      \r\n      return of(this.parseData(this.dummyResp.getAgeGroup));\r\n    }else{\r\n      return this.http.get<Response>(this.ageGrpUrl+age, this.httpOptions);\r\n    }\r\n  }\r\n\r\n  getPatient(patient : Patient) : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.getPatient));\r\n    }else{\r\n      return this.http.post<Response>(this.getPatientUrl,patient,this.httpOptions)\r\n        .pipe(\r\n          catchError(this.handleError('test', new Response()))\r\n        )\r\n      ;\r\n    }\r\n  }\r\n\r\n  addPatient(p : Patient) : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.getPatient));\r\n    }else{\r\n      return this.http.post<Response>(this.addPatientUrl,p,this.httpOptions)\r\n        .pipe(\r\n          catchError(this.handleError('post patient', new Response()))\r\n        );\r\n    }\r\n  }\r\n\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n   \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n   \r\n      // TODO: better job of transforming error for user consumption\r\n      //console.log(`${operation} failed: ${error.message}`);\r\n   \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  getClinicalFindings() : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.clinicalFindingList));\r\n    }else{\r\n      return this.http.get<Response>(this.getAllClinicalFindings,this.httpOptions)\r\n        .pipe(\r\n          catchError(this.handleError('Get Clinicalfindings',new Response()))\r\n        )\r\n    }\r\n  };\r\n\r\n  getToothQuadrents() : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.toothQuadrentList));\r\n    }else{\r\n      return this.http.get<Response>(this.getAllToothQuadrent,this.httpOptions)\r\n        .pipe(\r\n          catchError(this.handleError('Get ToothQuadrent',new Response()))\r\n        )\r\n    }\r\n  };\r\n\r\n  getMedicalMaster() : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.medicalMaster));\r\n    }else{\r\n      return this.genericGetRequest(this.getAllMedicalHistoryMaster);\r\n    }\r\n  };\r\n\r\n  getTreatmentPlan() : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.getTreatmentPlan));\r\n    }else {\r\n      return this.genericGetRequest(this.getAllTreatmentPlan);\r\n    }\r\n  };\r\n\r\n  getAllMedicine(): Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.getMedicine));\r\n    }else{\r\n      return this.genericGetRequest(this.baseUrl+'medicine/');\r\n    }\r\n  }\r\n\r\n  getMedicineView(url : string) : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.getMedicine));\r\n    }else{\r\n      return this.genericGetRequest(url);\r\n    }\r\n  }\r\n\r\n  getFeeConfig(age: number, tooth_grp_idx: number, treatmentId: number){\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.getFeeConfig))\r\n    }else{\r\n      let url = this.getFeeConfigUrl + this.getFeeConfigAgeGrpPart1Url + age + this.getFeeConfigToothGrpPart2Url + tooth_grp_idx + this.getFeeConfigTrtIdPart3Url + treatmentId\r\n      return this.genericGetRequest(url)\r\n    }\r\n  }\r\n\r\n  getFeeConfigList(age : number, feeReqListView : FeeConfigRequestListView[]) : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.getFeeConfigList))\r\n    }else{\r\n      let url = this.getFeeConfigListUrl + this.getFeeConfigAgeGrpPart1Url + age;\r\n      return this.genericPostRequest(url, feeReqListView);\r\n    }\r\n  }\r\n\r\n  addDashBoard(req : DashboardView) : Observable<Response>{\r\n    if(!this.dummy){\r\n      return this.genericPostRequest(this.addDashboardUrl,req,'Add dashboard')\r\n    }else{\r\n      let resp = new Response()\r\n      resp.status = 'SUCCESS'\r\n      let response = new DashboardResponse()\r\n      response.patientId = req.pHistory.patientId\r\n      response.prescriptionId = 99\r\n      response.status = true\r\n      resp.resp = response\r\n      return of(resp)\r\n    }\r\n  }\r\n\r\n  updateDashBoard(req : DashboardView) : Observable<Response>{\r\n    if(!this.dummy){\r\n      return this.genericPostRequest(this.updateDashboardUrl,req,'Update dashboard')\r\n    }else{\r\n      let resp = new Response()\r\n      resp.status = 'SUCCESS'\r\n      let response = new DashboardResponse()\r\n      response.patientId = req.pHistory.patientId\r\n      response.prescriptionId = 99\r\n      response.status = true\r\n      resp.resp = response\r\n      return of(resp)\r\n    }\r\n  }\r\n\r\n  addClinicalFinding(req: ClinicalFindingView) : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.addonClinicalFinding))\r\n    }else{\r\n      return this.genericPostRequest(this.postAddClinicalFindingUrl, req, 'Add cf');\r\n    }\r\n  }\r\n\r\n  genericGetRequest(url : string, notation : string = 'http get') : Observable<Response>{\r\n    return this.http.get<Response>(url, this.httpOptions).pipe(catchError(this.handleError(notation, new Response())))\r\n  }\r\n\r\n  genericPostRequest(url : string, reqObject : any, notation : string = 'http post') : Observable<Response>{\r\n    console.log('Post', url);\r\n    console.log('Data', reqObject);\r\n    return this.http.post<Response>(url, reqObject, this.httpOptions).pipe(catchError(this.handleError(notation, new Response())))\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  getPrescriptionPrintView(patientId:number, prescriptionId:number ) : Observable<Response> {\r\n    if(this.dummy){\r\n      return of(this.parseData(this.dummyResp.prescriptionPrintView))\r\n    }else{\r\n      return this.genericGetRequest(this.getPrescriptionPrintViewUrl+'patientId='+patientId+'&prescriptionId='+prescriptionId,'Prescription Print')\r\n    }\r\n    // return this.genericGetRequest('https://demo5063914.mockable.io/prescription-print/get')\r\n  }\r\n\r\n  getSinglePrescriptionDetail(prescriptionId: number) : Observable<Response>{\r\n    if(this.dummy){\r\n      return of(this.dummyResp.getSinglePrescriptionView);\r\n    }else{\r\n      return this.genericGetRequest(this.getDashboardUrl+'prescriptionId='+prescriptionId,'Single prescription request')\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { TreatmentPlanHistoryView, TreatmentPlanStatus } from '../models/models'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreatmentPlanService {\n\n  private treatmentPlanHistoryViewList: TreatmentPlanHistoryView[]\n  private patientId: number\n  private prescriptionId: number\n\n  constructor() { }\n\n  setTreatmentData(patientId: number,\n    prescriptionId: number,\n    treatmentPlanHistoryViewList: TreatmentPlanHistoryView[]\n  ) {\n    this.patientId = patientId\n    this.prescriptionId = prescriptionId\n    this.treatmentPlanHistoryViewList = treatmentPlanHistoryViewList;\n  }\n\n  getPatientId(): number {\n    return this.patientId\n  }\n\n  getPrescriptionId(): number {\n    return this.prescriptionId\n  }\n\n  // setPrescriptionDetails(patientId: number, prescriptionId: number) {\n  //   this.patientId = patientId\n  //   this.prescriptionId = prescriptionId\n  // }\n\n  getTreatmentPlanSuggestionViewList(): TreatmentPlanHistoryView[] {\n    return (this.treatmentPlanHistoryViewList.length > 0) ? this.treatmentPlanHistoryViewList.filter(tph => tph.status == TreatmentPlanStatus.PENDING) : []\n  }\n\n  getTreatmentDoneHistoryViewList(): TreatmentPlanHistoryView[] {\n    return (this.treatmentPlanHistoryViewList.length > 0) ? this.treatmentPlanHistoryViewList.filter(tph => tph.status == TreatmentPlanStatus.COMPLETED) : []\n  }\n\n  updateTreatmentPlan(treatmentPlan : TreatmentPlanHistoryView){\n    console.log(`Before splice ${this.treatmentPlanHistoryViewList}`)\n    let existingTreatmentPlanIndex = this.treatmentPlanHistoryViewList.findIndex(tph => tph.tid == treatmentPlan.tid)\n    console.log(`index = ${existingTreatmentPlanIndex}`)\n    if(existingTreatmentPlanIndex && existingTreatmentPlanIndex >= 0){\n      this.treatmentPlanHistoryViewList.splice(existingTreatmentPlanIndex, 1)\n    }\n    this.treatmentPlanHistoryViewList.push(treatmentPlan)    \n    console.log(`After update ${this.treatmentPlanHistoryViewList}`)\n  }\n}\n","export class SnackbarModel{\r\n    msg: string = ''\r\n    duration: number = 3000\r\n    isError: Boolean = false\r\n    action: string = 'OK'\r\n    callback: () => void\r\n}","module.exports = \".error-snack {\\r\\n    color: rgb(209, 77, 0);\\r\\n}\\r\\n.info-snack {\\r\\n    color: yellowgreen;\\r\\n}\\r\\n.snackbtn {\\r\\n    float: right;\\r\\n    padding-right: 5px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"isError\\\">\\n    <span *ngIf=\\\"msg?.length > 0\\\" class=\\\"error-snack\\\">{{msg}}\\n        <button class=\\\"snackbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"actionCallback()\\\">{{action}}</button>\\n    </span>\\n    <span *ngIf=\\\"msg?.length == 0\\\" class=\\\"error-snack\\\">Oops! Something went wrong\\n        <button class=\\\"snackbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"actionCallback()\\\">{{action}}</button>\\n    </span>\\n</div>\\n<span *ngIf=\\\"!isError\\\" class=\\\"info-snack\\\">{{msg}}\\n    <button class=\\\"snackbtn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"actionCallback()\\\">{{action}}</button>\\n</span>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar, MAT_SNACK_BAR_DATA } from '@angular/material';\nimport { SnackbarModel } from './snackbar-model'\n\n@Component({\n  selector: 'app-snackhelper',\n  templateUrl: './snackhelper.component.html',\n  styleUrls: ['./snackhelper.component.css']\n})\nexport class SnackhelperComponent implements OnInit {\n\n  // snackBarRef: MatSnackBarRef<SimpleSnackBar>\n  // snackBarOnDismissal: () => void\n  // snackBarOnAction: () => void\n\n  //public snackBar: MatSnackBar,\n\n  isError: Boolean = false\n  msg: string = ''\n  action: string\n  \n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: SnackbarModel) {\n    this.isError = data.isError;\n    this.action = data.action;\n    if (data.msg && data.msg.length > 0) {\n      this.msg = data.msg;\n    }\n  }\n  ngOnInit() { }\n\n  actionCallback(){\n    this.data.callback();\n  }\n  // open(msg: string, action?: string) {\n\n  //   this.snackBarRef = this.snackBar.open(msg, action, {\n  //     duration: 4000,\n  //     direction: \"ltr\",\n  //     data: 'Sample data'\n  //   });\n\n  //   this.snackBarRef.afterDismissed().subscribe(() => {\n  //     this.snackBarOnDismissal();\n  //   });\n\n  //   this.snackBarRef.onAction().subscribe(() => {\n  //     this.snackBarOnAction();\n  //   });\n  // }\n}","module.exports = \".example-stretched-tabs {\\r\\n    max-width: 1000px;\\r\\n  }\\r\\n  .example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-card-parent {\\r\\n    /* max-width: 800px; */\\r\\n    min-width: 50px;\\r\\n    margin-left: 50px;\\r\\n    margin-top: 30px;\\r\\n    width : 100%;\\r\\n  }\\r\\n  .example-card {\\r\\n    /* max-width: 800px; */\\r\\n    min-width: 50px;\\r\\n    margin: 30px;\\r\\n    /* width : 100%; */\\r\\n  }\\r\\n  .expansion-margin {\\r\\n    max-width: 500px;\\r\\n    margin-left: 150px;\\r\\n    margin-top: 30px;\\r\\n  }\\r\\n  .example-section {\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    height: 60px;\\r\\n  }\\r\\n  .example-margin {\\r\\n    /* margin: 0 10px; */\\r\\n    margin-top: 20px;\\r\\n    margin-left : 10px;\\r\\n    margin-right: 10px;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  .example-short-margin {    \\r\\n    margin-right: 10px;\\r\\n  }\\r\\n  .mat-radio-button ~ .mat-radio-button {\\r\\n    padding: 36px;\\r\\n  }\\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n  }\\r\\n  tr.example-element-row:not(.example-expanded-row):hover {\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  tr.example-element-row:not(.example-expanded-row):active {\\r\\n    background: #efefef;\\r\\n  }\\r\\n  .example-element-row td {\\r\\n    border-bottom-width: 0;\\r\\n  }\\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  .example-element-diagram {\\r\\n    min-width: 80px;\\r\\n    border: 2px solid black;\\r\\n    padding: 8px;\\r\\n    font-weight: lighter;\\r\\n    margin: 8px 0;\\r\\n    height: 104px;\\r\\n  }\\r\\n  .example-element-symbol {\\r\\n    font-weight: bold;\\r\\n    font-size: 40px;\\r\\n    line-height: normal;\\r\\n  }\\r\\n  .example-element-description {\\r\\n    padding: 16px;\\r\\n  }\\r\\n  /* .example-element-description-attribution {\\r\\n    opacity: 0.5;\\r\\n  } */\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .example-half-width{\\r\\n    width : 50%;\\r\\n  }\\r\\n  .example-grid-margin{\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 10px;\\r\\n    margin-right: 50px;\\r\\n  }\\r\\n  .rcorners2 {\\r\\n    border-radius: 25px;\\r\\n    border: 2px solid #73AD21;\\r\\n    /* padding-left: 4px;  \\r\\n    width: 200px;\\r\\n    height: 150px;     */\\r\\n    margin-left: 4px;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  tr.mat-footer-row {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  tr{\\r\\n    text-align:center !important\\r\\n  }\\r\\n  th th.mat-header-cell{\\r\\n    text-align:center !important\\r\\n  }\\r\\n  td{\\r\\n    text-align:center !important\\r\\n  }\\r\\n  .mat-table-sticky {\\r\\n    border-top: 1px solid #e0e0e0;\\r\\n  }\\r\\n  .example-section {\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    height: 60px;\\r\\n  }\"","module.exports = \"<!-- Treatment plan history section -->\\n<!-- <div *ngIf=\\\"treatmentTabPatientId && treatmentTabPrescriptionId && treatmentTabTreatmentPlanHistoryViews && treatmentTabTreatmentPlanHistoryViews.length > 0\\\"> -->\\n  <p>\\n    <span class=\\\"example-margin\\\">Treatment plan history</span>\\n  </p>\\n  <button class=\\\"example-margin rcorners2\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"fetchTphvList()\\\">Check History\\n  </button>\\n  <div *ngIf=\\\"requestLoading\\\">\\n    <section class=\\\"example-section\\\">\\n      <mat-progress-bar class=\\\"example-margin\\\" color=\\\"primary\\\" mode=\\\"indeterminate\\\">\\n      </mat-progress-bar>\\n    </section>\\n  </div>\\n  <div class=\\\"example-full-width\\\">\\n    <div *ngIf=\\\"treatmentPlanHistories && treatmentPlanHistories.length > 0\\\">\\n      <table mat-table [dataSource]=\\\"trtmntPlanHistListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n        <ng-container matColumnDef=\\\"tname\\\">\\n          <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Name </th>\\n          <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.tname}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"clinicalFinding\\\">\\n          <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\n          <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.clinicalFinding}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"toothIndex\\\">\\n          <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Tooth </th>\\n          <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.toothIndex}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"note\\\">\\n          <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Note </th>\\n          <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.note}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"tsCreated\\\">\\n          <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Time </th>\\n          <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.tsCreated | date:'dd/MM/yy hh:mm a'}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"trtmntPlanHistListViewColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: trtmntPlanHistListViewColumns;\\\"></tr>\\n      </table>\\n    </div>\\n  </div>\\n\\n  <div>\\n    <button class=\\\"example-margin rcorners2\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"getSuggestionList()\\\">Select\\n      from suggestion\\n    </button>\\n    OR\\n    <button class=\\\"example-margin rcorners2\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"addTphv()\\\">Add manually\\n    </button>\\n  </div>\\n\\n  <!-- Suggestion to add from Treatment Plan List -->\\n  <div class=\\\"example-full-width\\\" *ngIf=\\\"showTrtmentPlanSuggestionList\\\">\\n    <table mat-table [dataSource]=\\\"trtmntPlanListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <ng-container matColumnDef=\\\"tname\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Treatment Plan </th>\\n        <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.tname}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"clinicalFinding\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> C/F </th>\\n        <td mat-cell *matCellDef=\\\"let tphv\\\"> {{tphv.clinicalFinding}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"toothIndex\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Tooth </th>\\n        <td mat-cell *matCellDef=\\\"let tphv; let i = index;\\\">\\n          {{tphv.toothIndex}}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align:center\\\"> Action </th>\\n        <td mat-cell *matCellDef=\\\"let tphv; let i = index;\\\">\\n          <button class=\\\"rcorners2\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"addTphv(tphv, i)\\\">Select</button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"trtmntPlanListViewColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: trtmntPlanListViewColumns;\\\"></tr>\\n    </table>\\n  </div>\\n  <!-- selectedTreatmentPlanHistView -->\\n  <div *ngIf=\\\"showTrtmentPlanAdditionSection\\\">\\n    <mat-card class=\\\"example-card\\\">\\n      <mat-card-header>\\n        <mat-card-title>Treatment Plan</mat-card-title>\\n        <mat-card-subtitle> {{selectedTreatmentPlanHistView.treatmentPlanViewModel}} </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <mat-form-field class=\\\"example-short-margin\\\" hintLabel=\\\"Max 30 characters\\\">\\n          <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Treatment name\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.tname\\\"\\n            required>\\n          <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.tname?.length || 0}}/30</mat-hint>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-short-margin\\\" hintLabel=\\\"Max 30 characters\\\">\\n          <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"C/F\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.clinicalFinding\\\"\\n            required>\\n          <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.clinicalFinding?.length || 0}}/30</mat-hint>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-short-margin\\\" hintLabel=\\\"Max 30 characters\\\">\\n          <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Tooth\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.toothIndex\\\"\\n            required>\\n          <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.toothIndex?.length || 0}}/30</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"example-short-margin\\\">\\n          <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"treatmentStatusForm\\\" [(ngModel)]=\\\"selectedTreatmentPlanStatus\\\"\\n            required>\\n            <mat-option *ngFor=\\\"let statusList of treatmentStatusList\\\" [value]=\\\"statusList\\\">{{statusList}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field hintLabel=\\\"Max 30 characters\\\">\\n          <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Note\\\" [(ngModel)]=\\\"selectedTreatmentPlanHistView.note\\\">\\n          <mat-hint align=\\\"end\\\">{{selectedTreatmentPlanHistView.note?.length || 0}}/30</mat-hint>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button mat-stroked-button class=\\\"example-margin rcorners2\\\" color=\\\"primary\\\" (click)=\\\"addTreatmentPlan()\\\">ADD</button>\\n        <button mat-stroked-button class=\\\"example-margin rcorners2\\\" color=\\\"warn\\\" (click)=\\\"deleteSelectedTphv()\\\">DELETE</button>\\n      </mat-card-actions>\\n    </mat-card>\\n\\n  </div>\\n<!-- </div> -->\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormControl } from '@angular/forms';\n\nimport { TreatmentPlanHistoryView, TreatmentPlanStatus } from '../models/models';\nimport { TreatmentPlanService } from '../services/treatment-plan.service'\nimport { EventServiceService } from '../services/event-service.service'\nimport { HttpcommService } from '../services/httpcomm.service';\nimport { SnackbarModel } from '../snackhelper/snackbar-model';\nimport { CommonService } from '../services/commonservice.service';\nimport { from, Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-treatment-plan',\n  templateUrl: './treatment-plan.component.html',\n  styleUrls: ['./treatment-plan.component.css']\n})\nexport class TreatmentPlanComponent implements OnInit, OnDestroy {\n\n  /**\n   * As event emitter is working, so need to send reference as we need to operate on data\n   * Hence communicating via server\n   */\n  // @Input() treatmentTabPatientId : number\n  // @Input() treatmentTabPrescriptionId : number\n  // @Input() treatmentTabTreatmentPlanHistoryViews : TreatmentPlanHistoryView[]\n\n  trtmntPlanHistListDataSource = new MatTableDataSource<TreatmentPlanHistoryView>()\n  trtmntPlanHistListViewColumns = ['tname', 'clinicalFinding', 'toothIndex', 'note', 'tsCreated']\n\n  trtmntPlanListDataSource = new MatTableDataSource<TreatmentPlanHistoryView>()\n  trtmntPlanListViewColumns = ['tname', 'clinicalFinding', 'toothIndex', 'action']\n  showTrtmentPlanSuggestionList = false\n  showTrtmentPlanAdditionSection = false\n  selectedTreatmentPlanHistView = new TreatmentPlanHistoryView()\n  requestLoading = false //Progress bar at the time request loading\n  treatmentPlanHistories: TreatmentPlanHistoryView[] = [];\n  treatmentStatusForm = new FormControl()\n  treatmentStatusList : string[] = []\n  selectedTreatmentPlanStatus : string //selector value\n  snackBarModel : SnackbarModel\n\n  //Event emitter via subscribe method\n  subscription: Subscription;\n\n  constructor(\n    public treatmentPlanService: TreatmentPlanService,\n    private eventService : EventServiceService,\n    public httpComService : HttpcommService,\n    public snackBar: MatSnackBar, public commonService : CommonService\n    ) { \n      this.subscription = eventService.getEvent().subscribe(isDataLoaded => {\n        if(isDataLoaded){\n          //Prepare the list\n          // this.getSuggestionList()\n          this.fetchTphvList()\n        }\n      })\n    }\n\n  ngOnInit() { \n    this.treatmentStatusList.push(TreatmentPlanStatus.COMPLETED.valueOf())\n    this.treatmentStatusList.push(TreatmentPlanStatus.PENDING.valueOf())\n    this.snackBarModel = new SnackbarModel()\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe()\n  }\n\n  // Show treatment plan list from prescription history\n  getSuggestionList() {\n    let suggestions = this.treatmentPlanService.getTreatmentPlanSuggestionViewList();\n    // let suggestions = this.treatmentTabTreatmentPlanHistoryViews.filter(tph => tph.status == TreatmentPlanStatus.PENDING)\n    if (suggestions && suggestions.length > 0) {\n      this.showTrtmentPlanSuggestionList = true\n      this.trtmntPlanListDataSource.data = suggestions;\n    }\n  }\n\n  //Show custom addition section from suggestion list or for manual addition\n  addTphv(tphv: TreatmentPlanHistoryView = null, index: number = 0) {\n    this.showTrtmentPlanSuggestionList = false\n    this.showTrtmentPlanAdditionSection = true\n    if (tphv || tphv != null) {\n      this.selectedTreatmentPlanHistView = tphv\n      this.selectedTreatmentPlanStatus = tphv.status\n    }else{\n      this.selectedTreatmentPlanHistView = new TreatmentPlanHistoryView()\n      this.selectedTreatmentPlanStatus = ''\n    }\n  }\n\n  deleteSelectedTphv() {\n    this.showTrtmentPlanAdditionSection = false\n    this.selectedTreatmentPlanHistView = new TreatmentPlanHistoryView()\n  }\n\n  //Fetch previous entries\n  fetchTphvList() {\n    this.treatmentPlanHistories = this.treatmentPlanService.getTreatmentDoneHistoryViewList()\n    // this.treatmentPlanHistories = this.treatmentTabTreatmentPlanHistoryViews\n    if (this.treatmentPlanHistories && this.treatmentPlanHistories.length > 0) {\n      this.trtmntPlanHistListDataSource.data = this.treatmentPlanHistories;\n    }\n  }\n\n  addTreatmentPlan(){\n    if(this.validateData()){\n      this.selectedTreatmentPlanHistView.patientId = this.treatmentPlanService.getPatientId()\n      this.selectedTreatmentPlanHistView.prescriptionId = this.treatmentPlanService.getPrescriptionId()\n      // this.selectedTreatmentPlanHistView.patientId = this.treatmentTabPatientId\n      // this.selectedTreatmentPlanHistView.prescriptionId = this.treatmentTabPrescriptionId\n      this.selectedTreatmentPlanHistView.status = this.treatmentStatusForm.value\n      console.log(\"Add Treatment Plan\", JSON.stringify(this.selectedTreatmentPlanHistView))\n      let url : string = this.httpComService.getAddTreatmentPlanHistUrl+'?patientId='+this.selectedTreatmentPlanHistView.patientId + '&prescriptionId='+ this.selectedTreatmentPlanHistView.prescriptionId\n      console.log(\"URL\", JSON.stringify(url))\n      this.httpComService.genericPostRequest(\n        url, \n        this.selectedTreatmentPlanHistView, \n        \"Add Treatment Plan\"\n        ).subscribe( resp => {\n        if(resp.status == \"SUCCESS\"){\n          //Update History\n          this.showTrtmentPlanAdditionSection = false\n          // this.treatmentPlanService.updateTreatmentPlan(this.selectedTreatmentPlanHistView)\n          this.commonService.showSuccessSnackBar(this.snackBar)\n          this.selectedTreatmentPlanHistView = new TreatmentPlanHistoryView()\n        }else{\n          this.commonService.showErrorSnackBar(this.snackBar)\n        }\n      })\n    }\n  }\n\n  validateData() : boolean {\n    if(!this.selectedTreatmentPlanHistView) return false\n    if(!this.selectedTreatmentPlanHistView.clinicalFinding || this.selectedTreatmentPlanHistView.clinicalFinding.length <= 0) return false\n    if(!this.selectedTreatmentPlanHistView.tname || this.selectedTreatmentPlanHistView.tname.length <= 0) return false\n    if(!this.selectedTreatmentPlanHistView.toothIndex) return false\n    if(!this.treatmentStatusForm.value || this.treatmentStatusForm.value.length <= 0) return false\n    if(!this.treatmentPlanService.getPatientId()) return false\n    if(!this.treatmentPlanService.getPrescriptionId()) return false\n    return true\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}