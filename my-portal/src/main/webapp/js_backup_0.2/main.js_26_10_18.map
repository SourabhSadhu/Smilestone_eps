{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-prescription/create-prescription.component.css","webpack:///./src/app/create-prescription/create-prescription.component.html","webpack:///./src/app/create-prescription/create-prescription.component.ts","webpack:///./src/app/create-prescription/dialog-tooth-cf.html","webpack:///./src/app/dash-routing.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/material-test/material-test.component.css","webpack:///./src/app/material-test/material-test.component.html","webpack:///./src/app/material-test/material-test.component.ts","webpack:///./src/app/models/models.ts","webpack:///./src/app/services/commonservice.service.ts","webpack:///./src/app/services/dummyresponse.ts","webpack:///./src/app/services/httpcomm.service.ts","webpack:///./src/app/snackhelper/snackhelper.component.css","webpack:///./src/app/snackhelper/snackhelper.component.html","webpack:///./src/app/snackhelper/snackhelper.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\n  WORK IN PROGRESS!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\"","module.exports = \"<mat-sidenav-container\\n    class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\n  <mat-sidenav #sidenav (keydown.escape)=\\\"sidenav.close()\\\" disableClose>\\n    <!-- <p><button mat-button (click)=\\\"close('toggle button')\\\">Toggle</button></p> -->\\n    <p *ngFor = \\\"let menu of navMenus\\\">\\n      <button mat-button routerLink={{menu.path}} (click) = \\\"sidenav.close()\\\">{{menu.name}}</button>   \\n    </p>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <p>\\n      <button mat-icon-button (click)=\\\"sidenav.open()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">home</mat-icon>\\n      </button>\\n    </p>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n<!-- <nav>\\n  <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n  <a routerLink=\\\"/admin\\\">Admin</a>\\n</nav> -->\\n\\n\"","import { Component,ViewChild } from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport { DashRoutingModule } from './dash-routing.module'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  @ViewChild('sidenav') sidenav: MatSidenav;\n  title :string = 'eps-dashboard';\n  reason :string = '';\n  navMenus = [\n    {\"name\": \"Dashboard\", \"path\":\"dashboard\"},\n    {\"name\": \"Admin\", \"path\":\"admin\"},\n    {\"name\": \"Test\", \"path\":\"test\"}\n  ]\n  constructor(){\n  }\n\n  close(reason: string) {\n    this.reason = reason;\n    this.sidenav.close();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport { DashRoutingModule } from './/dash-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { SnackhelperComponent } from './snackhelper/snackhelper.component';\nimport { CreatePrescriptionComponent } from './create-prescription/create-prescription.component';\nimport { MaterialTestComponent } from './material-test/material-test.component';\nimport { DialogToothClinicalfindings } from './create-prescription/create-prescription.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AdminComponent,\n    SnackhelperComponent,\n    CreatePrescriptionComponent,\n    MaterialTestComponent,\n    DialogToothClinicalfindings\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    FormsModule, \n    ReactiveFormsModule,\n    HttpClientModule,\n    DashRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [SnackhelperComponent,DialogToothClinicalfindings]\n})\nexport class AppModule { }\n","module.exports = \".example-stretched-tabs {\\r\\n  max-width: 1000px;\\r\\n}\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-card-parent {\\r\\n  /* max-width: 800px; */\\r\\n  min-width: 50px;\\r\\n  margin-left: 50px;\\r\\n  margin-top: 30px;\\r\\n  width : 100%;\\r\\n}\\r\\n.example-card {\\r\\n  /* max-width: 800px; */\\r\\n  min-width: 50px;\\r\\n  margin: 30px;\\r\\n  /* width : 100%; */\\r\\n}\\r\\n.expansion-margin {\\r\\n  max-width: 500px;\\r\\n  margin-left: 150px;\\r\\n  margin-top: 30px;\\r\\n}\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n.example-margin {\\r\\n  /* margin: 0 10px; */\\r\\n  margin-top: 20px;\\r\\n  margin : 5px 10px;\\r\\n}\\r\\n.mat-radio-button ~ .mat-radio-button {\\r\\n  padding: 36px;\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\ntr.example-detail-row {\\r\\n  height: 0;\\r\\n}\\r\\ntr.example-element-row:not(.example-expanded-row):hover {\\r\\n  background: #f5f5f5;\\r\\n}\\r\\ntr.example-element-row:not(.example-expanded-row):active {\\r\\n  background: #efefef;\\r\\n}\\r\\n.example-element-row td {\\r\\n  border-bottom-width: 0;\\r\\n}\\r\\n.example-element-detail {\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n}\\r\\n.example-element-diagram {\\r\\n  min-width: 80px;\\r\\n  border: 2px solid black;\\r\\n  padding: 8px;\\r\\n  font-weight: lighter;\\r\\n  margin: 8px 0;\\r\\n  height: 104px;\\r\\n}\\r\\n.example-element-symbol {\\r\\n  font-weight: bold;\\r\\n  font-size: 40px;\\r\\n  line-height: normal;\\r\\n}\\r\\n.example-element-description {\\r\\n  padding: 16px;\\r\\n}\\r\\n/* .example-element-description-attribution {\\r\\n  opacity: 0.5;\\r\\n} */\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-half-width{\\r\\n  width : 50%;\\r\\n}\\r\\n.example-grid-margin{\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 10px;\\r\\n  margin-right: 50px;\\r\\n}\\r\\n.rcorners2 {\\r\\n  border-radius: 25px;\\r\\n  border: 2px solid #73AD21;\\r\\n  padding-left: 4px; \\r\\n  /* width: 200px;\\r\\n  height: 150px;     */\\r\\n  margin-left: 4px;\\r\\n  margin-right: 4px;\\r\\n}\\r\\n/* label > input{ HIDE RADIO \\r\\n  visibility: hidden; Makes input not-clickable\\r\\n  position: absolute; Remove input from document flow\\r\\n}\\r\\nlabel > input { IMAGE STYLES\\r\\n  cursor:pointer;\\r\\n  border:2px solid transparent;\\r\\n}\\r\\nlabel > input:checked { (RADIO CHECKED) IMAGE STYLES\\r\\n  border:20px solid #f00;\\r\\n} */\\r\\n/* Fees table properties */\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n.mat-table-sticky {\\r\\n  border-top: 1px solid #e0e0e0;\\r\\n}\\r\\n.icon-search {\\r\\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z%22%2F%3E%3Cpath d%3D%22M0 0h24v24H0z%22 fill%3D%22none%22%2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\\r\\n.icon-refresh {\\r\\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z%22%2F%3E%3Cpath d%3D%22M0 0h24v24H0z%22 fill%3D%22none%22%2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\\r\\n.icon-print {\\r\\n  background: url(\\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z%22%2F%3E%3Cpath d%3D%22M0 0h24v24H0z%22 fill%3D%22none%22%2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\"","module.exports = \"<!-- <div class=\\\"example-margin\\\">\\n  <form class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\n      <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\n          {{option}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </form>\\n  <form class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Pick one2\\\" aria-label=\\\"Number\\\" [formControl]=\\\"myControl2\\\" [matAutocomplete]=\\\"auto2\\\">\\n      <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let option2 of filteredOptions2 | async\\\" [value]=\\\"option2\\\">\\n          {{option2}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </form>\\n</div> -->\\n\\n<!-- Section to create presciption -->\\n<mat-card class=\\\"example-card-parent\\\">\\n\\n  <mat-tab-group [selectedIndex]=\\\"prescriptionFromControl.value\\\" (selectedIndexChange)=\\\"prescriptionFromControl.setValue($event)\\\"\\n    mat-stretch-tabs class=\\\"example-stretched-tabs mat-elevation-z4\\\">\\n    <mat-tab label=\\\"Basic Info\\\">\\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-content>\\n          <table>\\n            <tr>\\n              <td>\\n                <!-- First Name -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field hintLabel=\\\"Min {{minCharToSearch}} char to search\\\">\\n                    <input matInput cdkFocusInitial maxlength=20 placeholder=\\\"First name\\\" [(ngModel)]=\\\"selectedPatient.firstName\\\"\\n                      (keyup)='fetchPatient($event)'>\\n                    <mat-hint align=\\\"end\\\">{{selectedPatient.firstName?.length || 0}}/20</mat-hint>\\n                  </mat-form-field>\\n                </div>\\n              </td>\\n              <td>\\n                <!-- Last Name -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field hintLabel=\\\"Min {{minCharToSearch}} char to search\\\">\\n                    <input matInput maxlength=20 placeholder=\\\"Last name\\\" [(ngModel)]=\\\"selectedPatient.lastName\\\" (keyup)='fetchPatient($event)'>\\n                    <mat-hint align=\\\"end\\\">{{selectedPatient.lastName?.length || 0}}/20</mat-hint>\\n                  </mat-form-field>\\n                </div>\\n              </td>\\n              <td>\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select from calender\\\" (dateChange)=\\\"dateValidate($event)\\\"\\n                      disabled>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </td>\\n              <td>\\n                <div class=\\\"\\\">\\n                  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"fetchPatient($event)\\\" matTooltip=\\\"Search\\\">\\n                    <mat-icon aria-label=\\\"Search\\\">search</mat-icon>\\n                  </button>\\n                </div>\\n              </td>\\n              <td>\\n                <div class=\\\"example-margin\\\">\\n                  <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"initializeValiables()\\\" matTooltip=\\\"Refresh\\\">\\n                    <mat-icon aria-label=\\\"Refresh\\\">refresh</mat-icon>\\n                  </button>\\n                </div>\\n              </td>\\n            </tr>\\n          </table>\\n          <!-- Loading progressbar -->\\n          <mat-progress-bar *ngIf=\\\"isPatientLoading\\\" color=\\\"color\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n          <!-- Patient list -->\\n          <div *ngIf=\\\"isPatientLoaded\\\">\\n            <table mat-table [dataSource]=\\\"patientDataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n              <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\n                <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\n              </ng-container>\\n\\n              <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\n              <ng-container matColumnDef=\\\"expandedDetail\\\">\\n                <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n                  <div class=\\\"example-element-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n                    <div class=\\\"example-element-diagram\\\">\\n                      <div class=\\\"example-element-position\\\"> {{element.firstName}} </div>\\n                      <div class=\\\"example-element-symbol\\\"> {{element.lastName}} </div>\\n                      <div class=\\\"example-element-name\\\"> {{element.age}} </div>\\n                      <div class=\\\"example-element-weight\\\"> {{element.contactNo1}} </div>\\n                      <!-- <span>Image placeholder</span> -->\\n                    </div>\\n                    <div class=\\\"example-element-description\\\">\\n                      <p>\\n                        {{element.address1}}\\n                      </p>\\n                      <p>\\n                        {{element.address2}}\\n                      </p>\\n                      <p>\\n                        <!-- <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span> -->\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"selectedElement(expandedElement)\\\">\\n                          Select <mat-icon aria-label=\\\"Select\\\">check_circle_outline</mat-icon>\\n                        </button>\\n                      </p>\\n                    </div>\\n                  </div>\\n                </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\" class=\\\"example-element-row\\\"\\n                [class.example-expanded-row]=\\\"expandedElement === element\\\" (mouseenter)=\\\"mouseOverFn(element)\\\">\\n                <!-- (mouseout)=\\\"mouseOutFn(expandedElement)\\\" -->\\n              </tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n            </table>\\n          </div>\\n        </mat-card-content>\\n        <!-- <mat-card-actions>\\n          <button mat-button>LIKE</button>\\n          <button mat-button>SHARE</button>\\n        </mat-card-actions> -->\\n      </mat-card>\\n\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"History\\\">\\n\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"Prescription\\\">\\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-content>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Chief complaint\\\" [(ngModel)]=\\\"prescriptionHistoryView.chiefComplaint\\\"\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.chiefComplaint\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n              (click)=\\\"prescriptionHistoryView.chiefComplaint=''\\\" matToolTip=\\\"Clear\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <button mat-button matPrefix mat-icon-button aria-label=\\\"Add\\\" (click)=\\\"openDialog()\\\" matToolTip=\\\"Add\\\">\\n              <mat-icon>add_circle_outline</mat-icon>\\n            </button>\\n            <!-- <textarea matInput placeholder=\\\"Chief findings\\\" disabled [(ngModel)]=\\\"clinicalFindingsView\\\" cdkTextareaAutosize\\n              cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea> -->\\n            <mat-chip-list #chipList1>\\n              <mat-chip *ngFor=\\\"let s of clinicalFindingsView\\\" selectable=\\\"false\\\" removable=\\\"false\\\">\\n                {{s}}\\n              </mat-chip>\\n              <input placeholder=\\\"Add C/F\\\" [matChipInputFor]=\\\"chipList1\\\" matChipInputAddOnBlur=\\\"true\\\" disabled>\\n            </mat-chip-list>\\n          </mat-form-field>\\n\\n          <table>\\n            <tr>\\n              <td>\\n                <!-- Medical History -->\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <mat-select placeholder=\\\"Medical History\\\" [formControl]=\\\"medicalHistoryForm\\\" \\n                    multiple class=\\\"example-full-width\\\">\\n                    <mat-option *ngFor=\\\"let mh of mhList\\\" [value]=\\\"mh\\\">{{mh}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n                <!-- Loading progressbar -->\\n                <mat-progress-bar *ngIf=\\\"mhList == null || mhList?.length <= 0\\\" color=\\\"color\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n              </td>\\n              <td>\\n                <mat-form-field hintLabel=\\\"Max 30 characters\\\" class=\\\"example-full-width\\\">\\n                  <input matInput [maxlength]=\\\"30\\\" placeholder=\\\"Investigation\\\" [(ngModel)]=\\\"prescriptionHistoryView.investigation\\\">\\n                  <mat-hint align=\\\"end\\\">{{prescriptionHistoryView.investigation?.length || 0}}/30</mat-hint>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n\\n          <!-- provisionalDiagnosis -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Provisional diagnosis\\\" [(ngModel)]=\\\"prescriptionHistoryView.provisionalDiagnosis\\\"\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.provisionalDiagnosis\\\" matSuffix mat-icon-button\\n              aria-label=\\\"Clear\\\" (click)=\\\"prescriptionHistoryView.provisionalDiagnosis=''\\\" matToolTip=\\\"Clear\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n\\n          <!-- Treatment Done -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Treatment done\\\" [(ngModel)]=\\\"prescriptionHistoryView.treatmentDone\\\"\\n              cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.treatmentDone\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n              (click)=\\\"prescriptionHistoryView.treatmentDone=''\\\" matToolTip=\\\"Clear\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n\\n          <!-- Treatment Plan -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-chip-list #chipListtrtmnt>\\n              <mat-chip *ngFor=\\\"let s of treatmentPlanListView\\\" selectable=\\\"true\\\" removable=\\\"true\\\" (removed)=\\\"removeChip(s,1)\\\">\\n                {{s}}\\n                <mat-icon matChipRemove>cancel</mat-icon>\\n              </mat-chip>\\n              <input placeholder=\\\"Treatment Plan\\\" [matChipInputFor]=\\\"chipListtrtmnt\\\" matChipInputAddOnBlur=\\\"true\\\"\\n                (matChipInputTokenEnd)=\\\"addTreatmentPlan($event)\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\">\\n            </mat-chip-list>\\n          </mat-form-field>\\n\\n          <!-- advice -->\\n          <!-- <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n            <mat-grid-tile colspan=\\\"3\\\" rowspan=\\\"4\\\"> -->\\n          <mat-form-field class=\\\"example-full-width example-grid-margin\\\">\\n            <textarea matInput placeholder=\\\"Advice\\\" [(ngModel)]=\\\"prescriptionHistoryView.advice\\\" cdkTextareaAutosize\\n              cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.advice\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n              (click)=\\\"prescriptionHistoryView.advice=''\\\" matToolTip=\\\"Clear\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n          <!-- </mat-grid-tile> -->\\n\\n          <!-- Medicine -->\\n          <!-- <mat-grid-tile colspan=\\\"3\\\" rowspan=\\\"4\\\"> -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-chip-list #chipListmedicine>\\n              <mat-chip *ngFor=\\\"let s of medicineMasterViewList\\\" selectable=\\\"true\\\" removable=\\\"true\\\" (removed)=\\\"removeChip(s,2)\\\">\\n                {{s.medicineName}} - {{s.dosage}}\\n                <mat-icon matChipRemove>cancel</mat-icon>\\n              </mat-chip>\\n              <input placeholder=\\\"Medicines\\\" [matChipInputFor]=\\\"chipListmedicine\\\" matChipInputAddOnBlur=\\\"true\\\"\\n                (matChipInputTokenEnd)=\\\"addMedicine($event)\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\">\\n            </mat-chip-list>\\n          </mat-form-field>\\n          <!-- </mat-grid-tile> -->\\n\\n          <!-- Next appointment -->\\n          <!-- <mat-grid-tile colspan=\\\"1\\\" rowspan=\\\"8\\\"> -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"nextAppoPicker\\\" \\n              placeholder=\\\"Next appointment\\\" (dateChange)=\\\"createNextAppo($event)\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"nextAppoPicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #nextAppoPicker></mat-datepicker>\\n          </mat-form-field>\\n          <!-- </mat-grid-tile> \\n          </mat-grid-list> -->\\n\\n          <div *ngIf=\\\"feesConfigListView && feesConfigListView.length > 0\\\">\\n            <table mat-table [dataSource]=\\\"feesConfigListDataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n              <!-- column list -->\\n              <!-- Id Column -->\\n              <ng-container matColumnDef=\\\"treatmentPlanId\\\">\\n                <th mat-header-cell *matHeaderCellDef> # </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.treatmentPlanId}} </td>\\n                <td mat-footer-cell *matFooterCellDef> </td>\\n              </ng-container>\\n\\n              <!-- baseFee Column -->\\n              <ng-container matColumnDef=\\\"baseFee\\\">\\n                <th mat-header-cell *matHeaderCellDef> Base </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.baseFee}} </td>\\n                <td mat-footer-cell *matFooterCellDef> </td>\\n              </ng-container>\\n              \\n              <!-- ageGroupId Column -->\\n              <ng-container matColumnDef=\\\"ageGroupId\\\">\\n                <th mat-header-cell *matHeaderCellDef> AgeGrp </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.ageGroupId}} </td>\\n                <td mat-footer-cell *matFooterCellDef> </td>\\n              </ng-container>\\n\\n              <!-- ageGroupPercent Column -->\\n              <ng-container matColumnDef=\\\"ageGroupPercent\\\">\\n                <th mat-header-cell *matHeaderCellDef> % </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.ageGroupPercent}} </td>\\n                <td mat-footer-cell *matFooterCellDef> </td>\\n              </ng-container>\\n\\n              <!-- toothGroupId Column -->\\n              <ng-container matColumnDef=\\\"toothGroupId\\\">\\n                <th mat-header-cell *matHeaderCellDef> ToothGrp </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.toothGroupId}} </td>\\n                <td mat-footer-cell *matFooterCellDef> </td>\\n              </ng-container>\\n\\n              <!-- toothGroupPercent Column -->\\n              <ng-container matColumnDef=\\\"toothGroupPercent\\\">\\n                <th mat-header-cell *matHeaderCellDef> % </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\"> {{fee.toothGroupPercent}} </td>\\n                <td mat-footer-cell *matFooterCellDef> </td>\\n              </ng-container>\\n\\n              <!-- totalFee Column -->\\n              <ng-container matColumnDef=\\\"totalFee\\\">\\n                <th mat-header-cell *matHeaderCellDef> Fee </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\">\\n                  <mat-form-field>\\n                    <input matInput type=\\\"number\\\" min=1 [(ngModel)]=\\\"fee.totalFee\\\" (change)=\\\"getTotalFee()\\\">\\n                  </mat-form-field>\\n                </td>\\n                <td mat-footer-cell *matFooterCellDef> Total </td>\\n              </ng-container>\\n\\n              <!-- notes Column -->\\n              <ng-container matColumnDef=\\\"notes\\\">\\n                <th mat-header-cell *matHeaderCellDef> Note </th>\\n                <td mat-cell *matCellDef=\\\"let fee\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"fee.notes\\\">\\n                  </mat-form-field>\\n                  <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n                    (click)=\\\"removeFees($index)\\\" matToolTip=\\\"Clear\\\">\\n                    <mat-icon>close</mat-icon>\\n                  </button>\\n                </td>\\n                <td mat-footer-cell *matFooterCellDef> {{totalFees | currency:'&#8377;' }} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"feesConfigListViewColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: feesConfigListViewColumns;\\\"></tr>\\n              <tr mat-footer-row *matFooterRowDef=\\\"feesConfigListViewColumns; sticky: true\\\"></tr>\\n            </table>\\n          </div>\\n\\n          <!-- Note -->\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput placeholder=\\\"Notes\\\" [(ngModel)]=\\\"prescriptionHistoryView.note\\\" cdkTextareaAutosize\\n              cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n            <button mat-button *ngIf=\\\"prescriptionHistoryView.note\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n              (click)=\\\"prescriptionHistoryView.note=''\\\" matToolTip=\\\"Clear\\\">\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </mat-form-field>\\n\\n          <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"createAndSubmitPrescription()\\\" matTooltip=\\\"Print\\\">\\n            <mat-icon aria-label=\\\"Print\\\">print</mat-icon>\\n          </button>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-tab>\\n\\n  </mat-tab-group>\\n\\n</mat-card>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { DummyResponse } from '../services/dummyresponse';\nimport {\n  ClinicalFindingView, MedicalMaster, Patient, PrescriptionHistoryView,\n  ToothQuadrentView, TreatmentPlan, FeesBreakupView,  FeeConfigView,\n  MedicalHistoryView,  MedicineHistoryView, DashboardView, MedicineView, FeeConfigRequestListView\n} from '../models/models';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackhelperComponent } from '../snackhelper/snackhelper.component';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { FormControl, Validators } from '@angular/forms';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { HttpcommService } from '../services/httpcomm.service';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material';\nimport { Observable, pipe } from 'rxjs';\nimport { startWith, map, tap } from 'rxjs/operators';\nimport { CommonService } from '../services/commonservice.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-create-prescription',\n  templateUrl: './create-prescription.component.html',\n  styleUrls: ['./create-prescription.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0', display: 'none' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class CreatePrescriptionComponent implements OnInit {\n\n  selectedPatient: Patient;\n  isPatientLoading: boolean; // Toggle progress bar  \n  isPatientLoaded: boolean; // Toggle patient list\n  isPatientSelected: boolean; // Toggle patient details view\n  patientDataSource: Patient[];\n  columnsToDisplay = ['firstName', 'lastName', 'age', 'weight'];\n  expandedElement: Patient;\n  prescriptionHistoryView: PrescriptionHistoryView;\n  feesConfigListView: FeeConfigView[];\n  medicalHistoryView: MedicalHistoryView;\n  medicineMasterViewList: MedicineView[];\n  dashboardView: DashboardView;\n  clinicalFindings: ClinicalFindingView[];\n  toothQuadrents: ToothQuadrentView[];\n  dialogData = new CompositDialogBoxData();\n  mhList: MedicalMaster[] = [];\n  \n  medicalHistoryForm = new FormControl();\n\n  cftMapArray: ClinicalFindingToothMapping[];\n  clinicalFindingsView: string[]; //To show selected clinical findings to tooth mapping\n  treatmentPlanListView: string[]; //To show selected treatment plans\n  treatmentPlanList: TreatmentPlan[] = [];\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  feesConfigListViewColumns: string[] = ['treatmentPlanId', 'baseFee', 'ageGroupId', 'ageGroupPercent', 'toothGroupId', 'toothGroupPercent', 'totalFee', 'notes'];\n  feesConfigListDataSource : MatTableDataSource<FeeConfigView>;\n  commonService: CommonService;\n\n  constructor(public snackBar: MatSnackBar,\n    public dialog: MatDialog, public httpCom: HttpcommService) { }\n\n  ngOnInit() {\n    this.initializeValiables();\n    this.commonService = new CommonService();\n  }\n\n  prescriptionFromControl = new FormControl(0);\n  minCharToSearch = 3;\n\n  initializeValiables() {\n    this.selectedPatient = new Patient();\n    this.prescriptionHistoryView = new PrescriptionHistoryView();\n    this.isPatientLoading = false;\n    this.isPatientLoaded = false;\n    this.isPatientSelected = false;\n    this.clinicalFindingsView = [];\n    this.httpCom.getMedicalMaster().subscribe(\n      resp => {\n        if (resp.status == 'SUCCESS') {\n          for (let i = 0; i < resp.resp.length; i++) {\n            this.mhList.push(resp.resp[i].medicalHistoryName);\n          }\n        }\n      }\n    );\n    this.httpCom.getTreatmentPlan().subscribe(\n      resp => {\n        if (resp.status == 'SUCCESS') {\n          this.treatmentPlanList = resp.resp;\n        }\n      }\n    );\n    this.treatmentPlanListView = [];\n    this.medicineMasterViewList = [];\n    this.feesConfigListView = [];\n    this.feesConfigListDataSource = new MatTableDataSource<FeeConfigView>();\n    \n  }\n\n  fetchPatient(event: any) {\n    // console.log(event.key);\n    if ((this.selectedPatient.firstName !== undefined && this.selectedPatient.firstName.length >= this.minCharToSearch) ||\n      (this.selectedPatient.lastName !== undefined && this.selectedPatient.lastName.length >= this.minCharToSearch)) {\n      this.searchPatient();\n    } else {\n      if (this.selectedPatient && this.selectedPatient.firstName && this.selectedPatient.firstName.length > 0\n        && this.selectedPatient.lastName && this.selectedPatient.lastName.length > 0\n      ) {\n        this.isPatientLoading = true;\n      } else {\n        this.isPatientLoading = false;\n      }\n      this.isPatientLoaded = false;\n    }\n  }\n\n  dateValidate(event: MatDatepickerInputEvent<Date>) {\n    console.log('Prescptn ' + event.value);\n    let parsedDate = this.commonService.getParsedDate(event.value);\n    if (parsedDate && parsedDate.length == 3) {\n      this.selectedPatient.dobDd = parsedDate[0];\n      this.selectedPatient.dobMm = parsedDate[1];\n      this.selectedPatient.dobYy = parsedDate[2];\n      this.searchPatient();\n    }\n  }\n  searchPatient() {\n    //search patient\n    this.isPatientLoading = true;\n    this.isPatientLoaded = false;\n    this.httpCom.getPatient(this.selectedPatient).subscribe(resp => {\n      if (resp && resp.status === 'SUCCESS') {\n        if (resp.status && resp.status.length > 0)\n          this.patientDataSource = resp.resp;\n        this.isPatientLoaded = true;\n        this.isPatientLoading = false;\n      } else {\n        //TODO: navigate to add patient tab\n      }\n    });\n  }\n\n  mouseOverFn(element: Patient) {\n    this.expandedElement = element;\n  }\n\n  mouseOutFn(element: Patient) {\n    // this.expandedElement = new Patient();\n  }\n\n  selectedElement(element: Patient) {\n    this.selectedPatient = element;\n    this.tabSelection(1);\n  }\n\n  tabSelection(tabIndex: number) {\n    this.prescriptionFromControl.setValue(tabIndex);\n  }\n\n  openDialog(): void {\n    this.httpCom.getClinicalFindings().subscribe(\n      response => {\n        if (response.status == 'SUCCESS') {\n          this.clinicalFindings = response.resp;\n          this.httpCom.getToothQuadrents().subscribe(\n            response => {\n              if (response.status == 'SUCCESS') {\n                this.toothQuadrents = response.resp;\n                this.dialogData.clinicalFindingsComposite = this.clinicalFindings;\n                this.dialogData.toothQuadrentsComposite = this.toothQuadrents;\n\n                const dialogRef = this.dialog.open(DialogToothClinicalfindings, {\n                  width: '700px',\n                  data: this.dialogData\n                });\n\n                dialogRef.afterClosed().subscribe(result => {\n                  if (result && result.length > 0) {\n                    this.cftMapArray = result;\n                    for (let i = 0; i < this.cftMapArray.length; i++) {\n                      let teeths: string = '';\n                      for (let j = 0; j < this.cftMapArray[i].teeth.length; j++) {\n                        teeths += ' ' + this.cftMapArray[i].teeth[j].toothIndex;\n                      }\n                      this.clinicalFindingsView.push(this.cftMapArray[i].clinicalFinding.fname + ' - ' + teeths);\n                      if (this.treatmentPlanList && this.treatmentPlanList.length > 0) {\n                        this.treatmentPlanList.map(tpl => {\n                          if (tpl.clinicalFinding == this.cftMapArray[i].clinicalFinding.fid) {\n\n                            //Concurrency check\n                            if (this.treatmentPlanListView.indexOf(tpl.trtName) < 0) {\n                              this.treatmentPlanListView.push(tpl.trtName);\n\n                              //Getting medicines\n                              this.httpCom.getMedicineView(this.httpCom.getMedicineUrl\n                                + this.httpCom.getMedicineUrlPart1\n                                + tpl.trtId\n                                + this.httpCom.getMedicineUrlPart2\n                                + this.selectedPatient.age\n                              ).subscribe(\n                                resp => {\n                                  if (resp.status === 'SUCCESS') {\n                                    resp.resp.map(medicineMasterView => {\n                                      this.medicineMasterViewList.push(medicineMasterView);\n                                    });\n                                  } else {\n                                    console.log('resp error: ' + resp);\n                                  }\n                                }\n                              );\n                            }\n                            //Getting fees config\n                            let feeConfigRequestListView: FeeConfigRequestListView[] = [];\n                            this.cftMapArray[i].teeth.forEach(t => {\n                              let feeConfigRequestView = new FeeConfigRequestListView();\n                              feeConfigRequestView.tooth_grp_idx = t.toothGroup;\n                              feeConfigRequestView.trtmnt_id = tpl.trtId;\n                              feeConfigRequestListView.push(feeConfigRequestView);\n                            })\n                            //Print data\n                            console.log('Fee config data:', feeConfigRequestListView);\n\n                            this.httpCom.getFeeConfigList(this.selectedPatient.age, feeConfigRequestListView).subscribe(resp => {\n                              if (resp && resp.status === 'SUCCESS') {\n                                resp.resp.forEach(element => {\n                                  let feeConfigData : FeeConfigView = element;\n                                  if(feeConfigData && feeConfigData.totalFee > 0){\n                                    this.feesConfigListView.push(element);\n                                    this.feesConfigListDataSource.data = this.feesConfigListView;\n                                  }\n                                });\n                                this.getTotalFee();\n                                console.log('Fee config object:', this.feesConfigListView);\n                              }\n                            });\n                          }\n                        });\n                      } else {\n                        console.log(\"Treatment plan empty\");\n                      }\n                    }\n                  }\n                });\n              }\n            }\n          );\n        }\n      }\n    );\n  }\n\n  totalFees : number = 0;\n  getTotalFee() {\n    this.totalFees = this.feesConfigListView && this.feesConfigListView.length > 0 ? \n      this.feesConfigListView.map(fee => fee.totalFee).reduce((prevTotal, curr) => prevTotal + curr, 0) :\n      0;\n  }\n\n  addTreatmentPlan(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    if ((value || '').trim()) {\n      this.treatmentPlanListView.push(value.trim());\n    }\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeChip(s: string | MedicineView, n: number) {\n    //Remove Treatment plan\n    if (n == 1 && typeof s === 'string') {\n      let idx = this.treatmentPlanListView.indexOf(s);\n      if (idx >= 0) {\n        this.treatmentPlanListView.splice(idx, 1);\n\n        //TODO: Also remove medicines and fee configurations\n      }\n    }\n    //Remove medicines\n    else if (n == 2 && s instanceof MedicineView) {\n      let idx = this.medicineMasterViewList.indexOf(s);\n      if (idx >= 0) {\n        this.medicineMasterViewList.splice(idx, 1);\n      }\n    }\n  };\n\n  removeFees(index : number){\n    this.feesConfigListView.splice(index,1);\n    this.feesConfigListDataSource.data = this.feesConfigListView;\n    this.getTotalFee()\n  }\n\n  //Function for adding custom medicines\n  addMedicine(event: MatChipInputEvent) {\n    let customMedicineMaster = new MedicineView();\n    const input = event.input;\n    let data = event.value;\n    if ((data || '').trim()) {\n      let dataParts: string[] = data.split(' -- ');\n      if (dataParts.length == 2) {\n        customMedicineMaster.medicineName = dataParts[0];\n        customMedicineMaster.dosage = dataParts[1];\n        this.medicineMasterViewList.push(customMedicineMaster);\n      } else {\n        console.log('Error medicine format');\n      }\n    }\n    if (input) {\n      input.value = '';\n    }\n  }\n\n\n  createNextAppo(event: MatDatepickerInputEvent<Date>) {\n    console.log('next appo' + event.value);\n    this.prescriptionHistoryView.nextAppointment = event.value.getTime()\n  }\n\n  minDate: Date = new Date();\n  todayMillis = this.minDate.getTime();\n  maxMillis = this.todayMillis + (5 * 86400 * 1000);\n  maxDate = new Date(this.maxMillis);\n\n\n  createAndSubmitPrescription() {\n    this.dashboardView = new DashboardView();\n    this.dashboardView.fbl = []\n    this.feesConfigListView.map(f => {\n      let fb = new FeesBreakupView()\n      fb.amount = f.totalFee\n      fb.notes = f.notes\n      fb.trtmntPlanRef = f.treatmentPlanId\n      fb.patientId = this.selectedPatient.pid\n      this.dashboardView.fbl.push(fb)\n    })\n    this.dashboardView.medhv = []\n    this.medicineMasterViewList.map(m=>{\n      let medh = new MedicineHistoryView()\n      medh.medicineName = m.medicineName\n      medh.diseaseCode = m.diseaseCode\n      medh.diseaseName = m.diseaseName\n      medh.dosage = m.dosage\n      medh.patientId = this.selectedPatient.pid\n      this.dashboardView.medhv.push(medh)\n    })\n    \n    this.dashboardView.mhv = [];\n    this.medicalHistoryForm.value.map(v => {\n      let view = new MedicalHistoryView();\n      view.medicalHistoryName = v;\n      view.patientId = this.selectedPatient.pid;\n      this.dashboardView.mhv.push(view);\n    });\n    this.dashboardView.pHistory = this.prescriptionHistoryView\n    this.dashboardView.pHistory.patientId = this.selectedPatient.pid\n    console.log(JSON.stringify(this.dashboardView))\n    this.httpCom.addDashBoard(this.dashboardView).subscribe(\n      resp => {\n        if(resp.status === 'SUCCESS'){\n          //Do something and print prescription\n          console.log(JSON.stringify(resp.resp));\n        }\n      }\n    );\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\nexport class CompositDialogBoxData {\n  toothQuadrentsComposite: ToothQuadrentView[];\n  clinicalFindingsComposite: ClinicalFindingView[];\n}\n\nexport class ClinicalFindingToothMapping {\n  clinicalFinding: ClinicalFindingView;\n  teeth: ToothQuadrentView[];\n}\n//Dialog box to select clinical findings mapped with tooth index\n@Component({\n  selector: 'dialog-tooth-cf',\n  templateUrl: 'dialog-tooth-cf.html',\n  styleUrls: ['./create-prescription.component.css'],\n})\nexport class DialogToothClinicalfindings {\n\n  cfTextToBeShownOnUi = [];\n  originalCfList: string[] = [];\n  filteredCfList: Observable<string[]>;\n  toothForm = new FormControl();\n  clinicalFindingForm = new FormControl();\n  // readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  cftMapArray: ClinicalFindingToothMapping[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogToothClinicalfindings>,\n    @Inject(MAT_DIALOG_DATA) public data: CompositDialogBoxData) { }\n\n  ngOnInit() {\n    for (let i = 0; i < this.data.clinicalFindingsComposite.length; i++) {\n      this.originalCfList.push(this.data.clinicalFindingsComposite[i].fname);\n    };\n    this.startFilter1();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  };\n\n  getOrderedList(grp: number, isAsc: boolean = false): ToothQuadrentView[] {\n\n    return this.data.toothQuadrentsComposite\n      .filter(tooth => tooth.toothQdr == grp)\n      .sort((a: ToothQuadrentView, b: ToothQuadrentView) => {\n        if (isAsc && a.toothIndex > b.toothIndex) return 1;\n        else if (!isAsc && a.toothIndex < b.toothIndex) return 1;\n        // return 0;\n      });\n  }\n\n  checkTooth(t: ToothQuadrentView) {\n    t.selected = !t.selected;\n  }\n\n  add() {\n    if (this.originalCfList.includes(this.clinicalFindingForm.value)) {\n\n      // let selectedToothList: number[] = this.toothForm.value;\n      let cft = new ClinicalFindingToothMapping();\n      cft.teeth = [];\n\n      // for (let i = 0; i < selectedToothList.length; i++) {\n      //   for (let j = 0; j < this.data.toothQuadrentsComposite.length; j++) {\n      //     if (this.data.toothQuadrentsComposite[j].toothIndex == selectedToothList[i]) {\n      //       cft.teeth.push(this.data.toothQuadrentsComposite[j]);\n      //       break;\n      //     }\n      //   }\n      // }\n      let selectedToothIndexes: string = '';\n      this.data.toothQuadrentsComposite.map(tooth => {\n        {\n          if (tooth.selected) {\n            cft.teeth.push(tooth);\n            selectedToothIndexes += ' ' + tooth.toothIndex;\n          }\n          tooth.selected = false;\n        }\n      });\n      this.cfTextToBeShownOnUi.push(this.clinicalFindingForm.value + '-' + selectedToothIndexes);\n\n      for (let k = 0; k < this.data.clinicalFindingsComposite.length; k++) {\n        if (this.data.clinicalFindingsComposite[k].fname === this.clinicalFindingForm.value) {\n          cft.clinicalFinding = this.data.clinicalFindingsComposite[k];\n          break;\n        }\n      }\n      this.cftMapArray.push(cft);\n      // console.log(JSON.stringify(this.cftMapArray));\n    } else {\n      // Show error\n    }\n    // this.toothForm.setValue('');\n    this.clinicalFindingForm.setValue('');\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.cftMapArray);\n  }\n\n  remove(s: string): void {\n    const index = this.cfTextToBeShownOnUi.indexOf(s);\n    if (index >= 0) {\n      this.cfTextToBeShownOnUi.splice(index, 1);\n    }\n    let cfName = s.substring(0, s.indexOf(\"-\"));\n    for (let l = 0; l < this.cftMapArray.length; l++) {\n      if (this.cftMapArray[l].clinicalFinding.fname === cfName) {\n        this.cftMapArray.splice(l, 1);\n      }\n    }\n    // console.log(JSON.stringify(this.cftMapArray));\n  }\n\n  setSelect(t: ToothQuadrentView) {\n    alert('Selected:' + t.toothIndex);\n  }\n\n  startFilter1() {\n    this.filteredCfList = this.clinicalFindingForm.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    return this.originalCfList.filter(option => option.toLowerCase().includes(value.toLowerCase()));\n    // return this.originalCfList.filter(option => option.toLowerCase().indexOf(value.toLowerCase()) === 0);\n  }\n}","module.exports = \"<h1 mat-dialog-title>Create Clinical Findings</h1>\\r\\n<div mat-dialog-content>\\r\\n    <!-- <mat-list>\\r\\n        <h3 mat-subheader>Clinical Findings</h3>\\r\\n        <mat-list-item *ngFor=\\\"let cf of data.clinicalFindingsComposite\\\">\\r\\n            <mat-icon mat-list-icon>notes</mat-icon>\\r\\n            <h4 mat-line>Name : {{cf.fname}}</h4>\\r\\n            <p mat-line>Desc : {{cf.fdesc}} </p>\\r\\n        </mat-list-item>\\r\\n    </mat-list> -->\\r\\n    <form class=\\\"example-form\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" [formControl]=\\\"clinicalFindingForm\\\"\\r\\n                [matAutocomplete]=\\\"auto2\\\">\\r\\n            <mat-autocomplete autoActiveFirstOption #auto2=\\\"matAutocomplete\\\">\\r\\n                <mat-option *ngFor=\\\"let cfdd of filteredCfList | async\\\" [value]=\\\"cfdd\\\">\\r\\n                    {{cfdd}}\\r\\n                </mat-option>\\r\\n            </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n    </form>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <!-- <mat-form-field>\\r\\n        <mat-select placeholder=\\\"Tooth\\\" [formControl]=\\\"toothForm\\\" multiple>\\r\\n            <mat-option *ngFor=\\\"let tooth of data.toothQuadrentsComposite\\\" [value]=\\\"tooth.toothIndex\\\">{{tooth.toothIndex}}</mat-option>\\r\\n        </mat-select>\\r\\n    </mat-form-field> -->\\r\\n\\r\\n    <table>\\r\\n        <tr>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(1)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <!-- (click)=\\\"setSelect(t)\\\" -->\\r\\n                <label>\\r\\n                    <input  class=\\\"custom_mat-radio-button\\\" type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled \\r\\n                    />\\r\\n                    {{t.toothIndex}}\\r\\n                </label>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(2, true)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                    <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                    {{t.toothIndex}}\\r\\n                </label>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(3)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                {{t.toothIndex}}\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let t of getOrderedList(4, true)\\\" class=\\\"rcorners2\\\" (click)=\\\"checkTooth(t)\\\">\\r\\n                <input type=\\\"checkbox\\\" name=\\\"all\\\" value=\\\"{{t.toothIndex}}\\\" [checked]=\\\"t.selected\\\" disabled />\\r\\n                <!-- (change)=\\\"checkTooth(t)\\\" -->\\r\\n                {{t.toothIndex}}\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n\\r\\n    <p>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\r\\n            Select <mat-icon aria-label=\\\"Select\\\">check_circle_outline</mat-icon>\\r\\n        </button>\\r\\n    </p>\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <mat-chip-list #chipList>\\r\\n                <mat-chip *ngFor=\\\"let cf of cfTextToBeShownOnUi\\\" selectable=\\\"true\\\" removable=\\\"true\\\" (removed)=\\\"remove(cf)\\\">\\r\\n                    {{cf}}\\r\\n                    <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                </mat-chip>\\r\\n                <input placeholder=\\\"Result\\\" disabled [matChipInputFor]=\\\"chipList\\\" matChipInputAddOnBlur=\\\"true\\\">\\r\\n                <!-- \\r\\n                    (matChipInputTokenEnd)=\\\"addChip($event)\\\" \\r\\n                    [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                -->\\r\\n            </mat-chip-list>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n    <button mat-button (click)=\\\"closeDialog()\\\">Done</button>\\r\\n</div>\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {AdminComponent} from './admin/admin.component';\nimport { MaterialTestComponent } from './material-test/material-test.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'test', component: MaterialTestComponent },\n  // { path: 'heroes', component: HeroesComponent },\n  // { path: 'app-material-nav', component: MaterialNavComponent},\n  // { path: 'app-material-dashboard', component: MaterialDashboardComponent},\n  // { path: 'app-material-table', component: MaterialTableComponent},\n  // { path: 'angular-material-component', component: AngularComponentsComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  declarations: [],\n  exports: [\n    RouterModule\n  ]\n})\nexport class DashRoutingModule {\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 800px;\\r\\n    min-width: 50px;\\r\\n    margin-left: 50px;\\r\\n    margin-top: 30px;\\r\\n    width : 100%;\\r\\n  }\\r\\n  \\r\\n  .expansion-margin {\\r\\n    max-width: 1000px;\\r\\n    margin-left: 150px;\\r\\n    margin-top: 30px;\\r\\n  }\\r\\n  \\r\\n  .example-section {\\r\\n    display: flex;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    height: 60px;\\r\\n  }\\r\\n  \\r\\n  .example-margin {\\r\\n    /* margin: 0 10px; */\\r\\n    margin-top: 20px;\\r\\n    margin : 5px 10px;\\r\\n  }\\r\\n  \\r\\n  /* .mat-radio-button ~ .mat-radio-button {\\r\\n    padding: 36px;\\r\\n  } */\\r\\n  \\r\\n  .example-radio-group-column {\\r\\n    /* display: inline-flex; */\\r\\n    /* flex-direction: column; */\\r\\n  }\\r\\n  \\r\\n  .example-icon-radio-button {\\r\\n    margin: 0px;\\r\\n    padding-left: 27px;\\r\\n  }\\r\\n  \\r\\n  .example-half-width{\\r\\n    width: 50%;\\r\\n  }\\r\\n  \\r\\n  .icon-male {\\r\\n    background: url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22%3F%3E%3C!DOCTYPE svg PUBLIC %22-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN%22 %22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.1%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M9%2C9C10.29%2C9 11.5%2C9.41 12.47%2C10.11L17.58%2C5H13V3H21V11H19V6.41L13.89%2C11.5C14.59%2C12.5 15%2C13.7 15%2C15A6%2C6 0 0%2C1 9%2C21A6%2C6 0 0%2C1 3%2C15A6%2C6 0 0%2C1 9%2C9M9%2C11A4%2C4 0 0%2C0 5%2C15A4%2C4 0 0%2C0 9%2C19A4%2C4 0 0%2C0 13%2C15A4%2C4 0 0%2C0 9%2C11Z%22 %2F%3E%3C%2Fsvg%3E\\\");\\r\\n    height: 27px;\\r\\n    width: 22px;\\r\\n    display: block;\\r\\n    /* Other styles here */\\r\\n}\\r\\n  \\r\\n  .icon-female {\\r\\n  background: url(\\\"data:image/svg+xml,%3C%3Fxml version%3D%221.0%22 encoding%3D%22UTF-8%22%3F%3E%3C!DOCTYPE svg PUBLIC %22-%2F%2FW3C%2F%2FDTD SVG 1.1%2F%2FEN%22 %22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22 version%3D%221.1%22 width%3D%2224%22 height%3D%2224%22 viewBox%3D%220 0 24 24%22%3E%3Cpath d%3D%22M12%2C4A6%2C6 0 0%2C1 18%2C10C18%2C12.97 15.84%2C15.44 13%2C15.92V18H15V20H13V22H11V20H9V18H11V15.92C8.16%2C15.44 6%2C12.97 6%2C10A6%2C6 0 0%2C1 12%2C4M12%2C6A4%2C4 0 0%2C0 8%2C10A4%2C4 0 0%2C0 12%2C14A4%2C4 0 0%2C0 16%2C10A4%2C4 0 0%2C0 12%2C6Z%22 %2F%3E%3C%2Fsvg%3E\\\");\\r\\n  height: 27px;\\r\\n  width: 22px;\\r\\n  display: block;\\r\\n  /* Other styles here */\\r\\n}\"","module.exports = \"<div class=\\\"dash\\\">\\n  <mat-tab-group>\\n\\n    <mat-tab label=\\\"Create Prescription\\\">\\n      <div class=\\\"expansion-margin\\\">\\n        <app-create-prescription>Loading...</app-create-prescription>\\n      </div>\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"Add Patient\\\">\\n\\n      <div class=\\\"expansion-margin\\\">\\n\\n        <!-- Accordian expansion panel -->\\n        <mat-accordion>\\n          <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Basic data\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Section for name, date of birth, weight, blood group\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n\\n            <mat-card class=\\\"example-card\\\">\\n              <mat-card-content>\\n                <table>\\n                  <tr>\\n                    <td>\\n                      <!-- First Name -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Max {{config.first_name_len}} characters\\\">\\n                          <input matInput [maxlength]=\\\"config.first_name_len\\\" placeholder=\\\"First name\\\" [(ngModel)]=\\\"patient.firstName\\\" (keyup)='onKeyUp($event)'\\n                            required>\\n                          <mat-hint align=\\\"end\\\">{{patient.firstName?.length || 0}}/{{config.first_name_len}}</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Last Name -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Max {{config.last_name_len}} characters\\\">\\n                          <input matInput maxlength=15 placeholder=\\\"Last name\\\" [(ngModel)]=\\\"patient.lastName\\\" required>\\n                          <mat-hint align=\\\"end\\\">{{patient.lastName?.length || 0}}/{{config.last_name_len}}</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Sex -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <div style=\\\"display: inline;\\\">\\n                          <span>Sex</span>\\n                          <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"patient.sex\\\">\\n                            <span class=\\\"icon-male\\\">\\n                              <mat-radio-button class=\\\"example-icon-radio-button\\\" value=\\\"male\\\"></mat-radio-button>\\n                            </span>\\n                            <span class='icon-female'>\\n                              <mat-radio-button class=\\\"example-icon-radio-button\\\" value=\\\"female\\\"></mat-radio-button>\\n                            </span>\\n                          </mat-radio-group>\\n                        </div>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n\\n                      <!-- </td>\\n                    <td> -->\\n                      <!-- DOB -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Date of birth :\\n                        </span>\\n                        <mat-form-field>\\n                          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Select from calender\\\" (dateChange)=\\\"dateAddEvent('change', $event)\\\"\\n                            disabled>\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                          <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <!-- </tr>\\n                  <tr> -->\\n                    <td>\\n\\n                      <!-- </td>\\n                    <td> -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Blood Group :\\n                        </span>\\n                        <!-- Blood group -->\\n                        <mat-select class=\\\"example-half-width\\\" placeholder=\\\"Blood group\\\" [(ngModel)]=\\\"patient.bloodGroup\\\" name=\\\"bloodGroup\\\">\\n                          <mat-option *ngFor=\\\"let bg of bloodGroups\\\" [value]=\\\"bg.value\\\">\\n                            {{bg.viewValue}}\\n                          </mat-option>\\n                        </mat-select>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <!-- Height -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Height(cm) :\\n                        </span>\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                          <input matInput maxlength=3 placeholder=\\\"Height\\\" [(ngModel)]=\\\"patient.height\\\" required>\\n                          <mat-hint align=\\\"end\\\">{{patient.height?.length || 0}}/3</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Weight -->\\n                      <div class=\\\"example-margin\\\">\\n                        <span>\\n                          Weight(kg) :\\n                        </span>\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                          <input matInput maxlength=3 placeholder=\\\"Weight\\\" [(ngModel)]=\\\"patient.weight\\\" required>\\n                          <mat-hint align=\\\"end\\\">{{patient.weight?.length || 0}}/3</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </mat-card-content>\\n            </mat-card>\\n            <mat-action-row>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n\\n          <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Contact data\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Section for phone number, email and address\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <mat-card class=\\\"example-card\\\">\\n              <mat-card-content>\\n                <table>\\n                  <tr>\\n                    <td>\\n                      <!-- Contact Number -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Enter in digits\\\" class=\\\"example-full-width\\\">\\n                          <span matPrefix>+91 &nbsp;</span>\\n                          <input type=\\\"tel\\\" matInput placeholder=\\\"Contact number\\\" [(ngModel)]=\\\"patient.contactNo1\\\">\\n                          <mat-icon matSuffix>contact_phone</mat-icon>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <!-- Email address -->\\n                      <div class=\\\"example-container example-margin\\\">\\n                        <mat-form-field hintLabel=\\\"Optional email\\\">\\n                          <input matInput maxlength=30 placeholder=\\\"Enter email\\\" type=\\\"email\\\" [(ngModel)]=\\\"patient.email\\\">\\n                          <mat-icon matSuffix>contact_mail</mat-icon>\\n                          <mat-hint align=\\\"end\\\">{{patient.email?.length || 0}}/30</mat-hint>\\n                        </mat-form-field>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                </table>\\n\\n                <!-- Address 1 -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Address1\\\" [(ngModel)]=\\\"patient.address1\\\" required></textarea>\\n                    <button mat-button *ngIf=\\\"patient.address1\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"patient.address1=''\\\">\\n                      <mat-icon>close</mat-icon>\\n                    </button>\\n                  </mat-form-field>\\n                </div>\\n\\n                <!-- Address 2 -->\\n                <div class=\\\"example-container example-margin\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea matInput placeholder=\\\"Address2\\\" [(ngModel)]=\\\"patient.address2\\\"></textarea>\\n                    <button mat-button *ngIf=\\\"patient.address2\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"patient.address2=''\\\">\\n                      <mat-icon>close</mat-icon>\\n                    </button>\\n                  </mat-form-field>\\n                </div>\\n              </mat-card-content>\\n            </mat-card>\\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n\\n          <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Configuration data\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Optional data\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <span>Discount</span>\\n            <table>\\n              <tr>\\n                <td>\\n                  <mat-radio-group class=\\\"example-margin\\\" [(ngModel)]=\\\"patient.discountType\\\">\\n                    <mat-radio-button value=\\\"percentage\\\">Percent</mat-radio-button>\\n                    <mat-radio-button value=\\\"flat\\\">Flat</mat-radio-button>\\n                  </mat-radio-group>\\n                </td>\\n                <td>\\n                  <div class=\\\"example-margin\\\">\\n                    <mat-form-field hintLabel=\\\"Enter in digits\\\">\\n                      <input matInput maxlength=\\\"5\\\" placeholder=\\\"Discount\\\" [(ngModel)]=\\\"patient.discount\\\">\\n                      <mat-hint align=\\\"end\\\">{{patient.discount?.length || 0}}/5</mat-hint>\\n                    </mat-form-field>\\n                  </div>\\n                </td>\\n              </tr>\\n            </table>\\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"submitPatient()\\\">Add Patient</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n\\n\\n        </mat-accordion>\\n\\n      </div>\\n    </mat-tab>\\n\\n  </mat-tab-group>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PatientService } from '../services/patient.service';\nimport { Patient, BloodGroup } from '../models/models';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackhelperComponent } from '../snackhelper/snackhelper.component';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport {FormControl, Validators} from '@angular/forms';\nimport { HttpcommService } from '../services/httpcomm.service'\nimport { CommonService } from '../services/commonservice.service';\n\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  patient : Patient;\n  commonService = new CommonService();\n  \n  //Place holder for dynamic field validation\n  config = {\n    \"first_name_len\" : 20,\n    \"last_name_len\" : 15\n  };\n  firstName : string;\n  lastName : string;\n  bloodGroups : BloodGroup[] = [\n    {value : 'A_POSITIVE', viewValue : 'A+'},\n    {value : 'A_NEGETIVE', viewValue : 'A-'},\n    {value : 'B_POSITIVE', viewValue : 'B+'},\n    {value : 'B_NEGETIVE', viewValue : 'B-'},\n    {value : 'AB_POSITIVE', viewValue : 'AB+'},\n    {value : 'AB_NEGETIVE', viewValue : 'AB-'},\n    {value : 'O_POSITIVE', viewValue : 'O+'},\n    {value : 'O_NEGETIVE', viewValue : 'O-'},\n  ];\n\n  httpService : HttpcommService;\n\n  patientEmailControl = new FormControl('',[\n    Validators.email,\n    Validators.required\n  ]);\n\n  //Accordian expansion bar control\n  step: number = 0;\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n  constructor( public snackBar: MatSnackBar, public httpClient: HttpClient) { \n    this.patient = new Patient();\n    // this.snackBar.openFromComponent(SnackbarComponent,{\n    //   duration : 2000,\n    // })\n    //public patientService : PatientService,\n    this.httpService = new HttpcommService(httpClient);\n  }\n\n  ngOnInit() {          \n    this.getRealPatient();\n  }\n\n  getRealPatient(){\n\n    this.httpService.getPatient(this.patient).subscribe(\n      resp => {\n        if(resp && resp.status === 'SUCCESS'){\n          if(resp.resp && resp.resp.length > 0){\n            this.patient = resp.resp[0];\n            this.firstName = this.patient.firstName;\n            this.lastName = this.patient.lastName;\n          }else{\n\n          }\n        }else{\n          \n        }\n      }\n    )\n  }\n  submitPatient(){\n    this.nextStep();\n    console.log('Sending from dash');\n    console.log(this.patient);\n    this.httpService.addPatient(this.patient).subscribe(\n      s => {\n        console.log('Receieved response');\n        console.log('s');\n      }\n    )\n  }\n  onKeyUp(event : any){\n    console.log(event);\n    console.log(event.key);\n    // this.snackBar.open('demo','',{\n    this.snackBar.openFromComponent(SnackhelperComponent,{\n      duration : 2000,\n    })\n  }\n\n  dateAddEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    \n    let parsedDate : number[] = this.commonService.getParsedDate(event.value);\n    if(parsedDate && parsedDate.length == 3){\n      this.patient.dobDd = parsedDate[0];\n      this.patient.dobMm = parsedDate[1];\n      this.patient.dobYy = parsedDate[2];\n    }\n  }\n\n\n\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  tr.example-detail-row {\\r\\n    height: 0;\\r\\n  }\\r\\n  \\r\\n  tr.example-element-row:not(.example-expanded-row):hover {\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  tr.example-element-row:not(.example-expanded-row):active {\\r\\n    background: #efefef;\\r\\n  }\\r\\n  \\r\\n  .example-element-row td {\\r\\n    border-bottom-width: 0;\\r\\n  }\\r\\n  \\r\\n  .example-element-detail {\\r\\n    overflow: hidden;\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  .example-element-diagram {\\r\\n    min-width: 80px;\\r\\n    border: 2px solid black;\\r\\n    padding: 8px;\\r\\n    font-weight: lighter;\\r\\n    margin: 8px 0;\\r\\n    height: 104px;\\r\\n  }\\r\\n  \\r\\n  .example-element-symbol {\\r\\n    font-weight: bold;\\r\\n    font-size: 40px;\\r\\n    line-height: normal;\\r\\n  }\\r\\n  \\r\\n  .example-element-description {\\r\\n    padding: 16px;\\r\\n  }\\r\\n  \\r\\n  /* .example-element-description-attribution {\\r\\n    opacity: 0.5;\\r\\n  } */\\r\\n  \"","module.exports = \"<table mat-table\\n       [dataSource]=\\\"dataSource\\\" multiTemplateDataRows\\n       class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\n  </ng-container>\\n\\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\n      <div class=\\\"example-element-detail\\\"\\n           [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n        <div class=\\\"example-element-diagram\\\">\\n          <div class=\\\"example-element-position\\\"> {{element.position}} </div>\\n          <div class=\\\"example-element-symbol\\\"> {{element.symbol}} </div>\\n          <div class=\\\"example-element-name\\\"> {{element.name}} </div>\\n          <div class=\\\"example-element-weight\\\"> {{element.weight}} </div>\\n        </div>\\n        <div class=\\\"example-element-description\\\">\\n          {{element.description}}\\n          <p>\\n            <!-- <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span> -->\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"selectedElement(expandedElement)\\\">\\n                Select <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">check_circle_outline</mat-icon>\\n            </button>\\n          </p>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\"\\n      class=\\\"example-element-row\\\"\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n      (mouseenter)=\\\"mouseOverFn(element)\\\"\\n      (mouseout)=\\\"mouseOutFn(expandedElement)\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table>\\n\\n\\n<!-- Copyright 2018 Google Inc. All Rights Reserved.\\n    Use of this source code is governed by an MIT-style license that\\n    can be found in the LICENSE file at http://angular.io/license -->\"","import { Component, OnInit } from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-material-test',\n  templateUrl: './material-test.component.html',\n  styleUrls: ['./material-test.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class MaterialTestComponent implements OnInit {\n\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: PeriodicElement;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  mouseOverFn(element : PeriodicElement){\n    console.log(\"mouse enter called\");\n    this.expandedElement = element;\n  }\n\n  mouseOutFn(element : PeriodicElement){\n    console.log(\"mouse out called\");\n    // this.expandedElement = null;\n  }\n\n  selectedElement(element : PeriodicElement){\n    console.log(`Selected position ${element.position}`);\n  }\n\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  description: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];","export class Response {\r\n\r\n    status: string;\r\n    desc: string;\r\n    resp: any;\r\n};\r\nexport class ClinicalFindingView {\r\n    fid: number;\r\n    fdesc: string;\r\n    fname: string;\r\n};\r\nexport class MedicalMaster {\r\n    medicalHistoryName: string;\r\n};\r\nexport class Patient {\r\n    bloodGroup: string;\r\n    contactNo1: number;\r\n    contactNo2: number;\r\n    discountType: string;\r\n    discount: number;\r\n    dobDd: number;\r\n    dobMm: number;\r\n    dobYy: number;\r\n    dobTimestamp: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    tsCreated: number;\r\n    weight: number;\r\n    height: number;\r\n    // image: string;\r\n    email: string;\r\n    address1: string;\r\n    address2: string;\r\n    age: number;\r\n    pid: number;\r\n    sex: string;\r\n};\r\nexport interface BloodGroup {\r\n    value: string;\r\n    viewValue: string;\r\n};\r\nexport class PrescriptionHistoryView {\r\n    prescriptionId: number;\r\n    advice: string;\r\n    chiefComplaint: string;\r\n    clinicalFindings: string;\r\n    investigation: string;\r\n    medicines: string;\r\n    nextAppointment: number;\r\n    note: string;\r\n    patientId: number;\r\n    provisionalDiagnosis: string;\r\n    treatmentDone: string;\r\n    treatmentPlan: string;\r\n    tsCreated: number;\r\n    tsModified: number;\r\n};\r\nexport class ToothQuadrentView {\r\n    toothIndex: number;\r\n    toothGroup: number;\r\n    toothNumber: number;\r\n    toothQdr: number;\r\n    selected: boolean = false;\r\n};\r\nexport class TreatmentPlan {\r\n    trtId: number;\r\n    trtDesc: string;\r\n    trtName: string;\r\n    clinicalFinding: number;\r\n};\r\nexport class MedicineView {\r\n    medicineName: string;\r\n    ageGroup: string;\r\n    treatmentId: number;\r\n    dosage: string;\r\n    clinicalAvailability: number;\r\n    diseaseCode: string;\r\n    diseaseName: string;\r\n    medicineId: number;\r\n};\r\n\r\nexport class FeesBreakupView {\r\n    fId: number;\r\n    amount: number;\r\n    trtmntPlanRef: number;\r\n    notes: string;\r\n    patientId: number;\r\n    prescriptionId: number;\r\n    tsCreated: number;\r\n};\r\n\r\nexport class FeeConfigView {\r\n    feeConfigId: number;\r\n    ageGroupid: string;\r\n    ageGroupPercent: number;\r\n    baseFee: number;\r\n    toothGroupid: number;\r\n    toothGroupPercent: number;\r\n    treatmentPlanId: number;\r\n    totalFee: number;\r\n    notes?: string;\r\n}\r\n\r\nexport class FeeConfigRequestListView {\r\n    tooth_grp_idx: number;\r\n    trtmnt_id: number;\r\n}\r\n\r\nexport class MedicalHistoryView {\r\n    medicalHistoryId: number;\r\n    medicalHistoryName : string\r\n    note: string;\r\n    patientId : number;\r\n    prescriptionId : number;\r\n    severity: string;\r\n    startedFrom: number;\r\n}\r\nexport class MedicineHistoryView {\r\n    medId: number;\r\n    diseaseCode: string;\r\n    diseaseName: string;\r\n    dosage: string;\r\n    medicineName: string\r\n    patientId: number;\r\n    prescriptionId: number;\r\n}\r\nexport class DashboardView {\r\n    pHistory: PrescriptionHistoryView;\r\n    fbl: FeesBreakupView[];\r\n    mhv: MedicalHistoryView[];\r\n    medhv: MedicineHistoryView[];\r\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  message: string[];\n  constructor() {\n    this.message = [];\n  }\n\n  hasValue(s: string): boolean {\n    if (s) {\n      if (s.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  addMessage(msg: string) {\n    this.message.push(msg);\n  }\n\n  getMessages(): string[] {\n    return this.message;\n  }\n\n  validateDate(date: Date): boolean {\n    if (date &&\n      date.getDate() && date.getDate() > 0 &&\n      date.getMonth() && date.getMonth() >= 0 &&\n      date.getFullYear() && date.getFullYear() > 0) return true;\n    return false;\n  }\n\n  getParsedDate(date: Date): number[] {\n    let pd: number[] = null;\n    console.log('Date validation: '+ this.validateDate(date));\n    if (this.validateDate(date)) {\n      pd = [];\n      pd.push(date.getDate());\n      pd.push(date.getMonth() + 1 );\n      pd.push(date.getFullYear());\n    }\n    return pd;\n  }\n}\n","export class DummyResponse{\r\n    public getPatient = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": [\r\n            {\r\n                \"bloodGroup\": \"B_POSITIVE\",\r\n                \"contactNo1\": 9046787913,\r\n                \"contactNo2\": 7980231838,\r\n                \"discountType\": \"flat\",\r\n                \"discount\": 20,\r\n                \"dobDd\": 27,\r\n                \"dobMm\": 3,\r\n                \"dobYy\": 1992,\r\n                \"firstName\": \"sourabh\",\r\n                \"lastName\": \"sadhu\",\r\n                \"tsCreated\": 1534695098485,\r\n                \"age\":24,\r\n                \"height\":169,\r\n                \"sex\":\"male\",\r\n                \"weight\": 80,\r\n                \"image\": null,\r\n                \"email\": \"sadhuait@gmail.com\",\r\n                \"address1\": \"Habra Jaigachi Rathtala North 24 Parganas\",\r\n                \"address2\": \"Trying to write a pretty looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong looooooooooooooooooooong text\",\r\n                \"pid\": 1\r\n            },\r\n            {\r\n                \"bloodGroup\": \"AB_POSITIVE\",\r\n                \"contactNo2\": 9046787913,\r\n                \"contactNo1\": 7980231838,\r\n                \"discountType\": \"flat\",\r\n                \"discount\": 20,\r\n                \"dobDd\": 27,\r\n                \"dobMm\": 3,\r\n                \"dobYy\": 1992,\r\n                \"firstName\": \"gourab\",\r\n                \"lastName\": \"sadhu\",\r\n                \"age\": 20,\r\n                \"tsCreated\": 1534695098485,\r\n                \"weight\": 80,\r\n                \"image\": null,\r\n                \"email\": \"sadhuait@gmail.com\",\r\n                \"address1\": \"Habra\",\r\n                \"address2\": \"looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong looooooooooooooooooooong text\",\r\n                \"pid\": 1\r\n            }\r\n        ]\r\n    };\r\n\r\n    public getTreatmentPlan = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": [\r\n            {\r\n                \"trtId\": 1,\r\n                \"trtDesc\": \"Root canal treatment\",\r\n                \"trtName\": \"RCT\",\r\n                \"clinicalFinding\": 1\r\n            },\r\n            {\r\n                \"trtId\": 2,\r\n                \"trtDesc\": \"Root canal treatment\",\r\n                \"trtName\": \"RCT\",\r\n                \"clinicalFinding\": 4\r\n            },\r\n            {\r\n                \"trtId\": 3,\r\n                \"trtDesc\": \"Extraction\",\r\n                \"trtName\": \"Extraction\",\r\n                \"clinicalFinding\": 2\r\n            },\r\n            {\r\n                \"trtId\": 4,\r\n                \"trtDesc\": \"Oral prophylaxis\",\r\n                \"trtName\": \"Oral prophylaxis\",\r\n                \"clinicalFinding\": 10\r\n            },\r\n            {\r\n                \"trtId\": 5,\r\n                \"trtDesc\": \"Restoration statined teeth\",\r\n                \"trtName\": \"Restoration\",\r\n                \"clinicalFinding\": 9\r\n            },\r\n            {\r\n                \"trtId\": 6,\r\n                \"trtDesc\": \"Prosthesis removable\",\r\n                \"trtName\": \"Prosthesis\",\r\n                \"clinicalFinding\": 10\r\n            },\r\n            {\r\n                \"trtId\": 7,\r\n                \"trtDesc\": \"Prosthesis fixed\",\r\n                \"trtName\": \"Prosthesis\",\r\n                \"clinicalFinding\": 10\r\n            },\r\n            {\r\n                \"trtId\": 8,\r\n                \"trtDesc\": \"Prosthesis implant\",\r\n                \"trtName\": \"Prosthesis\",\r\n                \"clinicalFinding\": 10\r\n            },\r\n            {\r\n                \"trtId\": 9,\r\n                \"trtDesc\": \"Root canal treatment\",\r\n                \"trtName\": \"RCT\",\r\n                \"clinicalFinding\": 10\r\n            }\r\n        ]\r\n    };\r\n\r\n    public getMedicine = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": [\r\n            {\r\n                \"medicineName\": \"med1\",\r\n                \"ageGroup\": \"10to30\",\r\n                \"treatmentId\": 1,\r\n                \"dosage\": \"sokale bikale 1 ta khabar por\",\r\n                \"clinicalAvailability\": 7,\r\n                \"diseaseCode\": \"dCode1\",\r\n                \"diseaseName\": \"dName1\",\r\n                \"ageGroupBean\": null,\r\n                \"treatmentPlan\": null,\r\n                \"medicineId\" : 1\r\n            }\r\n        ]\r\n    };\r\n\r\n    public medicalMaster = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": [\r\n            {\r\n                \"medicalHistoryName\": \"Hyperglycaemia\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Hypertension\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Hypotension\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Asthma\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Cerebro vascular accident\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Cardiac diseases\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Hypothyroidism\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Hyperthyroidism\",\r\n                \"medicalHistories\": null\r\n            },\r\n            {\r\n                \"medicalHistoryName\": \"Drug hypersensitivity\",\r\n                \"medicalHistories\": null\r\n            }\r\n        ]\r\n    };\r\n\r\n    getFeeConfig = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": [\r\n            {\r\n                \"feeConfigId\": 18,\r\n                \"ageGroupId\": \"10to30\",\r\n                \"ageGroupPercent\": 10,\r\n                \"baseFee\": 60,\r\n                \"toothGroupId\": 2,\r\n                \"toothGroupPercent\": 10,\r\n                \"treatmentPlanId\": 1,\r\n                \"totalFee\": 72,\r\n            },\r\n            {\r\n                \"feeConfigId\": -24,\r\n                \"ageGroupId\": \"3to10\",\r\n                \"ageGroupPercent\": 30,\r\n                \"baseFee\": 89,\r\n                \"toothGroupId\": 1,\r\n                \"toothGroupPercent\": 5,\r\n                \"treatmentPlanId\": 2,\r\n                \"totalFee\": 119\r\n            }\r\n        ]\r\n    };\r\n\r\n    getAgeGroup = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": {\r\n            \"groupId\": \"3to13\",\r\n            \"fromAge\": 3,\r\n            \"toAge\": 13\r\n        }\r\n    };\r\n\r\n    clinicalFindingList = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": [\r\n            {\r\n                \"fdesc\": \"desc Caries\",\r\n                \"fid\": 1,\r\n                \"fname\": \"Caries\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Periodontities\",\r\n                \"fid\": 2,\r\n                \"fname\": \"Periodontities\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Grossly decayed\",\r\n                \"fid\": 3,\r\n                \"fname\": \"Grossly decayed\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Root stump\",\r\n                \"fid\": 4,\r\n                \"fname\": \"Root stump\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Attrition\",\r\n                \"fid\": 5,\r\n                \"fname\": \"Attrition\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Cervical abrasion\",\r\n                \"fid\": 6,\r\n                \"fname\": \"Cervical abrasion\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Missing tooth\",\r\n                \"fid\": 7,\r\n                \"fname\": \"Missing tooth\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Calculus\",\r\n                \"fid\": 8,\r\n                \"fname\": \"Calculus\"\r\n            },\r\n            {\r\n                \"fdesc\": \"desc Stain\",\r\n                \"fid\": 9,\r\n                \"fname\": \"Stain\"\r\n            },\r\n            {\r\n                \"fdesc\": \"Not known\",\r\n                \"fid\": 10,\r\n                \"fname\": \"Unknown\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    public toothQuadrentList = {\r\n        \"status\": \"SUCCESS\",\r\n        \"desc\": null,\r\n        \"resp\": [\r\n            {\r\n                \"toothIndex\": 41,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 1,\r\n                \"toothQdr\": 4\r\n            },\r\n            {\r\n                \"toothIndex\": 42,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 2,\r\n                \"toothQdr\": 4\r\n            },\r\n            {\r\n                \"toothIndex\": 43,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 3,\r\n                \"toothQdr\": 4\r\n            },\r\n            {\r\n                \"toothIndex\": 44,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 4,\r\n                \"toothQdr\": 4\r\n            },\r\n            {\r\n                \"toothIndex\": 35,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 5,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 36,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 6,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 37,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 7,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 38,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 8,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 45,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 5,\r\n                \"toothQdr\": 4\r\n            },\r\n            {\r\n                \"toothIndex\": 46,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 6,\r\n                \"toothQdr\": 4\r\n            },\r\n            {\r\n                \"toothIndex\": 12,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 2,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 11,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 1,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 14,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 4,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 13,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 3,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 16,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 6,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 15,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 5,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 18,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 8,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 17,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 7,\r\n                \"toothQdr\": 1\r\n            },\r\n            {\r\n                \"toothIndex\": 22,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 2,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 21,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 1,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 24,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 4,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 23,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 3,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 26,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 6,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 25,\r\n                \"toothGroup\": 3,\r\n                \"toothNumber\": 5,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 28,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 8,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 27,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 7,\r\n                \"toothQdr\": 2\r\n            },\r\n            {\r\n                \"toothIndex\": 32,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 2,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 31,\r\n                \"toothGroup\": 1,\r\n                \"toothNumber\": 1,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 34,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 4,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 33,\r\n                \"toothGroup\": 2,\r\n                \"toothNumber\": 3,\r\n                \"toothQdr\": 3\r\n            },\r\n            {\r\n                \"toothIndex\": 48,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 8,\r\n                \"toothQdr\": 4\r\n            },\r\n            {\r\n                \"toothIndex\": 47,\r\n                \"toothGroup\": 4,\r\n                \"toothNumber\": 7,\r\n                \"toothQdr\": 4\r\n            }\r\n        ]\r\n    };\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map,tap, catchError } from 'rxjs/operators';\nimport { Response,Patient, FeeConfigRequestListView, DashboardView } from '../models/models';\nimport { DummyResponse } from './dummyresponse';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpcommService {\n\n  dummyResp : DummyResponse;\n  dummy = true;\n  resp : Response;\n  baseUrl = 'http://localhost:12000/my-portal/';\n  ageGrpUrl = this.baseUrl + 'age-group/get-age-group?age=';\n  getPatientUrl = this.baseUrl + 'patient/get-patient';\n  addPatientUrl = this.baseUrl + 'patient/add-patient';\n  getAllToothQuadrent = this.baseUrl + 'tooth-qdr/get-all';\n  getAllTreatmentPlan = this.baseUrl + 'trtmnt/get-plan';\n  getAllClinicalFindings = this.baseUrl + 'clinical-finding/get-all';\n  getAllMedicalHistory = this.baseUrl + 'medical-history/get-all'\n  getAllMedicalHistoryMaster = this.baseUrl + 'medical-history/get-medical-master';\n  getMedicineUrl = this.baseUrl + 'medicine/get-medicine';\n  getMedicineUrlPart1 = '?trtmntId=';\n  getMedicineUrlPart2 = '&age=';\n  getFeeConfigUrl = this.baseUrl + 'fee/get-config';\n  getFeeConfigAgeGrpPart1Url = '?age=';\n  getFeeConfigToothGrpPart2Url = '&tooth_grp_idx=';\n  getFeeConfigTrtIdPart3Url = '&trtmnt_id=';\n  getFeeConfigListUrl = this.baseUrl + 'fee/get-config-list';\n  addDashboardUrl = this.baseUrl + 'dashboard/add-prescription'\n  \n  constructor(public http : HttpClient) {\n    this.dummyResp = new DummyResponse();\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({ \n      'Accept' : 'application/json',\n      // 'Content-Type' : 'text/plain',\n      'Content-Type' : 'application/json',\n    })\n  };\n\n  parseData(s : object) : any{\n    return JSON.parse(JSON.stringify(s));\n  }\n\n  getAgeGroup(age : string) : Observable<Response>{\n    if(this.dummy){      \n      return of(this.parseData(this.dummyResp.getPatient));\n    }else{\n      return this.http.get<Response>(this.ageGrpUrl+age, this.httpOptions);\n    }\n  }\n\n  getPatient(patient : Patient) : Observable<Response>{\n    //console.log('http service called');\n    if(this.dummy){\n      //console.log(this.parseData(this.dummyResp.getPatient));\n      return of(this.parseData(this.dummyResp.getPatient));\n    }else{\n      //console.log(1.2);\n      return this.http.post<Response>(this.getPatientUrl,patient,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('test', new Response()))\n        )\n      ;\n    }\n  }\n\n  addPatient(p : Patient) : Observable<Response>{\n    //console.log('Posting patient');\n    //console.log(p);\n    if(this.dummy){\n      //console.log('Dummy post');\n      return of(this.parseData(this.dummyResp.getPatient));\n    }else{\n      //console.log('Real post');\n      return this.http.post<Response>(this.addPatientUrl,p,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('post patient', new Response()))\n        );\n    }\n  }\n\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n   \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n   \n      // TODO: better job of transforming error for user consumption\n      //console.log(`${operation} failed: ${error.message}`);\n   \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  getClinicalFindings() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.clinicalFindingList));\n    }else{\n      return this.http.get<Response>(this.getAllClinicalFindings,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('Get Clinicalfindings',new Response()))\n        )\n    }\n  };\n\n  getToothQuadrents() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.toothQuadrentList));\n    }else{\n      return this.http.get<Response>(this.getAllToothQuadrent,this.httpOptions)\n        .pipe(\n          catchError(this.handleError('Get ToothQuadrent',new Response()))\n        )\n    }\n  };\n\n  getMedicalMaster() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.medicalMaster));\n    }else{\n      return this.genericGetRequest(this.getAllMedicalHistoryMaster);\n    }\n  };\n\n  getTreatmentPlan() : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getTreatmentPlan));\n    }else {\n      return this.genericGetRequest(this.getAllTreatmentPlan);\n    }\n  };\n\n  getMedicineView(url : string) : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getMedicine));\n    }else{\n      return this.genericGetRequest(url);\n    }\n  }\n\n  getFeeConfigList(age : number, feeReqListView : FeeConfigRequestListView[]) : Observable<Response>{\n    if(this.dummy){\n      return of(this.parseData(this.dummyResp.getFeeConfig))\n    }else{\n      let url = this.getFeeConfigListUrl + this.getFeeConfigAgeGrpPart1Url + age;\n      return this.genericPostRequest(url, feeReqListView);\n    }\n  }\n\n  addDashBoard(req : DashboardView) : Observable<Response>{\n    if(!this.dummy){\n      return this.genericPostRequest(this.addDashboardUrl,req,'Add dashboard')\n    }\n  }\n\n  genericGetRequest(url : string, notation : string = 'http get') : Observable<Response>{\n    return this.http.get<Response>(url, this.httpOptions).pipe(catchError(this.handleError(notation, new Response())))\n  }\n\n  genericPostRequest(url : string, reqObject : any, notation : string = 'http post') : Observable<Response>{\n    console.log('Post', url);\n    console.log('Data', reqObject);\n    return this.http.post<Response>(url, reqObject, this.httpOptions).pipe(catchError(this.handleError(notation, new Response())))\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n","module.exports = \".error-snack {\\r\\n    color: darkturquoise;\\r\\n}\"","module.exports = \"<span class=\\\"error-snack\\\">Oops! Something went wrong</span>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snackhelper',\n  templateUrl: './snackhelper.component.html',\n  styleUrls: ['./snackhelper.component.css']\n})\nexport class SnackhelperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}